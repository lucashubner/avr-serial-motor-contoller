
bin/Debug/source-code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000972  00000a06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000972  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000a06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .stab         00002acc  00000000  00000000  00000a0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000214f  00000000  00000000  000034d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00005627  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005638  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00005678  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00005c6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001d  00000000  00000000  0000620e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  0000622b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__ctors_end>
   4:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
   8:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
   c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  10:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  14:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  1c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  24:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  28:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  2c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  30:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  34:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  38:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  3c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  40:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  44:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  48:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  4c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  50:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  54:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  58:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  5c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  60:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  64:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  68:	c0 01       	movw	r24, r0
  6a:	fa 00       	.word	0x00fa	; ????
  6c:	03 01       	movw	r0, r6
  6e:	0c 01       	movw	r0, r24
  70:	15 01       	movw	r2, r10
  72:	1e 01       	movw	r2, r28
  74:	c8 01       	movw	r24, r16
  76:	c8 01       	movw	r24, r16
  78:	78 01       	movw	r14, r16
  7a:	81 01       	movw	r16, r2
  7c:	27 01       	movw	r4, r14
  7e:	30 01       	movw	r6, r0
  80:	39 01       	movw	r6, r18
  82:	42 01       	movw	r8, r4
  84:	4b 01       	movw	r8, r22
  86:	54 01       	movw	r10, r8
  88:	5d 01       	movw	r10, r26
  8a:	66 01       	movw	r12, r12
  8c:	6f 01       	movw	r12, r30
  8e:	c8 01       	movw	r24, r16
  90:	c8 01       	movw	r24, r16
  92:	c8 01       	movw	r24, r16
  94:	8a 01       	movw	r16, r20
  96:	93 01       	movw	r18, r6
  98:	9c 01       	movw	r18, r24
  9a:	a5 01       	movw	r20, r10
  9c:	ae 01       	movw	r20, r28
  9e:	b7 01       	movw	r22, r14
  a0:	af 02       	muls	r26, r31
  a2:	d3 01       	movw	r26, r6
  a4:	dd 01       	movw	r26, r26
  a6:	e7 01       	movw	r28, r14
  a8:	f1 01       	movw	r30, r2
  aa:	fb 01       	movw	r30, r22
  ac:	b8 02       	muls	r27, r24
  ae:	b8 02       	muls	r27, r24
  b0:	5f 02       	muls	r21, r31
  b2:	69 02       	muls	r22, r25
  b4:	05 02       	muls	r16, r21
  b6:	0f 02       	muls	r16, r31
  b8:	19 02       	muls	r17, r25
  ba:	23 02       	muls	r18, r19
  bc:	2d 02       	muls	r18, r29
  be:	37 02       	muls	r19, r23
  c0:	41 02       	muls	r20, r17
  c2:	4b 02       	muls	r20, r27
  c4:	55 02       	muls	r21, r21
  c6:	b8 02       	muls	r27, r24
  c8:	b8 02       	muls	r27, r24
  ca:	b8 02       	muls	r27, r24
  cc:	73 02       	muls	r23, r19
  ce:	7d 02       	muls	r23, r29
  d0:	87 02       	muls	r24, r23
  d2:	91 02       	muls	r25, r17
  d4:	9b 02       	muls	r25, r27
  d6:	a5 02       	muls	r26, r21

000000d8 <__ctors_end>:
  d8:	11 24       	eor	r1, r1
  da:	1f be       	out	0x3f, r1	; 63
  dc:	cf ef       	ldi	r28, 0xFF	; 255
  de:	d8 e0       	ldi	r29, 0x08	; 8
  e0:	de bf       	out	0x3e, r29	; 62
  e2:	cd bf       	out	0x3d, r28	; 61
  e4:	0e 94 78 00 	call	0xf0	; 0xf0 <main>
  e8:	0c 94 b7 04 	jmp	0x96e	; 0x96e <_exit>

000000ec <__bad_interrupt>:
  ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <main>:
                10, // IN2 --> Turn Backward Motor 1
                13, // IN3 --> Turn Foward Motor 2
                14  // IN4 --> Turn FOward Motor 2
                );
*/
    pinMode(9,  OUTPUT);
  f0:	60 e0       	ldi	r22, 0x00	; 0
  f2:	70 e0       	ldi	r23, 0x00	; 0
  f4:	89 e0       	ldi	r24, 0x09	; 9
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z7pinModeii>
    pinMode(10, OUTPUT);
  fc:	60 e0       	ldi	r22, 0x00	; 0
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	8a e0       	ldi	r24, 0x0A	; 10
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z7pinModeii>
    //pinMode(13, OUTPUT);
    //pinMode(14, OUTPUT);

    while(1){
        digitalWrite(9, HIGH);
 108:	61 e0       	ldi	r22, 0x01	; 1
 10a:	70 e0       	ldi	r23, 0x00	; 0
 10c:	89 e0       	ldi	r24, 0x09	; 9
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
        digitalWrite(10, HIGH);
 114:	61 e0       	ldi	r22, 0x01	; 1
 116:	70 e0       	ldi	r23, 0x00	; 0
 118:	8a e0       	ldi	r24, 0x0A	; 10
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 120:	2f ef       	ldi	r18, 0xFF	; 255
 122:	89 e6       	ldi	r24, 0x69	; 105
 124:	98 e1       	ldi	r25, 0x18	; 24
 126:	21 50       	subi	r18, 0x01	; 1
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <main+0x36>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <main+0x40>
 130:	00 00       	nop
        //digitalWrite(13, HIGH);
        //digitalWrite(14, HIGH);
        _delay_ms(1000);
        digitalWrite(9, LOW);
 132:	60 e0       	ldi	r22, 0x00	; 0
 134:	70 e0       	ldi	r23, 0x00	; 0
 136:	89 e0       	ldi	r24, 0x09	; 9
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
        digitalWrite(10, LOW);
 13e:	60 e0       	ldi	r22, 0x00	; 0
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	8a e0       	ldi	r24, 0x0A	; 10
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
 14a:	2f ef       	ldi	r18, 0xFF	; 255
 14c:	89 e6       	ldi	r24, 0x69	; 105
 14e:	98 e1       	ldi	r25, 0x18	; 24
 150:	21 50       	subi	r18, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0x60>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0x6a>
 15a:	00 00       	nop
 15c:	d5 cf       	rjmp	.-86     	; 0x108 <main+0x18>

0000015e <_Z3maplllll>:
#include "common.h"
#include <avr/io.h>

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
 15e:	4f 92       	push	r4
 160:	5f 92       	push	r5
 162:	6f 92       	push	r6
 164:	7f 92       	push	r7
 166:	af 92       	push	r10
 168:	bf 92       	push	r11
 16a:	cf 92       	push	r12
 16c:	df 92       	push	r13
 16e:	ef 92       	push	r14
 170:	ff 92       	push	r15
 172:	0f 93       	push	r16
 174:	1f 93       	push	r17
 176:	cf 93       	push	r28
 178:	df 93       	push	r29
 17a:	cd b7       	in	r28, 0x3d	; 61
 17c:	de b7       	in	r29, 0x3e	; 62
 17e:	29 01       	movw	r4, r18
 180:	3a 01       	movw	r6, r20
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 182:	9b 01       	movw	r18, r22
 184:	ac 01       	movw	r20, r24
 186:	24 19       	sub	r18, r4
 188:	35 09       	sbc	r19, r5
 18a:	46 09       	sbc	r20, r6
 18c:	57 09       	sbc	r21, r7
 18e:	89 89       	ldd	r24, Y+17	; 0x11
 190:	9a 89       	ldd	r25, Y+18	; 0x12
 192:	ab 89       	ldd	r26, Y+19	; 0x13
 194:	bc 89       	ldd	r27, Y+20	; 0x14
 196:	bc 01       	movw	r22, r24
 198:	cd 01       	movw	r24, r26
 19a:	6a 19       	sub	r22, r10
 19c:	7b 09       	sbc	r23, r11
 19e:	8c 09       	sbc	r24, r12
 1a0:	9d 09       	sbc	r25, r13
 1a2:	0e 94 46 04 	call	0x88c	; 0x88c <__mulsi3>
 1a6:	a8 01       	movw	r20, r16
 1a8:	97 01       	movw	r18, r14
 1aa:	24 19       	sub	r18, r4
 1ac:	35 09       	sbc	r19, r5
 1ae:	46 09       	sbc	r20, r6
 1b0:	57 09       	sbc	r21, r7
 1b2:	0e 94 56 04 	call	0x8ac	; 0x8ac <__divmodsi4>
 1b6:	ca 01       	movw	r24, r20
 1b8:	b9 01       	movw	r22, r18
 1ba:	6a 0d       	add	r22, r10
 1bc:	7b 1d       	adc	r23, r11
 1be:	8c 1d       	adc	r24, r12
 1c0:	9d 1d       	adc	r25, r13
}
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	1f 91       	pop	r17
 1c8:	0f 91       	pop	r16
 1ca:	ff 90       	pop	r15
 1cc:	ef 90       	pop	r14
 1ce:	df 90       	pop	r13
 1d0:	cf 90       	pop	r12
 1d2:	bf 90       	pop	r11
 1d4:	af 90       	pop	r10
 1d6:	7f 90       	pop	r7
 1d8:	6f 90       	pop	r6
 1da:	5f 90       	pop	r5
 1dc:	4f 90       	pop	r4
 1de:	08 95       	ret

000001e0 <_Z7pinModeii>:

void pinMode(int pin, int mode){
    // PORTD
    switch(pin){
 1e0:	01 97       	sbiw	r24, 0x01	; 1
 1e2:	8c 31       	cpi	r24, 0x1C	; 28
 1e4:	91 05       	cpc	r25, r1
 1e6:	08 f0       	brcs	.+2      	; 0x1ea <_Z7pinModeii+0xa>
 1e8:	d3 c0       	rjmp	.+422    	; 0x390 <_Z7pinModeii+0x1b0>
 1ea:	8c 5c       	subi	r24, 0xCC	; 204
 1ec:	9f 4f       	sbci	r25, 0xFF	; 255
 1ee:	fc 01       	movw	r30, r24
 1f0:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__tablejump2__>
        case 2:  DDRD = mode==0?  DDRD | (1<< PD0) :   DDRB & ~(1<<PD0);    break;
 1f4:	67 2b       	or	r22, r23
 1f6:	19 f4       	brne	.+6      	; 0x1fe <_Z7pinModeii+0x1e>
 1f8:	8a b1       	in	r24, 0x0a	; 10
 1fa:	81 60       	ori	r24, 0x01	; 1
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <_Z7pinModeii+0x22>
 1fe:	84 b1       	in	r24, 0x04	; 4
 200:	8e 7f       	andi	r24, 0xFE	; 254
 202:	8a b9       	out	0x0a, r24	; 10
 204:	08 95       	ret
        case 3:  DDRD = mode==0?  DDRD | (1<< PD1) :   DDRB & ~(1<<PD1);    break;
 206:	67 2b       	or	r22, r23
 208:	19 f4       	brne	.+6      	; 0x210 <_Z7pinModeii+0x30>
 20a:	8a b1       	in	r24, 0x0a	; 10
 20c:	82 60       	ori	r24, 0x02	; 2
 20e:	02 c0       	rjmp	.+4      	; 0x214 <_Z7pinModeii+0x34>
 210:	84 b1       	in	r24, 0x04	; 4
 212:	8d 7f       	andi	r24, 0xFD	; 253
 214:	8a b9       	out	0x0a, r24	; 10
 216:	08 95       	ret
        case 4:  DDRD = mode==0?  DDRD | (1<< PD2) :   DDRB & ~(1<<PD2);    break;
 218:	67 2b       	or	r22, r23
 21a:	19 f4       	brne	.+6      	; 0x222 <_Z7pinModeii+0x42>
 21c:	8a b1       	in	r24, 0x0a	; 10
 21e:	84 60       	ori	r24, 0x04	; 4
 220:	02 c0       	rjmp	.+4      	; 0x226 <_Z7pinModeii+0x46>
 222:	84 b1       	in	r24, 0x04	; 4
 224:	8b 7f       	andi	r24, 0xFB	; 251
 226:	8a b9       	out	0x0a, r24	; 10
 228:	08 95       	ret
        case 5:  DDRD = mode==0?  DDRD | (1<< PD3) :   DDRB & ~(1<<PD3);    break;
 22a:	67 2b       	or	r22, r23
 22c:	19 f4       	brne	.+6      	; 0x234 <_Z7pinModeii+0x54>
 22e:	8a b1       	in	r24, 0x0a	; 10
 230:	88 60       	ori	r24, 0x08	; 8
 232:	02 c0       	rjmp	.+4      	; 0x238 <_Z7pinModeii+0x58>
 234:	84 b1       	in	r24, 0x04	; 4
 236:	87 7f       	andi	r24, 0xF7	; 247
 238:	8a b9       	out	0x0a, r24	; 10
 23a:	08 95       	ret
        case 6:  DDRD = mode==0?  DDRD | (1<< PD4) :   DDRB & ~(1<<PD4);    break;
 23c:	67 2b       	or	r22, r23
 23e:	19 f4       	brne	.+6      	; 0x246 <_Z7pinModeii+0x66>
 240:	8a b1       	in	r24, 0x0a	; 10
 242:	80 61       	ori	r24, 0x10	; 16
 244:	02 c0       	rjmp	.+4      	; 0x24a <_Z7pinModeii+0x6a>
 246:	84 b1       	in	r24, 0x04	; 4
 248:	8f 7e       	andi	r24, 0xEF	; 239
 24a:	8a b9       	out	0x0a, r24	; 10
 24c:	08 95       	ret
        case 11: DDRD = mode==0?  DDRD | (1<< PD5) :   DDRB & ~(1<<PD5);    break;
 24e:	67 2b       	or	r22, r23
 250:	19 f4       	brne	.+6      	; 0x258 <_Z7pinModeii+0x78>
 252:	8a b1       	in	r24, 0x0a	; 10
 254:	80 62       	ori	r24, 0x20	; 32
 256:	02 c0       	rjmp	.+4      	; 0x25c <_Z7pinModeii+0x7c>
 258:	84 b1       	in	r24, 0x04	; 4
 25a:	8f 7d       	andi	r24, 0xDF	; 223
 25c:	8a b9       	out	0x0a, r24	; 10
 25e:	08 95       	ret
        case 12: DDRD = mode==0?  DDRD | (1<< PD6) :   DDRB & ~(1<<PD6);    break;
 260:	67 2b       	or	r22, r23
 262:	19 f4       	brne	.+6      	; 0x26a <_Z7pinModeii+0x8a>
 264:	8a b1       	in	r24, 0x0a	; 10
 266:	80 64       	ori	r24, 0x40	; 64
 268:	02 c0       	rjmp	.+4      	; 0x26e <_Z7pinModeii+0x8e>
 26a:	84 b1       	in	r24, 0x04	; 4
 26c:	8f 7b       	andi	r24, 0xBF	; 191
 26e:	8a b9       	out	0x0a, r24	; 10
 270:	08 95       	ret
        case 13: DDRD = mode==0?  DDRD | (1<< PD7) :   DDRB & ~(1<<PD7);    break;
 272:	67 2b       	or	r22, r23
 274:	19 f4       	brne	.+6      	; 0x27c <_Z7pinModeii+0x9c>
 276:	8a b1       	in	r24, 0x0a	; 10
 278:	80 68       	ori	r24, 0x80	; 128
 27a:	02 c0       	rjmp	.+4      	; 0x280 <_Z7pinModeii+0xa0>
 27c:	84 b1       	in	r24, 0x04	; 4
 27e:	8f 77       	andi	r24, 0x7F	; 127
 280:	8a b9       	out	0x0a, r24	; 10
 282:	08 95       	ret

        // PORTB
        case 14: DDRB = mode==0?  DDRB | (1<< PB0) :   DDRB & ~(1<<PB0);    break;
 284:	67 2b       	or	r22, r23
 286:	19 f4       	brne	.+6      	; 0x28e <_Z7pinModeii+0xae>
 288:	84 b1       	in	r24, 0x04	; 4
 28a:	81 60       	ori	r24, 0x01	; 1
 28c:	02 c0       	rjmp	.+4      	; 0x292 <_Z7pinModeii+0xb2>
 28e:	84 b1       	in	r24, 0x04	; 4
 290:	8e 7f       	andi	r24, 0xFE	; 254
 292:	84 b9       	out	0x04, r24	; 4
 294:	08 95       	ret
        case 15: DDRB = mode==0?  DDRD | (1<< PB1) :   DDRB & ~(1<<PB1);    break;
 296:	67 2b       	or	r22, r23
 298:	19 f4       	brne	.+6      	; 0x2a0 <_Z7pinModeii+0xc0>
 29a:	8a b1       	in	r24, 0x0a	; 10
 29c:	82 60       	ori	r24, 0x02	; 2
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <_Z7pinModeii+0xc4>
 2a0:	84 b1       	in	r24, 0x04	; 4
 2a2:	8d 7f       	andi	r24, 0xFD	; 253
 2a4:	84 b9       	out	0x04, r24	; 4
 2a6:	08 95       	ret
        case 16: DDRB = mode==0?  DDRD | (1<< PB2) :   DDRB & ~(1<<PB2);    break;
 2a8:	67 2b       	or	r22, r23
 2aa:	19 f4       	brne	.+6      	; 0x2b2 <_Z7pinModeii+0xd2>
 2ac:	8a b1       	in	r24, 0x0a	; 10
 2ae:	84 60       	ori	r24, 0x04	; 4
 2b0:	02 c0       	rjmp	.+4      	; 0x2b6 <_Z7pinModeii+0xd6>
 2b2:	84 b1       	in	r24, 0x04	; 4
 2b4:	8b 7f       	andi	r24, 0xFB	; 251
 2b6:	84 b9       	out	0x04, r24	; 4
 2b8:	08 95       	ret
        case 17: DDRB = mode==0?  DDRD | (1<< PB3) :   DDRB & ~(1<<PB3);    break;
 2ba:	67 2b       	or	r22, r23
 2bc:	19 f4       	brne	.+6      	; 0x2c4 <_Z7pinModeii+0xe4>
 2be:	8a b1       	in	r24, 0x0a	; 10
 2c0:	88 60       	ori	r24, 0x08	; 8
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <_Z7pinModeii+0xe8>
 2c4:	84 b1       	in	r24, 0x04	; 4
 2c6:	87 7f       	andi	r24, 0xF7	; 247
 2c8:	84 b9       	out	0x04, r24	; 4
 2ca:	08 95       	ret
        case 18: DDRB = mode==0?  DDRD | (1<< PB4) :   DDRB & ~(1<<PB4);    break;
 2cc:	67 2b       	or	r22, r23
 2ce:	19 f4       	brne	.+6      	; 0x2d6 <_Z7pinModeii+0xf6>
 2d0:	8a b1       	in	r24, 0x0a	; 10
 2d2:	80 61       	ori	r24, 0x10	; 16
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <_Z7pinModeii+0xfa>
 2d6:	84 b1       	in	r24, 0x04	; 4
 2d8:	8f 7e       	andi	r24, 0xEF	; 239
 2da:	84 b9       	out	0x04, r24	; 4
 2dc:	08 95       	ret
        case 19: DDRB = mode==0?  DDRD | (1<< PB5) :   DDRB & ~(1<<PB5);    break;
 2de:	67 2b       	or	r22, r23
 2e0:	19 f4       	brne	.+6      	; 0x2e8 <_Z7pinModeii+0x108>
 2e2:	8a b1       	in	r24, 0x0a	; 10
 2e4:	80 62       	ori	r24, 0x20	; 32
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <_Z7pinModeii+0x10c>
 2e8:	84 b1       	in	r24, 0x04	; 4
 2ea:	8f 7d       	andi	r24, 0xDF	; 223
 2ec:	84 b9       	out	0x04, r24	; 4
 2ee:	08 95       	ret
        case 9:  DDRB = mode==0?  DDRD | (1<< PB6) :   DDRB & ~(1<<PB6);    break;
 2f0:	67 2b       	or	r22, r23
 2f2:	19 f4       	brne	.+6      	; 0x2fa <_Z7pinModeii+0x11a>
 2f4:	8a b1       	in	r24, 0x0a	; 10
 2f6:	80 64       	ori	r24, 0x40	; 64
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <_Z7pinModeii+0x11e>
 2fa:	84 b1       	in	r24, 0x04	; 4
 2fc:	8f 7b       	andi	r24, 0xBF	; 191
 2fe:	84 b9       	out	0x04, r24	; 4
 300:	08 95       	ret
        case 10: DDRB = mode==0?  DDRD | (1<< PB7) :   DDRB & ~(1<<PB7);    break;
 302:	67 2b       	or	r22, r23
 304:	19 f4       	brne	.+6      	; 0x30c <_Z7pinModeii+0x12c>
 306:	8a b1       	in	r24, 0x0a	; 10
 308:	80 68       	ori	r24, 0x80	; 128
 30a:	02 c0       	rjmp	.+4      	; 0x310 <_Z7pinModeii+0x130>
 30c:	84 b1       	in	r24, 0x04	; 4
 30e:	8f 77       	andi	r24, 0x7F	; 127
 310:	84 b9       	out	0x04, r24	; 4
 312:	08 95       	ret

        // PORT C
        case 23: DDRC = mode==0?  DDRC | (1<< PC0) :   DDRB & ~(1<<PB1);    break;
 314:	67 2b       	or	r22, r23
 316:	19 f4       	brne	.+6      	; 0x31e <_Z7pinModeii+0x13e>
 318:	87 b1       	in	r24, 0x07	; 7
 31a:	81 60       	ori	r24, 0x01	; 1
 31c:	02 c0       	rjmp	.+4      	; 0x322 <_Z7pinModeii+0x142>
 31e:	84 b1       	in	r24, 0x04	; 4
 320:	8d 7f       	andi	r24, 0xFD	; 253
 322:	87 b9       	out	0x07, r24	; 7
 324:	08 95       	ret
        case 24: DDRC = mode==0?  DDRC | (1<< PC1) :   DDRB & ~(1<<PC1);    break;
 326:	67 2b       	or	r22, r23
 328:	19 f4       	brne	.+6      	; 0x330 <_Z7pinModeii+0x150>
 32a:	87 b1       	in	r24, 0x07	; 7
 32c:	82 60       	ori	r24, 0x02	; 2
 32e:	02 c0       	rjmp	.+4      	; 0x334 <_Z7pinModeii+0x154>
 330:	84 b1       	in	r24, 0x04	; 4
 332:	8d 7f       	andi	r24, 0xFD	; 253
 334:	87 b9       	out	0x07, r24	; 7
 336:	08 95       	ret
        case 25: DDRC = mode==0?  DDRC | (1<< PC2) :   DDRB & ~(1<<PC2);    break;
 338:	67 2b       	or	r22, r23
 33a:	19 f4       	brne	.+6      	; 0x342 <_Z7pinModeii+0x162>
 33c:	87 b1       	in	r24, 0x07	; 7
 33e:	84 60       	ori	r24, 0x04	; 4
 340:	02 c0       	rjmp	.+4      	; 0x346 <_Z7pinModeii+0x166>
 342:	84 b1       	in	r24, 0x04	; 4
 344:	8b 7f       	andi	r24, 0xFB	; 251
 346:	87 b9       	out	0x07, r24	; 7
 348:	08 95       	ret
        case 26: DDRC = mode==0?  DDRC | (1<< PC3) :   DDRB & ~(1<<PC3);    break;
 34a:	67 2b       	or	r22, r23
 34c:	19 f4       	brne	.+6      	; 0x354 <_Z7pinModeii+0x174>
 34e:	87 b1       	in	r24, 0x07	; 7
 350:	88 60       	ori	r24, 0x08	; 8
 352:	02 c0       	rjmp	.+4      	; 0x358 <_Z7pinModeii+0x178>
 354:	84 b1       	in	r24, 0x04	; 4
 356:	87 7f       	andi	r24, 0xF7	; 247
 358:	87 b9       	out	0x07, r24	; 7
 35a:	08 95       	ret
        case 27: DDRC = mode==0?  DDRC | (1<< PC4) :   DDRB & ~(1<<PC4);    break;
 35c:	67 2b       	or	r22, r23
 35e:	19 f4       	brne	.+6      	; 0x366 <_Z7pinModeii+0x186>
 360:	87 b1       	in	r24, 0x07	; 7
 362:	80 61       	ori	r24, 0x10	; 16
 364:	02 c0       	rjmp	.+4      	; 0x36a <_Z7pinModeii+0x18a>
 366:	84 b1       	in	r24, 0x04	; 4
 368:	8f 7e       	andi	r24, 0xEF	; 239
 36a:	87 b9       	out	0x07, r24	; 7
 36c:	08 95       	ret
        case 28: DDRC = mode==0?  DDRC | (1<< PC5) :   DDRB & ~(1<<PC5);    break;
 36e:	67 2b       	or	r22, r23
 370:	19 f4       	brne	.+6      	; 0x378 <_Z7pinModeii+0x198>
 372:	87 b1       	in	r24, 0x07	; 7
 374:	80 62       	ori	r24, 0x20	; 32
 376:	02 c0       	rjmp	.+4      	; 0x37c <_Z7pinModeii+0x19c>
 378:	84 b1       	in	r24, 0x04	; 4
 37a:	8f 7d       	andi	r24, 0xDF	; 223
 37c:	87 b9       	out	0x07, r24	; 7
 37e:	08 95       	ret
        case 1:  DDRC = mode==0?  DDRC | (1<< PC6) :   DDRB & ~(1<<PC6);    break;
 380:	67 2b       	or	r22, r23
 382:	19 f4       	brne	.+6      	; 0x38a <_Z7pinModeii+0x1aa>
 384:	87 b1       	in	r24, 0x07	; 7
 386:	80 64       	ori	r24, 0x40	; 64
 388:	02 c0       	rjmp	.+4      	; 0x38e <_Z7pinModeii+0x1ae>
 38a:	84 b1       	in	r24, 0x04	; 4
 38c:	8f 7b       	andi	r24, 0xBF	; 191
 38e:	87 b9       	out	0x07, r24	; 7
 390:	08 95       	ret

00000392 <_Z12digitalWriteii>:
    }
}

void digitalWrite(int pin, int mode){
        switch(pin){
 392:	01 97       	sbiw	r24, 0x01	; 1
 394:	8c 31       	cpi	r24, 0x1C	; 28
 396:	91 05       	cpc	r25, r1
 398:	08 f0       	brcs	.+2      	; 0x39c <_Z12digitalWriteii+0xa>
 39a:	ea c0       	rjmp	.+468    	; 0x570 <_Z12digitalWriteii+0x1de>
 39c:	80 5b       	subi	r24, 0xB0	; 176
 39e:	9f 4f       	sbci	r25, 0xFF	; 255
 3a0:	fc 01       	movw	r30, r24
 3a2:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__tablejump2__>
        case 2:  PORTD = mode==1?  DDRD | (1<< PD0) :   DDRB & ~(1<<PD0);    break;
 3a6:	61 30       	cpi	r22, 0x01	; 1
 3a8:	71 05       	cpc	r23, r1
 3aa:	19 f4       	brne	.+6      	; 0x3b2 <_Z12digitalWriteii+0x20>
 3ac:	8a b1       	in	r24, 0x0a	; 10
 3ae:	81 60       	ori	r24, 0x01	; 1
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <_Z12digitalWriteii+0x24>
 3b2:	84 b1       	in	r24, 0x04	; 4
 3b4:	8e 7f       	andi	r24, 0xFE	; 254
 3b6:	8b b9       	out	0x0b, r24	; 11
 3b8:	08 95       	ret
        case 3:  PORTD = mode==1?  DDRD | (1<< PD1) :   DDRB & ~(1<<PD1);    break;
 3ba:	61 30       	cpi	r22, 0x01	; 1
 3bc:	71 05       	cpc	r23, r1
 3be:	19 f4       	brne	.+6      	; 0x3c6 <_Z12digitalWriteii+0x34>
 3c0:	8a b1       	in	r24, 0x0a	; 10
 3c2:	82 60       	ori	r24, 0x02	; 2
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <_Z12digitalWriteii+0x38>
 3c6:	84 b1       	in	r24, 0x04	; 4
 3c8:	8d 7f       	andi	r24, 0xFD	; 253
 3ca:	8b b9       	out	0x0b, r24	; 11
 3cc:	08 95       	ret
        case 4:  PORTD = mode==1?  DDRD | (1<< PD2) :   DDRB & ~(1<<PD2);    break;
 3ce:	61 30       	cpi	r22, 0x01	; 1
 3d0:	71 05       	cpc	r23, r1
 3d2:	19 f4       	brne	.+6      	; 0x3da <_Z12digitalWriteii+0x48>
 3d4:	8a b1       	in	r24, 0x0a	; 10
 3d6:	84 60       	ori	r24, 0x04	; 4
 3d8:	02 c0       	rjmp	.+4      	; 0x3de <_Z12digitalWriteii+0x4c>
 3da:	84 b1       	in	r24, 0x04	; 4
 3dc:	8b 7f       	andi	r24, 0xFB	; 251
 3de:	8b b9       	out	0x0b, r24	; 11
 3e0:	08 95       	ret
        case 5:  PORTD = mode==1?  DDRD | (1<< PD3) :   DDRB & ~(1<<PD3);    break;
 3e2:	61 30       	cpi	r22, 0x01	; 1
 3e4:	71 05       	cpc	r23, r1
 3e6:	19 f4       	brne	.+6      	; 0x3ee <_Z12digitalWriteii+0x5c>
 3e8:	8a b1       	in	r24, 0x0a	; 10
 3ea:	88 60       	ori	r24, 0x08	; 8
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <_Z12digitalWriteii+0x60>
 3ee:	84 b1       	in	r24, 0x04	; 4
 3f0:	87 7f       	andi	r24, 0xF7	; 247
 3f2:	8b b9       	out	0x0b, r24	; 11
 3f4:	08 95       	ret
        case 6:  PORTD = mode==1?  DDRD | (1<< PD4) :   DDRB & ~(1<<PD4);    break;
 3f6:	61 30       	cpi	r22, 0x01	; 1
 3f8:	71 05       	cpc	r23, r1
 3fa:	19 f4       	brne	.+6      	; 0x402 <_Z12digitalWriteii+0x70>
 3fc:	8a b1       	in	r24, 0x0a	; 10
 3fe:	80 61       	ori	r24, 0x10	; 16
 400:	02 c0       	rjmp	.+4      	; 0x406 <_Z12digitalWriteii+0x74>
 402:	84 b1       	in	r24, 0x04	; 4
 404:	8f 7e       	andi	r24, 0xEF	; 239
 406:	8b b9       	out	0x0b, r24	; 11
 408:	08 95       	ret
        case 11: PORTD = mode==1?  DDRD | (1<< PD5) :   DDRB & ~(1<<PD5);    break;
 40a:	61 30       	cpi	r22, 0x01	; 1
 40c:	71 05       	cpc	r23, r1
 40e:	19 f4       	brne	.+6      	; 0x416 <_Z12digitalWriteii+0x84>
 410:	8a b1       	in	r24, 0x0a	; 10
 412:	80 62       	ori	r24, 0x20	; 32
 414:	02 c0       	rjmp	.+4      	; 0x41a <_Z12digitalWriteii+0x88>
 416:	84 b1       	in	r24, 0x04	; 4
 418:	8f 7d       	andi	r24, 0xDF	; 223
 41a:	8b b9       	out	0x0b, r24	; 11
 41c:	08 95       	ret
        case 12: PORTD = mode==1?  DDRD | (1<< PD6) :   DDRB & ~(1<<PD6);    break;
 41e:	61 30       	cpi	r22, 0x01	; 1
 420:	71 05       	cpc	r23, r1
 422:	19 f4       	brne	.+6      	; 0x42a <_Z12digitalWriteii+0x98>
 424:	8a b1       	in	r24, 0x0a	; 10
 426:	80 64       	ori	r24, 0x40	; 64
 428:	02 c0       	rjmp	.+4      	; 0x42e <_Z12digitalWriteii+0x9c>
 42a:	84 b1       	in	r24, 0x04	; 4
 42c:	8f 7b       	andi	r24, 0xBF	; 191
 42e:	8b b9       	out	0x0b, r24	; 11
 430:	08 95       	ret
        case 13: PORTD = mode==1?  DDRD | (1<< PD7) :   DDRB & ~(1<<PD7);    break;
 432:	61 30       	cpi	r22, 0x01	; 1
 434:	71 05       	cpc	r23, r1
 436:	19 f4       	brne	.+6      	; 0x43e <_Z12digitalWriteii+0xac>
 438:	8a b1       	in	r24, 0x0a	; 10
 43a:	80 68       	ori	r24, 0x80	; 128
 43c:	02 c0       	rjmp	.+4      	; 0x442 <_Z12digitalWriteii+0xb0>
 43e:	84 b1       	in	r24, 0x04	; 4
 440:	8f 77       	andi	r24, 0x7F	; 127
 442:	8b b9       	out	0x0b, r24	; 11
 444:	08 95       	ret

        // PORTB
        case 14: PORTB = mode==1?  DDRB | (1<< PB0) :   DDRB & ~(1<<PB0);    break;
 446:	61 30       	cpi	r22, 0x01	; 1
 448:	71 05       	cpc	r23, r1
 44a:	19 f4       	brne	.+6      	; 0x452 <_Z12digitalWriteii+0xc0>
 44c:	84 b1       	in	r24, 0x04	; 4
 44e:	81 60       	ori	r24, 0x01	; 1
 450:	02 c0       	rjmp	.+4      	; 0x456 <_Z12digitalWriteii+0xc4>
 452:	84 b1       	in	r24, 0x04	; 4
 454:	8e 7f       	andi	r24, 0xFE	; 254
 456:	85 b9       	out	0x05, r24	; 5
 458:	08 95       	ret
        case 15: PORTB = mode==1?  DDRD | (1<< PB1) :   DDRB & ~(1<<PB1);    break;
 45a:	61 30       	cpi	r22, 0x01	; 1
 45c:	71 05       	cpc	r23, r1
 45e:	19 f4       	brne	.+6      	; 0x466 <_Z12digitalWriteii+0xd4>
 460:	8a b1       	in	r24, 0x0a	; 10
 462:	82 60       	ori	r24, 0x02	; 2
 464:	02 c0       	rjmp	.+4      	; 0x46a <_Z12digitalWriteii+0xd8>
 466:	84 b1       	in	r24, 0x04	; 4
 468:	8d 7f       	andi	r24, 0xFD	; 253
 46a:	85 b9       	out	0x05, r24	; 5
 46c:	08 95       	ret
        case 16: PORTB = mode==1?  DDRD | (1<< PB2) :   DDRB & ~(1<<PB2);    break;
 46e:	61 30       	cpi	r22, 0x01	; 1
 470:	71 05       	cpc	r23, r1
 472:	19 f4       	brne	.+6      	; 0x47a <_Z12digitalWriteii+0xe8>
 474:	8a b1       	in	r24, 0x0a	; 10
 476:	84 60       	ori	r24, 0x04	; 4
 478:	02 c0       	rjmp	.+4      	; 0x47e <_Z12digitalWriteii+0xec>
 47a:	84 b1       	in	r24, 0x04	; 4
 47c:	8b 7f       	andi	r24, 0xFB	; 251
 47e:	85 b9       	out	0x05, r24	; 5
 480:	08 95       	ret
        case 17: PORTB = mode==1?  DDRD | (1<< PB3) :   DDRB & ~(1<<PB3);    break;
 482:	61 30       	cpi	r22, 0x01	; 1
 484:	71 05       	cpc	r23, r1
 486:	19 f4       	brne	.+6      	; 0x48e <_Z12digitalWriteii+0xfc>
 488:	8a b1       	in	r24, 0x0a	; 10
 48a:	88 60       	ori	r24, 0x08	; 8
 48c:	02 c0       	rjmp	.+4      	; 0x492 <_Z12digitalWriteii+0x100>
 48e:	84 b1       	in	r24, 0x04	; 4
 490:	87 7f       	andi	r24, 0xF7	; 247
 492:	85 b9       	out	0x05, r24	; 5
 494:	08 95       	ret
        case 18: PORTB = mode==1?  DDRD | (1<< PB4) :   DDRB & ~(1<<PB4);    break;
 496:	61 30       	cpi	r22, 0x01	; 1
 498:	71 05       	cpc	r23, r1
 49a:	19 f4       	brne	.+6      	; 0x4a2 <_Z12digitalWriteii+0x110>
 49c:	8a b1       	in	r24, 0x0a	; 10
 49e:	80 61       	ori	r24, 0x10	; 16
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <_Z12digitalWriteii+0x114>
 4a2:	84 b1       	in	r24, 0x04	; 4
 4a4:	8f 7e       	andi	r24, 0xEF	; 239
 4a6:	85 b9       	out	0x05, r24	; 5
 4a8:	08 95       	ret
        case 19: PORTB = mode==1?  DDRD | (1<< PB5) :   DDRB & ~(1<<PB5);    break;
 4aa:	61 30       	cpi	r22, 0x01	; 1
 4ac:	71 05       	cpc	r23, r1
 4ae:	19 f4       	brne	.+6      	; 0x4b6 <_Z12digitalWriteii+0x124>
 4b0:	8a b1       	in	r24, 0x0a	; 10
 4b2:	80 62       	ori	r24, 0x20	; 32
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <_Z12digitalWriteii+0x128>
 4b6:	84 b1       	in	r24, 0x04	; 4
 4b8:	8f 7d       	andi	r24, 0xDF	; 223
 4ba:	85 b9       	out	0x05, r24	; 5
 4bc:	08 95       	ret
        case 9:  PORTB = mode==1?  DDRD | (1<< PB6) :   DDRB & ~(1<<PB6);    break;
 4be:	61 30       	cpi	r22, 0x01	; 1
 4c0:	71 05       	cpc	r23, r1
 4c2:	19 f4       	brne	.+6      	; 0x4ca <_Z12digitalWriteii+0x138>
 4c4:	8a b1       	in	r24, 0x0a	; 10
 4c6:	80 64       	ori	r24, 0x40	; 64
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <_Z12digitalWriteii+0x13c>
 4ca:	84 b1       	in	r24, 0x04	; 4
 4cc:	8f 7b       	andi	r24, 0xBF	; 191
 4ce:	85 b9       	out	0x05, r24	; 5
 4d0:	08 95       	ret
        case 10: PORTB = mode==1?  DDRD | (1<< PB7) :   DDRB & ~(1<<PB7);    break;
 4d2:	61 30       	cpi	r22, 0x01	; 1
 4d4:	71 05       	cpc	r23, r1
 4d6:	19 f4       	brne	.+6      	; 0x4de <_Z12digitalWriteii+0x14c>
 4d8:	8a b1       	in	r24, 0x0a	; 10
 4da:	80 68       	ori	r24, 0x80	; 128
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <_Z12digitalWriteii+0x150>
 4de:	84 b1       	in	r24, 0x04	; 4
 4e0:	8f 77       	andi	r24, 0x7F	; 127
 4e2:	85 b9       	out	0x05, r24	; 5
 4e4:	08 95       	ret

        // PORT C
        case 23: PORTC = mode==1?  DDRC | (1<< PC0) :   DDRB & ~(1<<PB1);    break;
 4e6:	61 30       	cpi	r22, 0x01	; 1
 4e8:	71 05       	cpc	r23, r1
 4ea:	19 f4       	brne	.+6      	; 0x4f2 <_Z12digitalWriteii+0x160>
 4ec:	87 b1       	in	r24, 0x07	; 7
 4ee:	81 60       	ori	r24, 0x01	; 1
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <_Z12digitalWriteii+0x164>
 4f2:	84 b1       	in	r24, 0x04	; 4
 4f4:	8d 7f       	andi	r24, 0xFD	; 253
 4f6:	88 b9       	out	0x08, r24	; 8
 4f8:	08 95       	ret
        case 24: PORTC = mode==1?  DDRC | (1<< PC1) :   DDRB & ~(1<<PC1);    break;
 4fa:	61 30       	cpi	r22, 0x01	; 1
 4fc:	71 05       	cpc	r23, r1
 4fe:	19 f4       	brne	.+6      	; 0x506 <_Z12digitalWriteii+0x174>
 500:	87 b1       	in	r24, 0x07	; 7
 502:	82 60       	ori	r24, 0x02	; 2
 504:	02 c0       	rjmp	.+4      	; 0x50a <_Z12digitalWriteii+0x178>
 506:	84 b1       	in	r24, 0x04	; 4
 508:	8d 7f       	andi	r24, 0xFD	; 253
 50a:	88 b9       	out	0x08, r24	; 8
 50c:	08 95       	ret
        case 25: PORTC = mode==1?  DDRC | (1<< PC2) :   DDRB & ~(1<<PC2);    break;
 50e:	61 30       	cpi	r22, 0x01	; 1
 510:	71 05       	cpc	r23, r1
 512:	19 f4       	brne	.+6      	; 0x51a <_Z12digitalWriteii+0x188>
 514:	87 b1       	in	r24, 0x07	; 7
 516:	84 60       	ori	r24, 0x04	; 4
 518:	02 c0       	rjmp	.+4      	; 0x51e <_Z12digitalWriteii+0x18c>
 51a:	84 b1       	in	r24, 0x04	; 4
 51c:	8b 7f       	andi	r24, 0xFB	; 251
 51e:	88 b9       	out	0x08, r24	; 8
 520:	08 95       	ret
        case 26: PORTC = mode==1?  DDRC | (1<< PC3) :   DDRB & ~(1<<PC3);    break;
 522:	61 30       	cpi	r22, 0x01	; 1
 524:	71 05       	cpc	r23, r1
 526:	19 f4       	brne	.+6      	; 0x52e <_Z12digitalWriteii+0x19c>
 528:	87 b1       	in	r24, 0x07	; 7
 52a:	88 60       	ori	r24, 0x08	; 8
 52c:	02 c0       	rjmp	.+4      	; 0x532 <_Z12digitalWriteii+0x1a0>
 52e:	84 b1       	in	r24, 0x04	; 4
 530:	87 7f       	andi	r24, 0xF7	; 247
 532:	88 b9       	out	0x08, r24	; 8
 534:	08 95       	ret
        case 27: PORTC = mode==1?  DDRC | (1<< PC4) :   DDRB & ~(1<<PC4);    break;
 536:	61 30       	cpi	r22, 0x01	; 1
 538:	71 05       	cpc	r23, r1
 53a:	19 f4       	brne	.+6      	; 0x542 <_Z12digitalWriteii+0x1b0>
 53c:	87 b1       	in	r24, 0x07	; 7
 53e:	80 61       	ori	r24, 0x10	; 16
 540:	02 c0       	rjmp	.+4      	; 0x546 <_Z12digitalWriteii+0x1b4>
 542:	84 b1       	in	r24, 0x04	; 4
 544:	8f 7e       	andi	r24, 0xEF	; 239
 546:	88 b9       	out	0x08, r24	; 8
 548:	08 95       	ret
        case 28: PORTC = mode==1?  DDRC | (1<< PC5) :   DDRB & ~(1<<PC5);    break;
 54a:	61 30       	cpi	r22, 0x01	; 1
 54c:	71 05       	cpc	r23, r1
 54e:	19 f4       	brne	.+6      	; 0x556 <_Z12digitalWriteii+0x1c4>
 550:	87 b1       	in	r24, 0x07	; 7
 552:	80 62       	ori	r24, 0x20	; 32
 554:	02 c0       	rjmp	.+4      	; 0x55a <_Z12digitalWriteii+0x1c8>
 556:	84 b1       	in	r24, 0x04	; 4
 558:	8f 7d       	andi	r24, 0xDF	; 223
 55a:	88 b9       	out	0x08, r24	; 8
 55c:	08 95       	ret
        case 1:  PORTC = mode==1?  DDRC | (1<< PC6) :   DDRB & ~(1<<PC6);    break;
 55e:	61 30       	cpi	r22, 0x01	; 1
 560:	71 05       	cpc	r23, r1
 562:	19 f4       	brne	.+6      	; 0x56a <_Z12digitalWriteii+0x1d8>
 564:	87 b1       	in	r24, 0x07	; 7
 566:	80 64       	ori	r24, 0x40	; 64
 568:	02 c0       	rjmp	.+4      	; 0x56e <_Z12digitalWriteii+0x1dc>
 56a:	84 b1       	in	r24, 0x04	; 4
 56c:	8f 7b       	andi	r24, 0xBF	; 191
 56e:	88 b9       	out	0x08, r24	; 8
 570:	08 95       	ret

00000572 <_ZN5MotorC1Eiiiiii>:
#include "Motor.h"

#include "common.h"


Motor::Motor(int EN1, int EN2, int I1, int I2, int I3, int I4)
 572:	6f 92       	push	r6
 574:	7f 92       	push	r7
 576:	8f 92       	push	r8
 578:	9f 92       	push	r9
 57a:	af 92       	push	r10
 57c:	bf 92       	push	r11
 57e:	cf 92       	push	r12
 580:	df 92       	push	r13
 582:	ef 92       	push	r14
 584:	ff 92       	push	r15
 586:	0f 93       	push	r16
 588:	1f 93       	push	r17
 58a:	cf 93       	push	r28
 58c:	df 93       	push	r29
 58e:	ec 01       	movw	r28, r24
 590:	4b 01       	movw	r8, r22
 592:	5a 01       	movw	r10, r20
 594:	39 01       	movw	r6, r18
{
    //ctor
    pinMode(EN1, INPUT); this->EN1 = EN1;
 596:	61 e0       	ldi	r22, 0x01	; 1
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	c4 01       	movw	r24, r8
 59c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z7pinModeii>
 5a0:	99 82       	std	Y+1, r9	; 0x01
 5a2:	88 82       	st	Y, r8
    pinMode(EN2, INPUT); this->EN2 = EN2;
 5a4:	61 e0       	ldi	r22, 0x01	; 1
 5a6:	70 e0       	ldi	r23, 0x00	; 0
 5a8:	c5 01       	movw	r24, r10
 5aa:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z7pinModeii>
 5ae:	bb 82       	std	Y+3, r11	; 0x03
 5b0:	aa 82       	std	Y+2, r10	; 0x02

    pinMode(I1, OUTPUT); this->I1 = I1;
 5b2:	60 e0       	ldi	r22, 0x00	; 0
 5b4:	70 e0       	ldi	r23, 0x00	; 0
 5b6:	c3 01       	movw	r24, r6
 5b8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z7pinModeii>
 5bc:	7d 82       	std	Y+5, r7	; 0x05
 5be:	6c 82       	std	Y+4, r6	; 0x04
    pinMode(I2, OUTPUT); this->I2 = I2;
 5c0:	60 e0       	ldi	r22, 0x00	; 0
 5c2:	70 e0       	ldi	r23, 0x00	; 0
 5c4:	c8 01       	movw	r24, r16
 5c6:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z7pinModeii>
 5ca:	1f 83       	std	Y+7, r17	; 0x07
 5cc:	0e 83       	std	Y+6, r16	; 0x06
    pinMode(I3, OUTPUT); this->I3 = I3;
 5ce:	60 e0       	ldi	r22, 0x00	; 0
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	c7 01       	movw	r24, r14
 5d4:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z7pinModeii>
 5d8:	f9 86       	std	Y+9, r15	; 0x09
 5da:	e8 86       	std	Y+8, r14	; 0x08
    pinMode(I4, OUTPUT); this->I4 = I4;
 5dc:	60 e0       	ldi	r22, 0x00	; 0
 5de:	70 e0       	ldi	r23, 0x00	; 0
 5e0:	c6 01       	movw	r24, r12
 5e2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <_Z7pinModeii>
 5e6:	db 86       	std	Y+11, r13	; 0x0b
 5e8:	ca 86       	std	Y+10, r12	; 0x0a

    // Gambita pra teste
    digitalWrite(EN1, HIGH);
 5ea:	61 e0       	ldi	r22, 0x01	; 1
 5ec:	70 e0       	ldi	r23, 0x00	; 0
 5ee:	c4 01       	movw	r24, r8
 5f0:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
    digitalWrite(EN2, HIGH);
 5f4:	61 e0       	ldi	r22, 0x01	; 1
 5f6:	70 e0       	ldi	r23, 0x00	; 0
 5f8:	c5 01       	movw	r24, r10
 5fa:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
}
 5fe:	df 91       	pop	r29
 600:	cf 91       	pop	r28
 602:	1f 91       	pop	r17
 604:	0f 91       	pop	r16
 606:	ff 90       	pop	r15
 608:	ef 90       	pop	r14
 60a:	df 90       	pop	r13
 60c:	cf 90       	pop	r12
 60e:	bf 90       	pop	r11
 610:	af 90       	pop	r10
 612:	9f 90       	pop	r9
 614:	8f 90       	pop	r8
 616:	7f 90       	pop	r7
 618:	6f 90       	pop	r6
 61a:	08 95       	ret

0000061c <_ZN5Motor4stopEv>:
void Motor::leftWheelBackward(){
    stop();
    digitalWrite(this->I2, HIGH);
}

void Motor::stop(){
 61c:	cf 93       	push	r28
 61e:	df 93       	push	r29
 620:	ec 01       	movw	r28, r24
    digitalWrite(this->I1, LOW);
 622:	60 e0       	ldi	r22, 0x00	; 0
 624:	70 e0       	ldi	r23, 0x00	; 0
 626:	8c 81       	ldd	r24, Y+4	; 0x04
 628:	9d 81       	ldd	r25, Y+5	; 0x05
 62a:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
    digitalWrite(this->I2, LOW);
 62e:	60 e0       	ldi	r22, 0x00	; 0
 630:	70 e0       	ldi	r23, 0x00	; 0
 632:	8e 81       	ldd	r24, Y+6	; 0x06
 634:	9f 81       	ldd	r25, Y+7	; 0x07
 636:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
    digitalWrite(this->I3, LOW);
 63a:	60 e0       	ldi	r22, 0x00	; 0
 63c:	70 e0       	ldi	r23, 0x00	; 0
 63e:	88 85       	ldd	r24, Y+8	; 0x08
 640:	99 85       	ldd	r25, Y+9	; 0x09
 642:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
    digitalWrite(this->I4, LOW);
 646:	60 e0       	ldi	r22, 0x00	; 0
 648:	70 e0       	ldi	r23, 0x00	; 0
 64a:	8a 85       	ldd	r24, Y+10	; 0x0a
 64c:	9b 85       	ldd	r25, Y+11	; 0x0b
 64e:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
}
 652:	df 91       	pop	r29
 654:	cf 91       	pop	r28
 656:	08 95       	ret

00000658 <_ZN5Motor7forwardEv>:
    // Gambita pra teste
    digitalWrite(EN1, HIGH);
    digitalWrite(EN2, HIGH);
}

void Motor::forward(){
 658:	cf 93       	push	r28
 65a:	df 93       	push	r29
 65c:	ec 01       	movw	r28, r24
    stop();
 65e:	0e 94 0e 03 	call	0x61c	; 0x61c <_ZN5Motor4stopEv>
    digitalWrite(this->I1, HIGH);
 662:	61 e0       	ldi	r22, 0x01	; 1
 664:	70 e0       	ldi	r23, 0x00	; 0
 666:	8c 81       	ldd	r24, Y+4	; 0x04
 668:	9d 81       	ldd	r25, Y+5	; 0x05
 66a:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
    digitalWrite(this->I3, HIGH);
 66e:	61 e0       	ldi	r22, 0x01	; 1
 670:	70 e0       	ldi	r23, 0x00	; 0
 672:	88 85       	ldd	r24, Y+8	; 0x08
 674:	99 85       	ldd	r25, Y+9	; 0x09
 676:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
}
 67a:	df 91       	pop	r29
 67c:	cf 91       	pop	r28
 67e:	08 95       	ret

00000680 <_ZN5Motor8backwardEv>:
void Motor::backward(){
 680:	cf 93       	push	r28
 682:	df 93       	push	r29
 684:	ec 01       	movw	r28, r24
    stop();
 686:	0e 94 0e 03 	call	0x61c	; 0x61c <_ZN5Motor4stopEv>
    digitalWrite(this->I2, HIGH);
 68a:	61 e0       	ldi	r22, 0x01	; 1
 68c:	70 e0       	ldi	r23, 0x00	; 0
 68e:	8e 81       	ldd	r24, Y+6	; 0x06
 690:	9f 81       	ldd	r25, Y+7	; 0x07
 692:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
    digitalWrite(this->I4, HIGH);
 696:	61 e0       	ldi	r22, 0x01	; 1
 698:	70 e0       	ldi	r23, 0x00	; 0
 69a:	8a 85       	ldd	r24, Y+10	; 0x0a
 69c:	9b 85       	ldd	r25, Y+11	; 0x0b
 69e:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
}
 6a2:	df 91       	pop	r29
 6a4:	cf 91       	pop	r28
 6a6:	08 95       	ret

000006a8 <_ZN5Motor16rigtWheelForwardEv>:

void Motor::rigtWheelForward(){
 6a8:	cf 93       	push	r28
 6aa:	df 93       	push	r29
 6ac:	ec 01       	movw	r28, r24
    stop();
 6ae:	0e 94 0e 03 	call	0x61c	; 0x61c <_ZN5Motor4stopEv>
    digitalWrite(this->I3, HIGH);
 6b2:	61 e0       	ldi	r22, 0x01	; 1
 6b4:	70 e0       	ldi	r23, 0x00	; 0
 6b6:	88 85       	ldd	r24, Y+8	; 0x08
 6b8:	99 85       	ldd	r25, Y+9	; 0x09
 6ba:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
}
 6be:	df 91       	pop	r29
 6c0:	cf 91       	pop	r28
 6c2:	08 95       	ret

000006c4 <_ZN5Motor18rightWheelBackwardEv>:

void Motor::rightWheelBackward(){
 6c4:	cf 93       	push	r28
 6c6:	df 93       	push	r29
 6c8:	ec 01       	movw	r28, r24
    stop();
 6ca:	0e 94 0e 03 	call	0x61c	; 0x61c <_ZN5Motor4stopEv>
    digitalWrite(this->I4, HIGH);
 6ce:	61 e0       	ldi	r22, 0x01	; 1
 6d0:	70 e0       	ldi	r23, 0x00	; 0
 6d2:	8a 85       	ldd	r24, Y+10	; 0x0a
 6d4:	9b 85       	ldd	r25, Y+11	; 0x0b
 6d6:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
}
 6da:	df 91       	pop	r29
 6dc:	cf 91       	pop	r28
 6de:	08 95       	ret

000006e0 <_ZN5Motor16leftWheelForwardEv>:

void Motor::leftWheelForward(){
 6e0:	cf 93       	push	r28
 6e2:	df 93       	push	r29
 6e4:	ec 01       	movw	r28, r24
    stop();
 6e6:	0e 94 0e 03 	call	0x61c	; 0x61c <_ZN5Motor4stopEv>
    digitalWrite(this->I1, HIGH);
 6ea:	61 e0       	ldi	r22, 0x01	; 1
 6ec:	70 e0       	ldi	r23, 0x00	; 0
 6ee:	8c 81       	ldd	r24, Y+4	; 0x04
 6f0:	9d 81       	ldd	r25, Y+5	; 0x05
 6f2:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
}
 6f6:	df 91       	pop	r29
 6f8:	cf 91       	pop	r28
 6fa:	08 95       	ret

000006fc <_ZN5Motor17leftWheelBackwardEv>:

void Motor::leftWheelBackward(){
 6fc:	cf 93       	push	r28
 6fe:	df 93       	push	r29
 700:	ec 01       	movw	r28, r24
    stop();
 702:	0e 94 0e 03 	call	0x61c	; 0x61c <_ZN5Motor4stopEv>
    digitalWrite(this->I2, HIGH);
 706:	61 e0       	ldi	r22, 0x01	; 1
 708:	70 e0       	ldi	r23, 0x00	; 0
 70a:	8e 81       	ldd	r24, Y+6	; 0x06
 70c:	9f 81       	ldd	r25, Y+7	; 0x07
 70e:	0e 94 c9 01 	call	0x392	; 0x392 <_Z12digitalWriteii>
}
 712:	df 91       	pop	r29
 714:	cf 91       	pop	r28
 716:	08 95       	ret

00000718 <_ZN5Motor18setRightWheelSpeedEj>:
    digitalWrite(this->I3, LOW);
    digitalWrite(this->I4, LOW);
}

void Motor::setRightWheelSpeed(uint16_t speed){
    if(speed > 255){
 718:	6f 3f       	cpi	r22, 0xFF	; 255
 71a:	71 05       	cpc	r23, r1
 71c:	39 f0       	breq	.+14     	; 0x72c <_ZN5Motor18setRightWheelSpeedEj+0x14>
 71e:	30 f0       	brcs	.+12     	; 0x72c <_ZN5Motor18setRightWheelSpeedEj+0x14>
        this->rightWheelSpeed = 255;
 720:	2f ef       	ldi	r18, 0xFF	; 255
 722:	30 e0       	ldi	r19, 0x00	; 0
 724:	fc 01       	movw	r30, r24
 726:	35 87       	std	Z+13, r19	; 0x0d
 728:	24 87       	std	Z+12, r18	; 0x0c
 72a:	08 95       	ret
    }
    else{
        this->rightWheelSpeed = speed;
 72c:	fc 01       	movw	r30, r24
 72e:	75 87       	std	Z+13, r23	; 0x0d
 730:	64 87       	std	Z+12, r22	; 0x0c
 732:	08 95       	ret

00000734 <_ZN5Motor17setLeftWheelSpeedEj>:
    }
}

void Motor::setLeftWheelSpeed(uint16_t speed){
    if(speed > 255){
 734:	6f 3f       	cpi	r22, 0xFF	; 255
 736:	71 05       	cpc	r23, r1
 738:	39 f0       	breq	.+14     	; 0x748 <_ZN5Motor17setLeftWheelSpeedEj+0x14>
 73a:	30 f0       	brcs	.+12     	; 0x748 <_ZN5Motor17setLeftWheelSpeedEj+0x14>
        this->leftWheelSpeed = 255;
 73c:	2f ef       	ldi	r18, 0xFF	; 255
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	fc 01       	movw	r30, r24
 742:	37 87       	std	Z+15, r19	; 0x0f
 744:	26 87       	std	Z+14, r18	; 0x0e
 746:	08 95       	ret
    }
    else{
        this->leftWheelSpeed = speed;
 748:	fc 01       	movw	r30, r24
 74a:	77 87       	std	Z+15, r23	; 0x0f
 74c:	66 87       	std	Z+14, r22	; 0x0e
 74e:	08 95       	ret

00000750 <_Z10pwm_enable11PWM_CHANNEL>:
#include "pwm.h"


// Enable PWM channels
void pwm_enable(enum PWM_CHANNEL channel) {
	if (channel & CHAN_OC0A) TCCR0A |= 1<<COM0A1;
 750:	80 ff       	sbrs	r24, 0
 752:	03 c0       	rjmp	.+6      	; 0x75a <_Z10pwm_enable11PWM_CHANNEL+0xa>
 754:	94 b5       	in	r25, 0x24	; 36
 756:	90 68       	ori	r25, 0x80	; 128
 758:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC0B) TCCR0A |= 1<<COM0B1;
 75a:	81 ff       	sbrs	r24, 1
 75c:	03 c0       	rjmp	.+6      	; 0x764 <_Z10pwm_enable11PWM_CHANNEL+0x14>
 75e:	94 b5       	in	r25, 0x24	; 36
 760:	90 62       	ori	r25, 0x20	; 32
 762:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC1A) TCCR1A |= 1<<COM1A1;
 764:	84 ff       	sbrs	r24, 4
 766:	05 c0       	rjmp	.+10     	; 0x772 <_Z10pwm_enable11PWM_CHANNEL+0x22>
 768:	e0 e8       	ldi	r30, 0x80	; 128
 76a:	f0 e0       	ldi	r31, 0x00	; 0
 76c:	90 81       	ld	r25, Z
 76e:	90 68       	ori	r25, 0x80	; 128
 770:	90 83       	st	Z, r25
	if (channel & CHAN_OC1B) TCCR1A |= 1<<COM1B1;
 772:	85 ff       	sbrs	r24, 5
 774:	05 c0       	rjmp	.+10     	; 0x780 <_Z10pwm_enable11PWM_CHANNEL+0x30>
 776:	e0 e8       	ldi	r30, 0x80	; 128
 778:	f0 e0       	ldi	r31, 0x00	; 0
 77a:	90 81       	ld	r25, Z
 77c:	90 62       	ori	r25, 0x20	; 32
 77e:	90 83       	st	Z, r25
	if (channel & CHAN_OC2A) TCCR2A |= 1<<COM2A1;
 780:	82 ff       	sbrs	r24, 2
 782:	05 c0       	rjmp	.+10     	; 0x78e <_Z10pwm_enable11PWM_CHANNEL+0x3e>
 784:	e0 eb       	ldi	r30, 0xB0	; 176
 786:	f0 e0       	ldi	r31, 0x00	; 0
 788:	90 81       	ld	r25, Z
 78a:	90 68       	ori	r25, 0x80	; 128
 78c:	90 83       	st	Z, r25
	if (channel & CHAN_OC2B) TCCR2A |= 1<<COM2B1;
 78e:	83 ff       	sbrs	r24, 3
 790:	05 c0       	rjmp	.+10     	; 0x79c <_Z10pwm_enable11PWM_CHANNEL+0x4c>
 792:	e0 eb       	ldi	r30, 0xB0	; 176
 794:	f0 e0       	ldi	r31, 0x00	; 0
 796:	80 81       	ld	r24, Z
 798:	80 62       	ori	r24, 0x20	; 32
 79a:	80 83       	st	Z, r24
 79c:	08 95       	ret

0000079e <_Z11pwm_disable11PWM_CHANNEL>:
}
// Disable PWM channels
void pwm_disable(enum PWM_CHANNEL channel) {
	if (channel & CHAN_OC0A) TCCR0A &= ~(1<<COM0A1);
 79e:	80 ff       	sbrs	r24, 0
 7a0:	03 c0       	rjmp	.+6      	; 0x7a8 <_Z11pwm_disable11PWM_CHANNEL+0xa>
 7a2:	94 b5       	in	r25, 0x24	; 36
 7a4:	9f 77       	andi	r25, 0x7F	; 127
 7a6:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC0B) TCCR0A &= ~(1<<COM0B1);
 7a8:	81 ff       	sbrs	r24, 1
 7aa:	03 c0       	rjmp	.+6      	; 0x7b2 <_Z11pwm_disable11PWM_CHANNEL+0x14>
 7ac:	94 b5       	in	r25, 0x24	; 36
 7ae:	9f 7d       	andi	r25, 0xDF	; 223
 7b0:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC1A) TCCR1A &= ~(1<<COM1A1);
 7b2:	84 ff       	sbrs	r24, 4
 7b4:	05 c0       	rjmp	.+10     	; 0x7c0 <_Z11pwm_disable11PWM_CHANNEL+0x22>
 7b6:	e0 e8       	ldi	r30, 0x80	; 128
 7b8:	f0 e0       	ldi	r31, 0x00	; 0
 7ba:	90 81       	ld	r25, Z
 7bc:	9f 77       	andi	r25, 0x7F	; 127
 7be:	90 83       	st	Z, r25
	if (channel & CHAN_OC1B) TCCR1A &= ~(1<<COM1B1);
 7c0:	85 ff       	sbrs	r24, 5
 7c2:	05 c0       	rjmp	.+10     	; 0x7ce <_Z11pwm_disable11PWM_CHANNEL+0x30>
 7c4:	e0 e8       	ldi	r30, 0x80	; 128
 7c6:	f0 e0       	ldi	r31, 0x00	; 0
 7c8:	90 81       	ld	r25, Z
 7ca:	9f 7d       	andi	r25, 0xDF	; 223
 7cc:	90 83       	st	Z, r25
	if (channel & CHAN_OC2A) TCCR2A &= ~(1<<COM2A1);
 7ce:	82 ff       	sbrs	r24, 2
 7d0:	05 c0       	rjmp	.+10     	; 0x7dc <_Z11pwm_disable11PWM_CHANNEL+0x3e>
 7d2:	e0 eb       	ldi	r30, 0xB0	; 176
 7d4:	f0 e0       	ldi	r31, 0x00	; 0
 7d6:	90 81       	ld	r25, Z
 7d8:	9f 77       	andi	r25, 0x7F	; 127
 7da:	90 83       	st	Z, r25
	if (channel & CHAN_OC2B) TCCR2A &= ~(1<<COM2B1);
 7dc:	83 ff       	sbrs	r24, 3
 7de:	05 c0       	rjmp	.+10     	; 0x7ea <_Z11pwm_disable11PWM_CHANNEL+0x4c>
 7e0:	e0 eb       	ldi	r30, 0xB0	; 176
 7e2:	f0 e0       	ldi	r31, 0x00	; 0
 7e4:	80 81       	ld	r24, Z
 7e6:	8f 7d       	andi	r24, 0xDF	; 223
 7e8:	80 83       	st	Z, r24
 7ea:	08 95       	ret

000007ec <_Z13pwm_dutycycle11PWM_CHANNELh>:
}

// Sets the channel brightness
void pwm_dutycycle(enum PWM_CHANNEL channel, uint8_t dutycycle) {
	if (channel & CHAN_OC0A) OCR0A = dutycycle;
 7ec:	80 fd       	sbrc	r24, 0
 7ee:	67 bd       	out	0x27, r22	; 39
	if (channel & CHAN_OC0B) OCR0B = dutycycle;
 7f0:	81 fd       	sbrc	r24, 1
 7f2:	68 bd       	out	0x28, r22	; 40
	if (channel & CHAN_OC1A) OCR1A = dutycycle;
 7f4:	84 ff       	sbrs	r24, 4
 7f6:	06 c0       	rjmp	.+12     	; 0x804 <_Z13pwm_dutycycle11PWM_CHANNELh+0x18>
 7f8:	26 2f       	mov	r18, r22
 7fa:	30 e0       	ldi	r19, 0x00	; 0
 7fc:	30 93 89 00 	sts	0x0089, r19
 800:	20 93 88 00 	sts	0x0088, r18
	if (channel & CHAN_OC1B) OCR1B = dutycycle;
 804:	85 ff       	sbrs	r24, 5
 806:	06 c0       	rjmp	.+12     	; 0x814 <_Z13pwm_dutycycle11PWM_CHANNELh+0x28>
 808:	26 2f       	mov	r18, r22
 80a:	30 e0       	ldi	r19, 0x00	; 0
 80c:	30 93 8b 00 	sts	0x008B, r19
 810:	20 93 8a 00 	sts	0x008A, r18
	if (channel & CHAN_OC2A) OCR2A = dutycycle;
 814:	82 fd       	sbrc	r24, 2
 816:	60 93 b3 00 	sts	0x00B3, r22
	if (channel & CHAN_OC2B) OCR2B = dutycycle;
 81a:	83 fd       	sbrc	r24, 3
 81c:	60 93 b4 00 	sts	0x00B4, r22
 820:	08 95       	ret

00000822 <_Z14pwm_initialize11PWM_CHANNEL>:
    // Set mode of operation to FastPWM
    // Set clock source (prescaler)
    // Set to 50% duty cycle
    // 4 PWM channel outputs

	if (channel & CHAN_OC0A){
 822:	80 ff       	sbrs	r24, 0
 824:	0c c0       	rjmp	.+24     	; 0x83e <_Z14pwm_initialize11PWM_CHANNEL+0x1c>
        TCCR0A |= (1<<WGM00 | 1<<WGM01);
 826:	94 b5       	in	r25, 0x24	; 36
 828:	93 60       	ori	r25, 0x03	; 3
 82a:	94 bd       	out	0x24, r25	; 36
        TCCR0B |= (1<<CS01);
 82c:	95 b5       	in	r25, 0x25	; 37
 82e:	92 60       	ori	r25, 0x02	; 2
 830:	95 bd       	out	0x25, r25	; 37

        OCR2A = 0x00;
 832:	10 92 b3 00 	sts	0x00B3, r1
        OCR2B = 0x00;
 836:	10 92 b4 00 	sts	0x00B4, r1

        DDRD |= 1<<PD5; // OC0B
 83a:	55 9a       	sbi	0x0a, 5	; 10
        DDRD |= 1<<PD6; // OC0A
 83c:	56 9a       	sbi	0x0a, 6	; 10
	}
	if (channel & CHAN_OC0B) {
        //Not implemented yet
	}
	if (channel & CHAN_OC1A) {
 83e:	84 ff       	sbrs	r24, 4
 840:	14 c0       	rjmp	.+40     	; 0x86a <_Z14pwm_initialize11PWM_CHANNEL+0x48>
        TCCR1A |= (1<<WGM10 | 1<<WGM11);
 842:	e0 e8       	ldi	r30, 0x80	; 128
 844:	f0 e0       	ldi	r31, 0x00	; 0
 846:	90 81       	ld	r25, Z
 848:	93 60       	ori	r25, 0x03	; 3
 84a:	90 83       	st	Z, r25
        TCCR1B |= (1<<CS01);
 84c:	e1 e8       	ldi	r30, 0x81	; 129
 84e:	f0 e0       	ldi	r31, 0x00	; 0
 850:	90 81       	ld	r25, Z
 852:	92 60       	ori	r25, 0x02	; 2
 854:	90 83       	st	Z, r25

        OCR1A = 0x00;
 856:	10 92 89 00 	sts	0x0089, r1
 85a:	10 92 88 00 	sts	0x0088, r1
        OCR1B = 0x00;
 85e:	10 92 8b 00 	sts	0x008B, r1
 862:	10 92 8a 00 	sts	0x008A, r1

        DDRB |= 1<<PB1; // OC1A
 866:	21 9a       	sbi	0x04, 1	; 4
        DDRB |= 1<<PD2; // OC1B
 868:	22 9a       	sbi	0x04, 2	; 4

	}
	if (channel & CHAN_OC1B) {
        //Not implemented yet
	}
	if (channel & CHAN_OC2A) {
 86a:	82 ff       	sbrs	r24, 2
 86c:	0e c0       	rjmp	.+28     	; 0x88a <_Z14pwm_initialize11PWM_CHANNEL+0x68>
        TCCR2A |= (1<<WGM20 | 1<<WGM21);
 86e:	e0 eb       	ldi	r30, 0xB0	; 176
 870:	f0 e0       	ldi	r31, 0x00	; 0
 872:	80 81       	ld	r24, Z
 874:	83 60       	ori	r24, 0x03	; 3
 876:	80 83       	st	Z, r24
        TCCR2B |= (1<<CS21);
 878:	e1 eb       	ldi	r30, 0xB1	; 177
 87a:	f0 e0       	ldi	r31, 0x00	; 0
 87c:	80 81       	ld	r24, Z
 87e:	82 60       	ori	r24, 0x02	; 2
 880:	80 83       	st	Z, r24

        OCR0A = 0x00;
 882:	17 bc       	out	0x27, r1	; 39
        OCR0B = 0x00;
 884:	18 bc       	out	0x28, r1	; 40

        DDRB |= 1<<PB3; // OC2A
 886:	23 9a       	sbi	0x04, 3	; 4
        DDRD |= 1<<PD3; // OC2B
 888:	53 9a       	sbi	0x0a, 3	; 10
 88a:	08 95       	ret

0000088c <__mulsi3>:
 88c:	db 01       	movw	r26, r22
 88e:	8f 93       	push	r24
 890:	9f 93       	push	r25
 892:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <__muluhisi3>
 896:	bf 91       	pop	r27
 898:	af 91       	pop	r26
 89a:	a2 9f       	mul	r26, r18
 89c:	80 0d       	add	r24, r0
 89e:	91 1d       	adc	r25, r1
 8a0:	a3 9f       	mul	r26, r19
 8a2:	90 0d       	add	r25, r0
 8a4:	b2 9f       	mul	r27, r18
 8a6:	90 0d       	add	r25, r0
 8a8:	11 24       	eor	r1, r1
 8aa:	08 95       	ret

000008ac <__divmodsi4>:
 8ac:	05 2e       	mov	r0, r21
 8ae:	97 fb       	bst	r25, 7
 8b0:	1e f4       	brtc	.+6      	; 0x8b8 <__divmodsi4+0xc>
 8b2:	00 94       	com	r0
 8b4:	0e 94 6d 04 	call	0x8da	; 0x8da <__negsi2>
 8b8:	57 fd       	sbrc	r21, 7
 8ba:	07 d0       	rcall	.+14     	; 0x8ca <__divmodsi4_neg2>
 8bc:	0e 94 86 04 	call	0x90c	; 0x90c <__udivmodsi4>
 8c0:	07 fc       	sbrc	r0, 7
 8c2:	03 d0       	rcall	.+6      	; 0x8ca <__divmodsi4_neg2>
 8c4:	4e f4       	brtc	.+18     	; 0x8d8 <__divmodsi4_exit>
 8c6:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__negsi2>

000008ca <__divmodsi4_neg2>:
 8ca:	50 95       	com	r21
 8cc:	40 95       	com	r20
 8ce:	30 95       	com	r19
 8d0:	21 95       	neg	r18
 8d2:	3f 4f       	sbci	r19, 0xFF	; 255
 8d4:	4f 4f       	sbci	r20, 0xFF	; 255
 8d6:	5f 4f       	sbci	r21, 0xFF	; 255

000008d8 <__divmodsi4_exit>:
 8d8:	08 95       	ret

000008da <__negsi2>:
 8da:	90 95       	com	r25
 8dc:	80 95       	com	r24
 8de:	70 95       	com	r23
 8e0:	61 95       	neg	r22
 8e2:	7f 4f       	sbci	r23, 0xFF	; 255
 8e4:	8f 4f       	sbci	r24, 0xFF	; 255
 8e6:	9f 4f       	sbci	r25, 0xFF	; 255
 8e8:	08 95       	ret

000008ea <__tablejump2__>:
 8ea:	ee 0f       	add	r30, r30
 8ec:	ff 1f       	adc	r31, r31
 8ee:	05 90       	lpm	r0, Z+
 8f0:	f4 91       	lpm	r31, Z
 8f2:	e0 2d       	mov	r30, r0
 8f4:	09 94       	ijmp

000008f6 <__muluhisi3>:
 8f6:	0e 94 a8 04 	call	0x950	; 0x950 <__umulhisi3>
 8fa:	a5 9f       	mul	r26, r21
 8fc:	90 0d       	add	r25, r0
 8fe:	b4 9f       	mul	r27, r20
 900:	90 0d       	add	r25, r0
 902:	a4 9f       	mul	r26, r20
 904:	80 0d       	add	r24, r0
 906:	91 1d       	adc	r25, r1
 908:	11 24       	eor	r1, r1
 90a:	08 95       	ret

0000090c <__udivmodsi4>:
 90c:	a1 e2       	ldi	r26, 0x21	; 33
 90e:	1a 2e       	mov	r1, r26
 910:	aa 1b       	sub	r26, r26
 912:	bb 1b       	sub	r27, r27
 914:	fd 01       	movw	r30, r26
 916:	0d c0       	rjmp	.+26     	; 0x932 <__udivmodsi4_ep>

00000918 <__udivmodsi4_loop>:
 918:	aa 1f       	adc	r26, r26
 91a:	bb 1f       	adc	r27, r27
 91c:	ee 1f       	adc	r30, r30
 91e:	ff 1f       	adc	r31, r31
 920:	a2 17       	cp	r26, r18
 922:	b3 07       	cpc	r27, r19
 924:	e4 07       	cpc	r30, r20
 926:	f5 07       	cpc	r31, r21
 928:	20 f0       	brcs	.+8      	; 0x932 <__udivmodsi4_ep>
 92a:	a2 1b       	sub	r26, r18
 92c:	b3 0b       	sbc	r27, r19
 92e:	e4 0b       	sbc	r30, r20
 930:	f5 0b       	sbc	r31, r21

00000932 <__udivmodsi4_ep>:
 932:	66 1f       	adc	r22, r22
 934:	77 1f       	adc	r23, r23
 936:	88 1f       	adc	r24, r24
 938:	99 1f       	adc	r25, r25
 93a:	1a 94       	dec	r1
 93c:	69 f7       	brne	.-38     	; 0x918 <__udivmodsi4_loop>
 93e:	60 95       	com	r22
 940:	70 95       	com	r23
 942:	80 95       	com	r24
 944:	90 95       	com	r25
 946:	9b 01       	movw	r18, r22
 948:	ac 01       	movw	r20, r24
 94a:	bd 01       	movw	r22, r26
 94c:	cf 01       	movw	r24, r30
 94e:	08 95       	ret

00000950 <__umulhisi3>:
 950:	a2 9f       	mul	r26, r18
 952:	b0 01       	movw	r22, r0
 954:	b3 9f       	mul	r27, r19
 956:	c0 01       	movw	r24, r0
 958:	a3 9f       	mul	r26, r19
 95a:	70 0d       	add	r23, r0
 95c:	81 1d       	adc	r24, r1
 95e:	11 24       	eor	r1, r1
 960:	91 1d       	adc	r25, r1
 962:	b2 9f       	mul	r27, r18
 964:	70 0d       	add	r23, r0
 966:	81 1d       	adc	r24, r1
 968:	11 24       	eor	r1, r1
 96a:	91 1d       	adc	r25, r1
 96c:	08 95       	ret

0000096e <_exit>:
 96e:	f8 94       	cli

00000970 <__stop_program>:
 970:	ff cf       	rjmp	.-2      	; 0x970 <__stop_program>
