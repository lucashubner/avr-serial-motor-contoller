
bin/Debug/source-code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000008b0  00000944  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000944  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .stab         00002838  00000000  00000000  00000948  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000020e1  00000000  00000000  00003180  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00005261  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005274  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000052b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  000058a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001d  00000000  00000000  00005e4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00005e67  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__ctors_end>
   4:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
   8:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
   c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  10:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  14:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  1c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  24:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  28:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  2c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  30:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  34:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  38:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  3c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  40:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  44:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  48:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  4c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  50:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  54:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  58:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  5c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  60:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  64:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  68:	85 01       	movw	r16, r10
  6a:	c4 00       	.word	0x00c4	; ????
  6c:	cb 00       	.word	0x00cb	; ????
  6e:	d4 00       	.word	0x00d4	; ????
  70:	dd 00       	.word	0x00dd	; ????
  72:	e6 00       	.word	0x00e6	; ????
  74:	8d 01       	movw	r16, r26
  76:	8d 01       	movw	r16, r26
  78:	3e 01       	movw	r6, r28
  7a:	47 01       	movw	r8, r14
  7c:	ef 00       	.word	0x00ef	; ????
  7e:	f8 00       	.word	0x00f8	; ????
  80:	01 01       	movw	r0, r2
  82:	0a 01       	movw	r0, r20
  84:	11 01       	movw	r2, r2
  86:	1a 01       	movw	r2, r20
  88:	23 01       	movw	r4, r6
  8a:	2c 01       	movw	r4, r24
  8c:	35 01       	movw	r6, r10
  8e:	8d 01       	movw	r16, r26
  90:	8d 01       	movw	r16, r26
  92:	8d 01       	movw	r16, r26
  94:	50 01       	movw	r10, r0
  96:	58 01       	movw	r10, r16
  98:	61 01       	movw	r12, r2
  9a:	6a 01       	movw	r12, r20
  9c:	73 01       	movw	r14, r6
  9e:	7c 01       	movw	r14, r24
  a0:	59 02       	muls	r21, r25
  a2:	98 01       	movw	r18, r16
  a4:	9f 01       	movw	r18, r30
  a6:	a8 01       	movw	r20, r16
  a8:	b1 01       	movw	r22, r2
  aa:	ba 01       	movw	r22, r20
  ac:	61 02       	muls	r22, r17
  ae:	61 02       	muls	r22, r17
  b0:	12 02       	muls	r17, r18
  b2:	1b 02       	muls	r17, r27
  b4:	c3 01       	movw	r24, r6
  b6:	cc 01       	movw	r24, r24
  b8:	d5 01       	movw	r26, r10
  ba:	de 01       	movw	r26, r28
  bc:	e5 01       	movw	r28, r10
  be:	ee 01       	movw	r28, r28
  c0:	f7 01       	movw	r30, r14
  c2:	00 02       	muls	r16, r16
  c4:	09 02       	muls	r16, r25
  c6:	61 02       	muls	r22, r17
  c8:	61 02       	muls	r22, r17
  ca:	61 02       	muls	r22, r17
  cc:	24 02       	muls	r18, r20
  ce:	2c 02       	muls	r18, r28
  d0:	35 02       	muls	r19, r21
  d2:	3e 02       	muls	r19, r30
  d4:	47 02       	muls	r20, r23
  d6:	50 02       	muls	r21, r16

000000d8 <__ctors_end>:
  d8:	11 24       	eor	r1, r1
  da:	1f be       	out	0x3f, r1	; 63
  dc:	cf ef       	ldi	r28, 0xFF	; 255
  de:	d8 e0       	ldi	r29, 0x08	; 8
  e0:	de bf       	out	0x3e, r29	; 62
  e2:	cd bf       	out	0x3d, r28	; 61
  e4:	0e 94 78 00 	call	0xf0	; 0xf0 <main>
  e8:	0c 94 56 04 	jmp	0x8ac	; 0x8ac <_exit>

000000ec <__bad_interrupt>:
  ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <main>:
 */

#include <avr/io.h>

int main(void)
{
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <main>

000000f2 <_Z3maplllll>:
#include <avr/io.h>

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
  f2:	4f 92       	push	r4
  f4:	5f 92       	push	r5
  f6:	6f 92       	push	r6
  f8:	7f 92       	push	r7
  fa:	af 92       	push	r10
  fc:	bf 92       	push	r11
  fe:	cf 92       	push	r12
 100:	df 92       	push	r13
 102:	ef 92       	push	r14
 104:	ff 92       	push	r15
 106:	0f 93       	push	r16
 108:	1f 93       	push	r17
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	cd b7       	in	r28, 0x3d	; 61
 110:	de b7       	in	r29, 0x3e	; 62
 112:	29 01       	movw	r4, r18
 114:	3a 01       	movw	r6, r20
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 116:	9b 01       	movw	r18, r22
 118:	ac 01       	movw	r20, r24
 11a:	24 19       	sub	r18, r4
 11c:	35 09       	sbc	r19, r5
 11e:	46 09       	sbc	r20, r6
 120:	57 09       	sbc	r21, r7
 122:	89 89       	ldd	r24, Y+17	; 0x11
 124:	9a 89       	ldd	r25, Y+18	; 0x12
 126:	ab 89       	ldd	r26, Y+19	; 0x13
 128:	bc 89       	ldd	r27, Y+20	; 0x14
 12a:	bc 01       	movw	r22, r24
 12c:	cd 01       	movw	r24, r26
 12e:	6a 19       	sub	r22, r10
 130:	7b 09       	sbc	r23, r11
 132:	8c 09       	sbc	r24, r12
 134:	9d 09       	sbc	r25, r13
 136:	0e 94 e5 03 	call	0x7ca	; 0x7ca <__mulsi3>
 13a:	a8 01       	movw	r20, r16
 13c:	97 01       	movw	r18, r14
 13e:	24 19       	sub	r18, r4
 140:	35 09       	sbc	r19, r5
 142:	46 09       	sbc	r20, r6
 144:	57 09       	sbc	r21, r7
 146:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__divmodsi4>
 14a:	ca 01       	movw	r24, r20
 14c:	b9 01       	movw	r22, r18
 14e:	6a 0d       	add	r22, r10
 150:	7b 1d       	adc	r23, r11
 152:	8c 1d       	adc	r24, r12
 154:	9d 1d       	adc	r25, r13
}
 156:	df 91       	pop	r29
 158:	cf 91       	pop	r28
 15a:	1f 91       	pop	r17
 15c:	0f 91       	pop	r16
 15e:	ff 90       	pop	r15
 160:	ef 90       	pop	r14
 162:	df 90       	pop	r13
 164:	cf 90       	pop	r12
 166:	bf 90       	pop	r11
 168:	af 90       	pop	r10
 16a:	7f 90       	pop	r7
 16c:	6f 90       	pop	r6
 16e:	5f 90       	pop	r5
 170:	4f 90       	pop	r4
 172:	08 95       	ret

00000174 <_Z7pinModeii>:

void pinMode(int pin, int mode){
    // PORTD
    switch(pin){
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	8c 31       	cpi	r24, 0x1C	; 28
 178:	91 05       	cpc	r25, r1
 17a:	08 f0       	brcs	.+2      	; 0x17e <_Z7pinModeii+0xa>
 17c:	ce c0       	rjmp	.+412    	; 0x31a <_Z7pinModeii+0x1a6>
 17e:	8c 5c       	subi	r24, 0xCC	; 204
 180:	9f 4f       	sbci	r25, 0xFF	; 255
 182:	fc 01       	movw	r30, r24
 184:	0c 94 14 04 	jmp	0x828	; 0x828 <__tablejump2__>
        case 2:  DDRD = mode==0?  DDRD | PD0       :   DDRB &~PD0;          break;
 188:	67 2b       	or	r22, r23
 18a:	11 f4       	brne	.+4      	; 0x190 <_Z7pinModeii+0x1c>
 18c:	8a b1       	in	r24, 0x0a	; 10
 18e:	01 c0       	rjmp	.+2      	; 0x192 <_Z7pinModeii+0x1e>
 190:	84 b1       	in	r24, 0x04	; 4
 192:	8a b9       	out	0x0a, r24	; 10
 194:	08 95       	ret
        case 3:  DDRD = mode==0?  DDRD | (1<< PD1) :   DDRB & ~(1<<PD1);    break;
 196:	67 2b       	or	r22, r23
 198:	19 f4       	brne	.+6      	; 0x1a0 <_Z7pinModeii+0x2c>
 19a:	8a b1       	in	r24, 0x0a	; 10
 19c:	82 60       	ori	r24, 0x02	; 2
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <_Z7pinModeii+0x30>
 1a0:	84 b1       	in	r24, 0x04	; 4
 1a2:	8d 7f       	andi	r24, 0xFD	; 253
 1a4:	8a b9       	out	0x0a, r24	; 10
 1a6:	08 95       	ret
        case 4:  DDRD = mode==0?  DDRD | (1<< PD2) :   DDRB & ~(1<<PD2);    break;
 1a8:	67 2b       	or	r22, r23
 1aa:	19 f4       	brne	.+6      	; 0x1b2 <_Z7pinModeii+0x3e>
 1ac:	8a b1       	in	r24, 0x0a	; 10
 1ae:	84 60       	ori	r24, 0x04	; 4
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <_Z7pinModeii+0x42>
 1b2:	84 b1       	in	r24, 0x04	; 4
 1b4:	8b 7f       	andi	r24, 0xFB	; 251
 1b6:	8a b9       	out	0x0a, r24	; 10
 1b8:	08 95       	ret
        case 5:  DDRD = mode==0?  DDRD | (1<< PD3) :   DDRB & ~(1<<PD3);    break;
 1ba:	67 2b       	or	r22, r23
 1bc:	19 f4       	brne	.+6      	; 0x1c4 <_Z7pinModeii+0x50>
 1be:	8a b1       	in	r24, 0x0a	; 10
 1c0:	88 60       	ori	r24, 0x08	; 8
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <_Z7pinModeii+0x54>
 1c4:	84 b1       	in	r24, 0x04	; 4
 1c6:	87 7f       	andi	r24, 0xF7	; 247
 1c8:	8a b9       	out	0x0a, r24	; 10
 1ca:	08 95       	ret
        case 6:  DDRD = mode==0?  DDRD | (1<< PD4) :   DDRB & ~(1<<PD4);    break;
 1cc:	67 2b       	or	r22, r23
 1ce:	19 f4       	brne	.+6      	; 0x1d6 <_Z7pinModeii+0x62>
 1d0:	8a b1       	in	r24, 0x0a	; 10
 1d2:	80 61       	ori	r24, 0x10	; 16
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <_Z7pinModeii+0x66>
 1d6:	84 b1       	in	r24, 0x04	; 4
 1d8:	8f 7e       	andi	r24, 0xEF	; 239
 1da:	8a b9       	out	0x0a, r24	; 10
 1dc:	08 95       	ret
        case 11: DDRD = mode==0?  DDRD | (1<< PD5) :   DDRB & ~(1<<PD5);    break;
 1de:	67 2b       	or	r22, r23
 1e0:	19 f4       	brne	.+6      	; 0x1e8 <_Z7pinModeii+0x74>
 1e2:	8a b1       	in	r24, 0x0a	; 10
 1e4:	80 62       	ori	r24, 0x20	; 32
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <_Z7pinModeii+0x78>
 1e8:	84 b1       	in	r24, 0x04	; 4
 1ea:	8f 7d       	andi	r24, 0xDF	; 223
 1ec:	8a b9       	out	0x0a, r24	; 10
 1ee:	08 95       	ret
        case 12: DDRD = mode==0?  DDRD | (1<< PD6) :   DDRB & ~(1<<PD6);    break;
 1f0:	67 2b       	or	r22, r23
 1f2:	19 f4       	brne	.+6      	; 0x1fa <_Z7pinModeii+0x86>
 1f4:	8a b1       	in	r24, 0x0a	; 10
 1f6:	80 64       	ori	r24, 0x40	; 64
 1f8:	02 c0       	rjmp	.+4      	; 0x1fe <_Z7pinModeii+0x8a>
 1fa:	84 b1       	in	r24, 0x04	; 4
 1fc:	8f 7b       	andi	r24, 0xBF	; 191
 1fe:	8a b9       	out	0x0a, r24	; 10
 200:	08 95       	ret
        case 13: DDRD = mode==0?  DDRD | (1<< PD7) :   DDRB & ~(1<<PD7);    break;
 202:	67 2b       	or	r22, r23
 204:	19 f4       	brne	.+6      	; 0x20c <_Z7pinModeii+0x98>
 206:	8a b1       	in	r24, 0x0a	; 10
 208:	80 68       	ori	r24, 0x80	; 128
 20a:	02 c0       	rjmp	.+4      	; 0x210 <_Z7pinModeii+0x9c>
 20c:	84 b1       	in	r24, 0x04	; 4
 20e:	8f 77       	andi	r24, 0x7F	; 127
 210:	8a b9       	out	0x0a, r24	; 10
 212:	08 95       	ret

        // PORTB
        case 14: DDRB = mode==0?  DDRB | PB0       :   DDRB & ~PB0;         break;
 214:	67 2b       	or	r22, r23
 216:	11 f4       	brne	.+4      	; 0x21c <_Z7pinModeii+0xa8>
 218:	84 b1       	in	r24, 0x04	; 4
 21a:	01 c0       	rjmp	.+2      	; 0x21e <_Z7pinModeii+0xaa>
 21c:	84 b1       	in	r24, 0x04	; 4
 21e:	84 b9       	out	0x04, r24	; 4
 220:	08 95       	ret
        case 15: DDRB = mode==0?  DDRD | (1<< PB1) :   DDRB & ~(1<<PB1);    break;
 222:	67 2b       	or	r22, r23
 224:	19 f4       	brne	.+6      	; 0x22c <_Z7pinModeii+0xb8>
 226:	8a b1       	in	r24, 0x0a	; 10
 228:	82 60       	ori	r24, 0x02	; 2
 22a:	02 c0       	rjmp	.+4      	; 0x230 <_Z7pinModeii+0xbc>
 22c:	84 b1       	in	r24, 0x04	; 4
 22e:	8d 7f       	andi	r24, 0xFD	; 253
 230:	84 b9       	out	0x04, r24	; 4
 232:	08 95       	ret
        case 16: DDRB = mode==0?  DDRD | (1<< PB2) :   DDRB & ~(1<<PB2);    break;
 234:	67 2b       	or	r22, r23
 236:	19 f4       	brne	.+6      	; 0x23e <_Z7pinModeii+0xca>
 238:	8a b1       	in	r24, 0x0a	; 10
 23a:	84 60       	ori	r24, 0x04	; 4
 23c:	02 c0       	rjmp	.+4      	; 0x242 <_Z7pinModeii+0xce>
 23e:	84 b1       	in	r24, 0x04	; 4
 240:	8b 7f       	andi	r24, 0xFB	; 251
 242:	84 b9       	out	0x04, r24	; 4
 244:	08 95       	ret
        case 17: DDRB = mode==0?  DDRD | (1<< PB3) :   DDRB & ~(1<<PB3);    break;
 246:	67 2b       	or	r22, r23
 248:	19 f4       	brne	.+6      	; 0x250 <_Z7pinModeii+0xdc>
 24a:	8a b1       	in	r24, 0x0a	; 10
 24c:	88 60       	ori	r24, 0x08	; 8
 24e:	02 c0       	rjmp	.+4      	; 0x254 <_Z7pinModeii+0xe0>
 250:	84 b1       	in	r24, 0x04	; 4
 252:	87 7f       	andi	r24, 0xF7	; 247
 254:	84 b9       	out	0x04, r24	; 4
 256:	08 95       	ret
        case 18: DDRB = mode==0?  DDRD | (1<< PB4) :   DDRB & ~(1<<PB4);    break;
 258:	67 2b       	or	r22, r23
 25a:	19 f4       	brne	.+6      	; 0x262 <_Z7pinModeii+0xee>
 25c:	8a b1       	in	r24, 0x0a	; 10
 25e:	80 61       	ori	r24, 0x10	; 16
 260:	02 c0       	rjmp	.+4      	; 0x266 <_Z7pinModeii+0xf2>
 262:	84 b1       	in	r24, 0x04	; 4
 264:	8f 7e       	andi	r24, 0xEF	; 239
 266:	84 b9       	out	0x04, r24	; 4
 268:	08 95       	ret
        case 19: DDRB = mode==0?  DDRD | (1<< PB5) :   DDRB & ~(1<<PB5);    break;
 26a:	67 2b       	or	r22, r23
 26c:	19 f4       	brne	.+6      	; 0x274 <_Z7pinModeii+0x100>
 26e:	8a b1       	in	r24, 0x0a	; 10
 270:	80 62       	ori	r24, 0x20	; 32
 272:	02 c0       	rjmp	.+4      	; 0x278 <_Z7pinModeii+0x104>
 274:	84 b1       	in	r24, 0x04	; 4
 276:	8f 7d       	andi	r24, 0xDF	; 223
 278:	84 b9       	out	0x04, r24	; 4
 27a:	08 95       	ret
        case 9:  DDRB = mode==0?  DDRD | (1<< PB6) :   DDRB & ~(1<<PB6);    break;
 27c:	67 2b       	or	r22, r23
 27e:	19 f4       	brne	.+6      	; 0x286 <_Z7pinModeii+0x112>
 280:	8a b1       	in	r24, 0x0a	; 10
 282:	80 64       	ori	r24, 0x40	; 64
 284:	02 c0       	rjmp	.+4      	; 0x28a <_Z7pinModeii+0x116>
 286:	84 b1       	in	r24, 0x04	; 4
 288:	8f 7b       	andi	r24, 0xBF	; 191
 28a:	84 b9       	out	0x04, r24	; 4
 28c:	08 95       	ret
        case 10: DDRB = mode==0?  DDRD | (1<< PB7) :   DDRB & ~(1<<PB7);    break;
 28e:	67 2b       	or	r22, r23
 290:	19 f4       	brne	.+6      	; 0x298 <_Z7pinModeii+0x124>
 292:	8a b1       	in	r24, 0x0a	; 10
 294:	80 68       	ori	r24, 0x80	; 128
 296:	02 c0       	rjmp	.+4      	; 0x29c <_Z7pinModeii+0x128>
 298:	84 b1       	in	r24, 0x04	; 4
 29a:	8f 77       	andi	r24, 0x7F	; 127
 29c:	84 b9       	out	0x04, r24	; 4
 29e:	08 95       	ret

        // PORT C
        case 23: DDRC = mode==0?  DDRC | PC0       :   DDRB & ~PB1;         break;
 2a0:	67 2b       	or	r22, r23
 2a2:	11 f4       	brne	.+4      	; 0x2a8 <_Z7pinModeii+0x134>
 2a4:	87 b1       	in	r24, 0x07	; 7
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <_Z7pinModeii+0x138>
 2a8:	84 b1       	in	r24, 0x04	; 4
 2aa:	8e 7f       	andi	r24, 0xFE	; 254
 2ac:	87 b9       	out	0x07, r24	; 7
 2ae:	08 95       	ret
        case 24: DDRC = mode==0?  DDRC | (1<< PC1) :   DDRB & ~(1<<PC1);    break;
 2b0:	67 2b       	or	r22, r23
 2b2:	19 f4       	brne	.+6      	; 0x2ba <_Z7pinModeii+0x146>
 2b4:	87 b1       	in	r24, 0x07	; 7
 2b6:	82 60       	ori	r24, 0x02	; 2
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <_Z7pinModeii+0x14a>
 2ba:	84 b1       	in	r24, 0x04	; 4
 2bc:	8d 7f       	andi	r24, 0xFD	; 253
 2be:	87 b9       	out	0x07, r24	; 7
 2c0:	08 95       	ret
        case 25: DDRC = mode==0?  DDRC | (1<< PC2) :   DDRB & ~(1<<PC2);    break;
 2c2:	67 2b       	or	r22, r23
 2c4:	19 f4       	brne	.+6      	; 0x2cc <_Z7pinModeii+0x158>
 2c6:	87 b1       	in	r24, 0x07	; 7
 2c8:	84 60       	ori	r24, 0x04	; 4
 2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <_Z7pinModeii+0x15c>
 2cc:	84 b1       	in	r24, 0x04	; 4
 2ce:	8b 7f       	andi	r24, 0xFB	; 251
 2d0:	87 b9       	out	0x07, r24	; 7
 2d2:	08 95       	ret
        case 26: DDRC = mode==0?  DDRC | (1<< PC3) :   DDRB & ~(1<<PC3);    break;
 2d4:	67 2b       	or	r22, r23
 2d6:	19 f4       	brne	.+6      	; 0x2de <_Z7pinModeii+0x16a>
 2d8:	87 b1       	in	r24, 0x07	; 7
 2da:	88 60       	ori	r24, 0x08	; 8
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <_Z7pinModeii+0x16e>
 2de:	84 b1       	in	r24, 0x04	; 4
 2e0:	87 7f       	andi	r24, 0xF7	; 247
 2e2:	87 b9       	out	0x07, r24	; 7
 2e4:	08 95       	ret
        case 27: DDRC = mode==0?  DDRC | (1<< PC4) :   DDRB & ~(1<<PC4);    break;
 2e6:	67 2b       	or	r22, r23
 2e8:	19 f4       	brne	.+6      	; 0x2f0 <_Z7pinModeii+0x17c>
 2ea:	87 b1       	in	r24, 0x07	; 7
 2ec:	80 61       	ori	r24, 0x10	; 16
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <_Z7pinModeii+0x180>
 2f0:	84 b1       	in	r24, 0x04	; 4
 2f2:	8f 7e       	andi	r24, 0xEF	; 239
 2f4:	87 b9       	out	0x07, r24	; 7
 2f6:	08 95       	ret
        case 28: DDRC = mode==0?  DDRC | (1<< PC5) :   DDRB & ~(1<<PC5);    break;
 2f8:	67 2b       	or	r22, r23
 2fa:	19 f4       	brne	.+6      	; 0x302 <_Z7pinModeii+0x18e>
 2fc:	87 b1       	in	r24, 0x07	; 7
 2fe:	80 62       	ori	r24, 0x20	; 32
 300:	02 c0       	rjmp	.+4      	; 0x306 <_Z7pinModeii+0x192>
 302:	84 b1       	in	r24, 0x04	; 4
 304:	8f 7d       	andi	r24, 0xDF	; 223
 306:	87 b9       	out	0x07, r24	; 7
 308:	08 95       	ret
        case 1:  DDRC = mode==0?  DDRC | (1<< PC6) :   DDRB & ~(1<<PC6);    break;
 30a:	67 2b       	or	r22, r23
 30c:	19 f4       	brne	.+6      	; 0x314 <_Z7pinModeii+0x1a0>
 30e:	87 b1       	in	r24, 0x07	; 7
 310:	80 64       	ori	r24, 0x40	; 64
 312:	02 c0       	rjmp	.+4      	; 0x318 <_Z7pinModeii+0x1a4>
 314:	84 b1       	in	r24, 0x04	; 4
 316:	8f 7b       	andi	r24, 0xBF	; 191
 318:	87 b9       	out	0x07, r24	; 7
 31a:	08 95       	ret

0000031c <_Z12digitalWriteii>:
    }
}

void digitalWrite(int pin, int mode){
        switch(pin){
 31c:	01 97       	sbiw	r24, 0x01	; 1
 31e:	8c 31       	cpi	r24, 0x1C	; 28
 320:	91 05       	cpc	r25, r1
 322:	08 f0       	brcs	.+2      	; 0x326 <_Z12digitalWriteii+0xa>
 324:	ce c0       	rjmp	.+412    	; 0x4c2 <_Z12digitalWriteii+0x1a6>
 326:	80 5b       	subi	r24, 0xB0	; 176
 328:	9f 4f       	sbci	r25, 0xFF	; 255
 32a:	fc 01       	movw	r30, r24
 32c:	0c 94 14 04 	jmp	0x828	; 0x828 <__tablejump2__>
        case 2:  PORTD = mode==0?  DDRD | PD0       :   DDRB &~PD0;          break;
 330:	67 2b       	or	r22, r23
 332:	11 f4       	brne	.+4      	; 0x338 <_Z12digitalWriteii+0x1c>
 334:	8a b1       	in	r24, 0x0a	; 10
 336:	01 c0       	rjmp	.+2      	; 0x33a <_Z12digitalWriteii+0x1e>
 338:	84 b1       	in	r24, 0x04	; 4
 33a:	8b b9       	out	0x0b, r24	; 11
 33c:	08 95       	ret
        case 3:  PORTD = mode==0?  DDRD | (1<< PD1) :   DDRB & ~(1<<PD1);    break;
 33e:	67 2b       	or	r22, r23
 340:	19 f4       	brne	.+6      	; 0x348 <_Z12digitalWriteii+0x2c>
 342:	8a b1       	in	r24, 0x0a	; 10
 344:	82 60       	ori	r24, 0x02	; 2
 346:	02 c0       	rjmp	.+4      	; 0x34c <_Z12digitalWriteii+0x30>
 348:	84 b1       	in	r24, 0x04	; 4
 34a:	8d 7f       	andi	r24, 0xFD	; 253
 34c:	8b b9       	out	0x0b, r24	; 11
 34e:	08 95       	ret
        case 4:  PORTD = mode==0?  DDRD | (1<< PD2) :   DDRB & ~(1<<PD2);    break;
 350:	67 2b       	or	r22, r23
 352:	19 f4       	brne	.+6      	; 0x35a <_Z12digitalWriteii+0x3e>
 354:	8a b1       	in	r24, 0x0a	; 10
 356:	84 60       	ori	r24, 0x04	; 4
 358:	02 c0       	rjmp	.+4      	; 0x35e <_Z12digitalWriteii+0x42>
 35a:	84 b1       	in	r24, 0x04	; 4
 35c:	8b 7f       	andi	r24, 0xFB	; 251
 35e:	8b b9       	out	0x0b, r24	; 11
 360:	08 95       	ret
        case 5:  PORTD = mode==0?  DDRD | (1<< PD3) :   DDRB & ~(1<<PD3);    break;
 362:	67 2b       	or	r22, r23
 364:	19 f4       	brne	.+6      	; 0x36c <_Z12digitalWriteii+0x50>
 366:	8a b1       	in	r24, 0x0a	; 10
 368:	88 60       	ori	r24, 0x08	; 8
 36a:	02 c0       	rjmp	.+4      	; 0x370 <_Z12digitalWriteii+0x54>
 36c:	84 b1       	in	r24, 0x04	; 4
 36e:	87 7f       	andi	r24, 0xF7	; 247
 370:	8b b9       	out	0x0b, r24	; 11
 372:	08 95       	ret
        case 6:  PORTD = mode==0?  DDRD | (1<< PD4) :   DDRB & ~(1<<PD4);    break;
 374:	67 2b       	or	r22, r23
 376:	19 f4       	brne	.+6      	; 0x37e <_Z12digitalWriteii+0x62>
 378:	8a b1       	in	r24, 0x0a	; 10
 37a:	80 61       	ori	r24, 0x10	; 16
 37c:	02 c0       	rjmp	.+4      	; 0x382 <_Z12digitalWriteii+0x66>
 37e:	84 b1       	in	r24, 0x04	; 4
 380:	8f 7e       	andi	r24, 0xEF	; 239
 382:	8b b9       	out	0x0b, r24	; 11
 384:	08 95       	ret
        case 11: PORTD = mode==0?  DDRD | (1<< PD5) :   DDRB & ~(1<<PD5);    break;
 386:	67 2b       	or	r22, r23
 388:	19 f4       	brne	.+6      	; 0x390 <_Z12digitalWriteii+0x74>
 38a:	8a b1       	in	r24, 0x0a	; 10
 38c:	80 62       	ori	r24, 0x20	; 32
 38e:	02 c0       	rjmp	.+4      	; 0x394 <_Z12digitalWriteii+0x78>
 390:	84 b1       	in	r24, 0x04	; 4
 392:	8f 7d       	andi	r24, 0xDF	; 223
 394:	8b b9       	out	0x0b, r24	; 11
 396:	08 95       	ret
        case 12: PORTD = mode==0?  DDRD | (1<< PD6) :   DDRB & ~(1<<PD6);    break;
 398:	67 2b       	or	r22, r23
 39a:	19 f4       	brne	.+6      	; 0x3a2 <_Z12digitalWriteii+0x86>
 39c:	8a b1       	in	r24, 0x0a	; 10
 39e:	80 64       	ori	r24, 0x40	; 64
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <_Z12digitalWriteii+0x8a>
 3a2:	84 b1       	in	r24, 0x04	; 4
 3a4:	8f 7b       	andi	r24, 0xBF	; 191
 3a6:	8b b9       	out	0x0b, r24	; 11
 3a8:	08 95       	ret
        case 13: PORTD = mode==0?  DDRD | (1<< PD7) :   DDRB & ~(1<<PD7);    break;
 3aa:	67 2b       	or	r22, r23
 3ac:	19 f4       	brne	.+6      	; 0x3b4 <_Z12digitalWriteii+0x98>
 3ae:	8a b1       	in	r24, 0x0a	; 10
 3b0:	80 68       	ori	r24, 0x80	; 128
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <_Z12digitalWriteii+0x9c>
 3b4:	84 b1       	in	r24, 0x04	; 4
 3b6:	8f 77       	andi	r24, 0x7F	; 127
 3b8:	8b b9       	out	0x0b, r24	; 11
 3ba:	08 95       	ret

        // PORTB
        case 14: PORTB = mode==0?  DDRB | PB0       :   DDRB & ~PB0;         break;
 3bc:	67 2b       	or	r22, r23
 3be:	11 f4       	brne	.+4      	; 0x3c4 <_Z12digitalWriteii+0xa8>
 3c0:	84 b1       	in	r24, 0x04	; 4
 3c2:	01 c0       	rjmp	.+2      	; 0x3c6 <_Z12digitalWriteii+0xaa>
 3c4:	84 b1       	in	r24, 0x04	; 4
 3c6:	85 b9       	out	0x05, r24	; 5
 3c8:	08 95       	ret
        case 15: PORTB = mode==0?  DDRD | (1<< PB1) :   DDRB & ~(1<<PB1);    break;
 3ca:	67 2b       	or	r22, r23
 3cc:	19 f4       	brne	.+6      	; 0x3d4 <_Z12digitalWriteii+0xb8>
 3ce:	8a b1       	in	r24, 0x0a	; 10
 3d0:	82 60       	ori	r24, 0x02	; 2
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <_Z12digitalWriteii+0xbc>
 3d4:	84 b1       	in	r24, 0x04	; 4
 3d6:	8d 7f       	andi	r24, 0xFD	; 253
 3d8:	85 b9       	out	0x05, r24	; 5
 3da:	08 95       	ret
        case 16: PORTB = mode==0?  DDRD | (1<< PB2) :   DDRB & ~(1<<PB2);    break;
 3dc:	67 2b       	or	r22, r23
 3de:	19 f4       	brne	.+6      	; 0x3e6 <_Z12digitalWriteii+0xca>
 3e0:	8a b1       	in	r24, 0x0a	; 10
 3e2:	84 60       	ori	r24, 0x04	; 4
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <_Z12digitalWriteii+0xce>
 3e6:	84 b1       	in	r24, 0x04	; 4
 3e8:	8b 7f       	andi	r24, 0xFB	; 251
 3ea:	85 b9       	out	0x05, r24	; 5
 3ec:	08 95       	ret
        case 17: PORTB = mode==0?  DDRD | (1<< PB3) :   DDRB & ~(1<<PB3);    break;
 3ee:	67 2b       	or	r22, r23
 3f0:	19 f4       	brne	.+6      	; 0x3f8 <_Z12digitalWriteii+0xdc>
 3f2:	8a b1       	in	r24, 0x0a	; 10
 3f4:	88 60       	ori	r24, 0x08	; 8
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <_Z12digitalWriteii+0xe0>
 3f8:	84 b1       	in	r24, 0x04	; 4
 3fa:	87 7f       	andi	r24, 0xF7	; 247
 3fc:	85 b9       	out	0x05, r24	; 5
 3fe:	08 95       	ret
        case 18: PORTB = mode==0?  DDRD | (1<< PB4) :   DDRB & ~(1<<PB4);    break;
 400:	67 2b       	or	r22, r23
 402:	19 f4       	brne	.+6      	; 0x40a <_Z12digitalWriteii+0xee>
 404:	8a b1       	in	r24, 0x0a	; 10
 406:	80 61       	ori	r24, 0x10	; 16
 408:	02 c0       	rjmp	.+4      	; 0x40e <_Z12digitalWriteii+0xf2>
 40a:	84 b1       	in	r24, 0x04	; 4
 40c:	8f 7e       	andi	r24, 0xEF	; 239
 40e:	85 b9       	out	0x05, r24	; 5
 410:	08 95       	ret
        case 19: PORTB = mode==0?  DDRD | (1<< PB5) :   DDRB & ~(1<<PB5);    break;
 412:	67 2b       	or	r22, r23
 414:	19 f4       	brne	.+6      	; 0x41c <_Z12digitalWriteii+0x100>
 416:	8a b1       	in	r24, 0x0a	; 10
 418:	80 62       	ori	r24, 0x20	; 32
 41a:	02 c0       	rjmp	.+4      	; 0x420 <_Z12digitalWriteii+0x104>
 41c:	84 b1       	in	r24, 0x04	; 4
 41e:	8f 7d       	andi	r24, 0xDF	; 223
 420:	85 b9       	out	0x05, r24	; 5
 422:	08 95       	ret
        case 9:  PORTB = mode==0?  DDRD | (1<< PB6) :   DDRB & ~(1<<PB6);    break;
 424:	67 2b       	or	r22, r23
 426:	19 f4       	brne	.+6      	; 0x42e <_Z12digitalWriteii+0x112>
 428:	8a b1       	in	r24, 0x0a	; 10
 42a:	80 64       	ori	r24, 0x40	; 64
 42c:	02 c0       	rjmp	.+4      	; 0x432 <_Z12digitalWriteii+0x116>
 42e:	84 b1       	in	r24, 0x04	; 4
 430:	8f 7b       	andi	r24, 0xBF	; 191
 432:	85 b9       	out	0x05, r24	; 5
 434:	08 95       	ret
        case 10: PORTB = mode==0?  DDRD | (1<< PB7) :   DDRB & ~(1<<PB7);    break;
 436:	67 2b       	or	r22, r23
 438:	19 f4       	brne	.+6      	; 0x440 <_Z12digitalWriteii+0x124>
 43a:	8a b1       	in	r24, 0x0a	; 10
 43c:	80 68       	ori	r24, 0x80	; 128
 43e:	02 c0       	rjmp	.+4      	; 0x444 <_Z12digitalWriteii+0x128>
 440:	84 b1       	in	r24, 0x04	; 4
 442:	8f 77       	andi	r24, 0x7F	; 127
 444:	85 b9       	out	0x05, r24	; 5
 446:	08 95       	ret

        // PORT C
        case 23: PORTC = mode==0?  DDRC | PC0       :   DDRB & ~PB1;         break;
 448:	67 2b       	or	r22, r23
 44a:	11 f4       	brne	.+4      	; 0x450 <_Z12digitalWriteii+0x134>
 44c:	87 b1       	in	r24, 0x07	; 7
 44e:	02 c0       	rjmp	.+4      	; 0x454 <_Z12digitalWriteii+0x138>
 450:	84 b1       	in	r24, 0x04	; 4
 452:	8e 7f       	andi	r24, 0xFE	; 254
 454:	88 b9       	out	0x08, r24	; 8
 456:	08 95       	ret
        case 24: PORTC = mode==0?  DDRC | (1<< PC1) :   DDRB & ~(1<<PC1);    break;
 458:	67 2b       	or	r22, r23
 45a:	19 f4       	brne	.+6      	; 0x462 <_Z12digitalWriteii+0x146>
 45c:	87 b1       	in	r24, 0x07	; 7
 45e:	82 60       	ori	r24, 0x02	; 2
 460:	02 c0       	rjmp	.+4      	; 0x466 <_Z12digitalWriteii+0x14a>
 462:	84 b1       	in	r24, 0x04	; 4
 464:	8d 7f       	andi	r24, 0xFD	; 253
 466:	88 b9       	out	0x08, r24	; 8
 468:	08 95       	ret
        case 25: PORTC = mode==0?  DDRC | (1<< PC2) :   DDRB & ~(1<<PC2);    break;
 46a:	67 2b       	or	r22, r23
 46c:	19 f4       	brne	.+6      	; 0x474 <_Z12digitalWriteii+0x158>
 46e:	87 b1       	in	r24, 0x07	; 7
 470:	84 60       	ori	r24, 0x04	; 4
 472:	02 c0       	rjmp	.+4      	; 0x478 <_Z12digitalWriteii+0x15c>
 474:	84 b1       	in	r24, 0x04	; 4
 476:	8b 7f       	andi	r24, 0xFB	; 251
 478:	88 b9       	out	0x08, r24	; 8
 47a:	08 95       	ret
        case 26: PORTC = mode==0?  DDRC | (1<< PC3) :   DDRB & ~(1<<PC3);    break;
 47c:	67 2b       	or	r22, r23
 47e:	19 f4       	brne	.+6      	; 0x486 <_Z12digitalWriteii+0x16a>
 480:	87 b1       	in	r24, 0x07	; 7
 482:	88 60       	ori	r24, 0x08	; 8
 484:	02 c0       	rjmp	.+4      	; 0x48a <_Z12digitalWriteii+0x16e>
 486:	84 b1       	in	r24, 0x04	; 4
 488:	87 7f       	andi	r24, 0xF7	; 247
 48a:	88 b9       	out	0x08, r24	; 8
 48c:	08 95       	ret
        case 27: PORTC = mode==0?  DDRC | (1<< PC4) :   DDRB & ~(1<<PC4);    break;
 48e:	67 2b       	or	r22, r23
 490:	19 f4       	brne	.+6      	; 0x498 <_Z12digitalWriteii+0x17c>
 492:	87 b1       	in	r24, 0x07	; 7
 494:	80 61       	ori	r24, 0x10	; 16
 496:	02 c0       	rjmp	.+4      	; 0x49c <_Z12digitalWriteii+0x180>
 498:	84 b1       	in	r24, 0x04	; 4
 49a:	8f 7e       	andi	r24, 0xEF	; 239
 49c:	88 b9       	out	0x08, r24	; 8
 49e:	08 95       	ret
        case 28: PORTC = mode==0?  DDRC | (1<< PC5) :   DDRB & ~(1<<PC5);    break;
 4a0:	67 2b       	or	r22, r23
 4a2:	19 f4       	brne	.+6      	; 0x4aa <_Z12digitalWriteii+0x18e>
 4a4:	87 b1       	in	r24, 0x07	; 7
 4a6:	80 62       	ori	r24, 0x20	; 32
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <_Z12digitalWriteii+0x192>
 4aa:	84 b1       	in	r24, 0x04	; 4
 4ac:	8f 7d       	andi	r24, 0xDF	; 223
 4ae:	88 b9       	out	0x08, r24	; 8
 4b0:	08 95       	ret
        case 1:  PORTC = mode==0?  DDRC | (1<< PC6) :   DDRB & ~(1<<PC6);    break;
 4b2:	67 2b       	or	r22, r23
 4b4:	19 f4       	brne	.+6      	; 0x4bc <_Z12digitalWriteii+0x1a0>
 4b6:	87 b1       	in	r24, 0x07	; 7
 4b8:	80 64       	ori	r24, 0x40	; 64
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <_Z12digitalWriteii+0x1a4>
 4bc:	84 b1       	in	r24, 0x04	; 4
 4be:	8f 7b       	andi	r24, 0xBF	; 191
 4c0:	88 b9       	out	0x08, r24	; 8
 4c2:	08 95       	ret

000004c4 <_ZN5MotorC1Eiiiiii>:
#include "Motor.h"

#include "common.h"


Motor::Motor(int EN1, int EN2, int I1, int I2, int I3, int I4)
 4c4:	6f 92       	push	r6
 4c6:	7f 92       	push	r7
 4c8:	8f 92       	push	r8
 4ca:	9f 92       	push	r9
 4cc:	af 92       	push	r10
 4ce:	bf 92       	push	r11
 4d0:	cf 92       	push	r12
 4d2:	df 92       	push	r13
 4d4:	ef 92       	push	r14
 4d6:	ff 92       	push	r15
 4d8:	0f 93       	push	r16
 4da:	1f 93       	push	r17
 4dc:	cf 93       	push	r28
 4de:	df 93       	push	r29
 4e0:	ec 01       	movw	r28, r24
 4e2:	4b 01       	movw	r8, r22
 4e4:	5a 01       	movw	r10, r20
 4e6:	39 01       	movw	r6, r18
{
    //ctor
    pinMode(EN1, INPUT); this->EN1 = EN1;
 4e8:	61 e0       	ldi	r22, 0x01	; 1
 4ea:	70 e0       	ldi	r23, 0x00	; 0
 4ec:	c4 01       	movw	r24, r8
 4ee:	0e 94 ba 00 	call	0x174	; 0x174 <_Z7pinModeii>
 4f2:	99 82       	std	Y+1, r9	; 0x01
 4f4:	88 82       	st	Y, r8
    pinMode(EN2, INPUT); this->EN2 = EN2;
 4f6:	61 e0       	ldi	r22, 0x01	; 1
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	c5 01       	movw	r24, r10
 4fc:	0e 94 ba 00 	call	0x174	; 0x174 <_Z7pinModeii>
 500:	bb 82       	std	Y+3, r11	; 0x03
 502:	aa 82       	std	Y+2, r10	; 0x02
    pinMode(I1, OUTPUT); this->I1 = I1;
 504:	60 e0       	ldi	r22, 0x00	; 0
 506:	70 e0       	ldi	r23, 0x00	; 0
 508:	c3 01       	movw	r24, r6
 50a:	0e 94 ba 00 	call	0x174	; 0x174 <_Z7pinModeii>
 50e:	7d 82       	std	Y+5, r7	; 0x05
 510:	6c 82       	std	Y+4, r6	; 0x04
    pinMode(I2, OUTPUT); this->I2 = I2;
 512:	60 e0       	ldi	r22, 0x00	; 0
 514:	70 e0       	ldi	r23, 0x00	; 0
 516:	c8 01       	movw	r24, r16
 518:	0e 94 ba 00 	call	0x174	; 0x174 <_Z7pinModeii>
 51c:	1f 83       	std	Y+7, r17	; 0x07
 51e:	0e 83       	std	Y+6, r16	; 0x06
    pinMode(I3, OUTPUT); this->I3 = I3;
 520:	60 e0       	ldi	r22, 0x00	; 0
 522:	70 e0       	ldi	r23, 0x00	; 0
 524:	c7 01       	movw	r24, r14
 526:	0e 94 ba 00 	call	0x174	; 0x174 <_Z7pinModeii>
 52a:	f9 86       	std	Y+9, r15	; 0x09
 52c:	e8 86       	std	Y+8, r14	; 0x08
    pinMode(I4, OUTPUT); this->I4 = I4;
 52e:	60 e0       	ldi	r22, 0x00	; 0
 530:	70 e0       	ldi	r23, 0x00	; 0
 532:	c6 01       	movw	r24, r12
 534:	0e 94 ba 00 	call	0x174	; 0x174 <_Z7pinModeii>
 538:	db 86       	std	Y+11, r13	; 0x0b
 53a:	ca 86       	std	Y+10, r12	; 0x0a
}
 53c:	df 91       	pop	r29
 53e:	cf 91       	pop	r28
 540:	1f 91       	pop	r17
 542:	0f 91       	pop	r16
 544:	ff 90       	pop	r15
 546:	ef 90       	pop	r14
 548:	df 90       	pop	r13
 54a:	cf 90       	pop	r12
 54c:	bf 90       	pop	r11
 54e:	af 90       	pop	r10
 550:	9f 90       	pop	r9
 552:	8f 90       	pop	r8
 554:	7f 90       	pop	r7
 556:	6f 90       	pop	r6
 558:	08 95       	ret

0000055a <_ZN5Motor4stopEv>:
void Motor::leftWheelBackward(){
    stop();
    digitalWrite(this->I2, HIGH);
}

void Motor::stop(){
 55a:	cf 93       	push	r28
 55c:	df 93       	push	r29
 55e:	ec 01       	movw	r28, r24
    digitalWrite(this->I1, LOW);
 560:	60 e0       	ldi	r22, 0x00	; 0
 562:	70 e0       	ldi	r23, 0x00	; 0
 564:	8c 81       	ldd	r24, Y+4	; 0x04
 566:	9d 81       	ldd	r25, Y+5	; 0x05
 568:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
    digitalWrite(this->I2, LOW);
 56c:	60 e0       	ldi	r22, 0x00	; 0
 56e:	70 e0       	ldi	r23, 0x00	; 0
 570:	8e 81       	ldd	r24, Y+6	; 0x06
 572:	9f 81       	ldd	r25, Y+7	; 0x07
 574:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
    digitalWrite(this->I3, LOW);
 578:	60 e0       	ldi	r22, 0x00	; 0
 57a:	70 e0       	ldi	r23, 0x00	; 0
 57c:	88 85       	ldd	r24, Y+8	; 0x08
 57e:	99 85       	ldd	r25, Y+9	; 0x09
 580:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
    digitalWrite(this->I4, LOW);
 584:	60 e0       	ldi	r22, 0x00	; 0
 586:	70 e0       	ldi	r23, 0x00	; 0
 588:	8a 85       	ldd	r24, Y+10	; 0x0a
 58a:	9b 85       	ldd	r25, Y+11	; 0x0b
 58c:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
}
 590:	df 91       	pop	r29
 592:	cf 91       	pop	r28
 594:	08 95       	ret

00000596 <_ZN5Motor7forwardEv>:
    pinMode(I2, OUTPUT); this->I2 = I2;
    pinMode(I3, OUTPUT); this->I3 = I3;
    pinMode(I4, OUTPUT); this->I4 = I4;
}

void Motor::forward(){
 596:	cf 93       	push	r28
 598:	df 93       	push	r29
 59a:	ec 01       	movw	r28, r24
    stop();
 59c:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN5Motor4stopEv>
    digitalWrite(this->I1, HIGH);
 5a0:	61 e0       	ldi	r22, 0x01	; 1
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	8c 81       	ldd	r24, Y+4	; 0x04
 5a6:	9d 81       	ldd	r25, Y+5	; 0x05
 5a8:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
    digitalWrite(this->I3, HIGH);
 5ac:	61 e0       	ldi	r22, 0x01	; 1
 5ae:	70 e0       	ldi	r23, 0x00	; 0
 5b0:	88 85       	ldd	r24, Y+8	; 0x08
 5b2:	99 85       	ldd	r25, Y+9	; 0x09
 5b4:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
}
 5b8:	df 91       	pop	r29
 5ba:	cf 91       	pop	r28
 5bc:	08 95       	ret

000005be <_ZN5Motor8backwardEv>:
void Motor::backward(){
 5be:	cf 93       	push	r28
 5c0:	df 93       	push	r29
 5c2:	ec 01       	movw	r28, r24
    stop();
 5c4:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN5Motor4stopEv>
    digitalWrite(this->I2, HIGH);
 5c8:	61 e0       	ldi	r22, 0x01	; 1
 5ca:	70 e0       	ldi	r23, 0x00	; 0
 5cc:	8e 81       	ldd	r24, Y+6	; 0x06
 5ce:	9f 81       	ldd	r25, Y+7	; 0x07
 5d0:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
    digitalWrite(this->I4, HIGH);
 5d4:	61 e0       	ldi	r22, 0x01	; 1
 5d6:	70 e0       	ldi	r23, 0x00	; 0
 5d8:	8a 85       	ldd	r24, Y+10	; 0x0a
 5da:	9b 85       	ldd	r25, Y+11	; 0x0b
 5dc:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
}
 5e0:	df 91       	pop	r29
 5e2:	cf 91       	pop	r28
 5e4:	08 95       	ret

000005e6 <_ZN5Motor16rigtWheelForwardEv>:

void Motor::rigtWheelForward(){
 5e6:	cf 93       	push	r28
 5e8:	df 93       	push	r29
 5ea:	ec 01       	movw	r28, r24
    stop();
 5ec:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN5Motor4stopEv>
    digitalWrite(this->I3, HIGH);
 5f0:	61 e0       	ldi	r22, 0x01	; 1
 5f2:	70 e0       	ldi	r23, 0x00	; 0
 5f4:	88 85       	ldd	r24, Y+8	; 0x08
 5f6:	99 85       	ldd	r25, Y+9	; 0x09
 5f8:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
}
 5fc:	df 91       	pop	r29
 5fe:	cf 91       	pop	r28
 600:	08 95       	ret

00000602 <_ZN5Motor18rightWheelBackwardEv>:

void Motor::rightWheelBackward(){
 602:	cf 93       	push	r28
 604:	df 93       	push	r29
 606:	ec 01       	movw	r28, r24
    stop();
 608:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN5Motor4stopEv>
    digitalWrite(this->I4, HIGH);
 60c:	61 e0       	ldi	r22, 0x01	; 1
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	8a 85       	ldd	r24, Y+10	; 0x0a
 612:	9b 85       	ldd	r25, Y+11	; 0x0b
 614:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
}
 618:	df 91       	pop	r29
 61a:	cf 91       	pop	r28
 61c:	08 95       	ret

0000061e <_ZN5Motor16leftWheelForwardEv>:

void Motor::leftWheelForward(){
 61e:	cf 93       	push	r28
 620:	df 93       	push	r29
 622:	ec 01       	movw	r28, r24
    stop();
 624:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN5Motor4stopEv>
    digitalWrite(this->I1, HIGH);
 628:	61 e0       	ldi	r22, 0x01	; 1
 62a:	70 e0       	ldi	r23, 0x00	; 0
 62c:	8c 81       	ldd	r24, Y+4	; 0x04
 62e:	9d 81       	ldd	r25, Y+5	; 0x05
 630:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
}
 634:	df 91       	pop	r29
 636:	cf 91       	pop	r28
 638:	08 95       	ret

0000063a <_ZN5Motor17leftWheelBackwardEv>:

void Motor::leftWheelBackward(){
 63a:	cf 93       	push	r28
 63c:	df 93       	push	r29
 63e:	ec 01       	movw	r28, r24
    stop();
 640:	0e 94 ad 02 	call	0x55a	; 0x55a <_ZN5Motor4stopEv>
    digitalWrite(this->I2, HIGH);
 644:	61 e0       	ldi	r22, 0x01	; 1
 646:	70 e0       	ldi	r23, 0x00	; 0
 648:	8e 81       	ldd	r24, Y+6	; 0x06
 64a:	9f 81       	ldd	r25, Y+7	; 0x07
 64c:	0e 94 8e 01 	call	0x31c	; 0x31c <_Z12digitalWriteii>
}
 650:	df 91       	pop	r29
 652:	cf 91       	pop	r28
 654:	08 95       	ret

00000656 <_ZN5Motor15rightWheelSpeedEj>:
    digitalWrite(this->I3, LOW);
    digitalWrite(this->I4, LOW);
}

void Motor::rightWheelSpeed(uint16_t speed){
    if(speed > 255){
 656:	6f 3f       	cpi	r22, 0xFF	; 255
 658:	71 05       	cpc	r23, r1
 65a:	39 f0       	breq	.+14     	; 0x66a <_ZN5Motor15rightWheelSpeedEj+0x14>
 65c:	30 f0       	brcs	.+12     	; 0x66a <_ZN5Motor15rightWheelSpeedEj+0x14>
        this->EN2 = 255;
 65e:	2f ef       	ldi	r18, 0xFF	; 255
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	fc 01       	movw	r30, r24
 664:	33 83       	std	Z+3, r19	; 0x03
 666:	22 83       	std	Z+2, r18	; 0x02
 668:	08 95       	ret
    }
    else{
        this->EN2 = speed;
 66a:	fc 01       	movw	r30, r24
 66c:	73 83       	std	Z+3, r23	; 0x03
 66e:	62 83       	std	Z+2, r22	; 0x02
 670:	08 95       	ret

00000672 <_ZN5Motor14leftWheelSpeedEj>:
    }
}

void Motor::leftWheelSpeed(uint16_t speed){
    if(speed > 255){
 672:	6f 3f       	cpi	r22, 0xFF	; 255
 674:	71 05       	cpc	r23, r1
 676:	39 f0       	breq	.+14     	; 0x686 <_ZN5Motor14leftWheelSpeedEj+0x14>
 678:	30 f0       	brcs	.+12     	; 0x686 <_ZN5Motor14leftWheelSpeedEj+0x14>
        this->EN1 = 255;
 67a:	2f ef       	ldi	r18, 0xFF	; 255
 67c:	30 e0       	ldi	r19, 0x00	; 0
 67e:	fc 01       	movw	r30, r24
 680:	31 83       	std	Z+1, r19	; 0x01
 682:	20 83       	st	Z, r18
 684:	08 95       	ret
    }
    else{
        this->EN1 = speed;
 686:	fc 01       	movw	r30, r24
 688:	71 83       	std	Z+1, r23	; 0x01
 68a:	60 83       	st	Z, r22
 68c:	08 95       	ret

0000068e <_Z10pwm_enable11PWM_CHANNEL>:
#include "pwm.h"


// Enable PWM channels
void pwm_enable(enum PWM_CHANNEL channel) {
	if (channel & CHAN_OC0A) TCCR0A |= 1<<COM0A1;
 68e:	80 ff       	sbrs	r24, 0
 690:	03 c0       	rjmp	.+6      	; 0x698 <_Z10pwm_enable11PWM_CHANNEL+0xa>
 692:	94 b5       	in	r25, 0x24	; 36
 694:	90 68       	ori	r25, 0x80	; 128
 696:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC0B) TCCR0A |= 1<<COM0B1;
 698:	81 ff       	sbrs	r24, 1
 69a:	03 c0       	rjmp	.+6      	; 0x6a2 <_Z10pwm_enable11PWM_CHANNEL+0x14>
 69c:	94 b5       	in	r25, 0x24	; 36
 69e:	90 62       	ori	r25, 0x20	; 32
 6a0:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC1A) TCCR1A |= 1<<COM1A1;
 6a2:	84 ff       	sbrs	r24, 4
 6a4:	05 c0       	rjmp	.+10     	; 0x6b0 <_Z10pwm_enable11PWM_CHANNEL+0x22>
 6a6:	e0 e8       	ldi	r30, 0x80	; 128
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	90 81       	ld	r25, Z
 6ac:	90 68       	ori	r25, 0x80	; 128
 6ae:	90 83       	st	Z, r25
	if (channel & CHAN_OC1B) TCCR1A |= 1<<COM1B1;
 6b0:	85 ff       	sbrs	r24, 5
 6b2:	05 c0       	rjmp	.+10     	; 0x6be <_Z10pwm_enable11PWM_CHANNEL+0x30>
 6b4:	e0 e8       	ldi	r30, 0x80	; 128
 6b6:	f0 e0       	ldi	r31, 0x00	; 0
 6b8:	90 81       	ld	r25, Z
 6ba:	90 62       	ori	r25, 0x20	; 32
 6bc:	90 83       	st	Z, r25
	if (channel & CHAN_OC2A) TCCR2A |= 1<<COM2A1;
 6be:	82 ff       	sbrs	r24, 2
 6c0:	05 c0       	rjmp	.+10     	; 0x6cc <_Z10pwm_enable11PWM_CHANNEL+0x3e>
 6c2:	e0 eb       	ldi	r30, 0xB0	; 176
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	90 81       	ld	r25, Z
 6c8:	90 68       	ori	r25, 0x80	; 128
 6ca:	90 83       	st	Z, r25
	if (channel & CHAN_OC2B) TCCR2A |= 1<<COM2B1;
 6cc:	83 ff       	sbrs	r24, 3
 6ce:	05 c0       	rjmp	.+10     	; 0x6da <_Z10pwm_enable11PWM_CHANNEL+0x4c>
 6d0:	e0 eb       	ldi	r30, 0xB0	; 176
 6d2:	f0 e0       	ldi	r31, 0x00	; 0
 6d4:	80 81       	ld	r24, Z
 6d6:	80 62       	ori	r24, 0x20	; 32
 6d8:	80 83       	st	Z, r24
 6da:	08 95       	ret

000006dc <_Z11pwm_disable11PWM_CHANNEL>:
}
// Disable PWM channels
void pwm_disable(enum PWM_CHANNEL channel) {
	if (channel & CHAN_OC0A) TCCR0A &= ~(1<<COM0A1);
 6dc:	80 ff       	sbrs	r24, 0
 6de:	03 c0       	rjmp	.+6      	; 0x6e6 <_Z11pwm_disable11PWM_CHANNEL+0xa>
 6e0:	94 b5       	in	r25, 0x24	; 36
 6e2:	9f 77       	andi	r25, 0x7F	; 127
 6e4:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC0B) TCCR0A &= ~(1<<COM0B1);
 6e6:	81 ff       	sbrs	r24, 1
 6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <_Z11pwm_disable11PWM_CHANNEL+0x14>
 6ea:	94 b5       	in	r25, 0x24	; 36
 6ec:	9f 7d       	andi	r25, 0xDF	; 223
 6ee:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC1A) TCCR1A &= ~(1<<COM1A1);
 6f0:	84 ff       	sbrs	r24, 4
 6f2:	05 c0       	rjmp	.+10     	; 0x6fe <_Z11pwm_disable11PWM_CHANNEL+0x22>
 6f4:	e0 e8       	ldi	r30, 0x80	; 128
 6f6:	f0 e0       	ldi	r31, 0x00	; 0
 6f8:	90 81       	ld	r25, Z
 6fa:	9f 77       	andi	r25, 0x7F	; 127
 6fc:	90 83       	st	Z, r25
	if (channel & CHAN_OC1B) TCCR1A &= ~(1<<COM1B1);
 6fe:	85 ff       	sbrs	r24, 5
 700:	05 c0       	rjmp	.+10     	; 0x70c <_Z11pwm_disable11PWM_CHANNEL+0x30>
 702:	e0 e8       	ldi	r30, 0x80	; 128
 704:	f0 e0       	ldi	r31, 0x00	; 0
 706:	90 81       	ld	r25, Z
 708:	9f 7d       	andi	r25, 0xDF	; 223
 70a:	90 83       	st	Z, r25
	if (channel & CHAN_OC2A) TCCR2A &= ~(1<<COM2A1);
 70c:	82 ff       	sbrs	r24, 2
 70e:	05 c0       	rjmp	.+10     	; 0x71a <_Z11pwm_disable11PWM_CHANNEL+0x3e>
 710:	e0 eb       	ldi	r30, 0xB0	; 176
 712:	f0 e0       	ldi	r31, 0x00	; 0
 714:	90 81       	ld	r25, Z
 716:	9f 77       	andi	r25, 0x7F	; 127
 718:	90 83       	st	Z, r25
	if (channel & CHAN_OC2B) TCCR2A &= ~(1<<COM2B1);
 71a:	83 ff       	sbrs	r24, 3
 71c:	05 c0       	rjmp	.+10     	; 0x728 <_Z11pwm_disable11PWM_CHANNEL+0x4c>
 71e:	e0 eb       	ldi	r30, 0xB0	; 176
 720:	f0 e0       	ldi	r31, 0x00	; 0
 722:	80 81       	ld	r24, Z
 724:	8f 7d       	andi	r24, 0xDF	; 223
 726:	80 83       	st	Z, r24
 728:	08 95       	ret

0000072a <_Z13pwm_dutycycle11PWM_CHANNELh>:
}

// Sets the channel brightness
void pwm_dutycycle(enum PWM_CHANNEL channel, uint8_t dutycycle) {
	if (channel & CHAN_OC0A) OCR0A = dutycycle;
 72a:	80 fd       	sbrc	r24, 0
 72c:	67 bd       	out	0x27, r22	; 39
	if (channel & CHAN_OC0B) OCR0B = dutycycle;
 72e:	81 fd       	sbrc	r24, 1
 730:	68 bd       	out	0x28, r22	; 40
	if (channel & CHAN_OC1A) OCR1A = dutycycle;
 732:	84 ff       	sbrs	r24, 4
 734:	06 c0       	rjmp	.+12     	; 0x742 <_Z13pwm_dutycycle11PWM_CHANNELh+0x18>
 736:	26 2f       	mov	r18, r22
 738:	30 e0       	ldi	r19, 0x00	; 0
 73a:	30 93 89 00 	sts	0x0089, r19
 73e:	20 93 88 00 	sts	0x0088, r18
	if (channel & CHAN_OC1B) OCR1B = dutycycle;
 742:	85 ff       	sbrs	r24, 5
 744:	06 c0       	rjmp	.+12     	; 0x752 <_Z13pwm_dutycycle11PWM_CHANNELh+0x28>
 746:	26 2f       	mov	r18, r22
 748:	30 e0       	ldi	r19, 0x00	; 0
 74a:	30 93 8b 00 	sts	0x008B, r19
 74e:	20 93 8a 00 	sts	0x008A, r18
	if (channel & CHAN_OC2A) OCR2A = dutycycle;
 752:	82 fd       	sbrc	r24, 2
 754:	60 93 b3 00 	sts	0x00B3, r22
	if (channel & CHAN_OC2B) OCR2B = dutycycle;
 758:	83 fd       	sbrc	r24, 3
 75a:	60 93 b4 00 	sts	0x00B4, r22
 75e:	08 95       	ret

00000760 <_Z14pwm_initialize11PWM_CHANNEL>:
    // Set mode of operation to FastPWM
    // Set clock source (prescaler)
    // Set to 50% duty cycle
    // 4 PWM channel outputs

	if (channel & CHAN_OC0A){
 760:	80 ff       	sbrs	r24, 0
 762:	0c c0       	rjmp	.+24     	; 0x77c <_Z14pwm_initialize11PWM_CHANNEL+0x1c>
        TCCR0A |= (1<<WGM00 | 1<<WGM01);
 764:	94 b5       	in	r25, 0x24	; 36
 766:	93 60       	ori	r25, 0x03	; 3
 768:	94 bd       	out	0x24, r25	; 36
        TCCR0B |= (1<<CS01);
 76a:	95 b5       	in	r25, 0x25	; 37
 76c:	92 60       	ori	r25, 0x02	; 2
 76e:	95 bd       	out	0x25, r25	; 37

        OCR2A = 0x00;
 770:	10 92 b3 00 	sts	0x00B3, r1
        OCR2B = 0x00;
 774:	10 92 b4 00 	sts	0x00B4, r1

        DDRD |= 1<<PD5; // OC0B
 778:	55 9a       	sbi	0x0a, 5	; 10
        DDRD |= 1<<PD6; // OC0A
 77a:	56 9a       	sbi	0x0a, 6	; 10
	}
	if (channel & CHAN_OC0B) {
        //Not implemented yet
	}
	if (channel & CHAN_OC1A) {
 77c:	84 ff       	sbrs	r24, 4
 77e:	14 c0       	rjmp	.+40     	; 0x7a8 <_Z14pwm_initialize11PWM_CHANNEL+0x48>
        TCCR1A |= (1<<WGM10 | 1<<WGM11);
 780:	e0 e8       	ldi	r30, 0x80	; 128
 782:	f0 e0       	ldi	r31, 0x00	; 0
 784:	90 81       	ld	r25, Z
 786:	93 60       	ori	r25, 0x03	; 3
 788:	90 83       	st	Z, r25
        TCCR1B |= (1<<CS01);
 78a:	e1 e8       	ldi	r30, 0x81	; 129
 78c:	f0 e0       	ldi	r31, 0x00	; 0
 78e:	90 81       	ld	r25, Z
 790:	92 60       	ori	r25, 0x02	; 2
 792:	90 83       	st	Z, r25

        OCR1A = 0x00;
 794:	10 92 89 00 	sts	0x0089, r1
 798:	10 92 88 00 	sts	0x0088, r1
        OCR1B = 0x00;
 79c:	10 92 8b 00 	sts	0x008B, r1
 7a0:	10 92 8a 00 	sts	0x008A, r1

        DDRB |= 1<<PB1; // OC1A
 7a4:	21 9a       	sbi	0x04, 1	; 4
        DDRB |= 1<<PD2; // OC1B
 7a6:	22 9a       	sbi	0x04, 2	; 4

	}
	if (channel & CHAN_OC1B) {
        //Not implemented yet
	}
	if (channel & CHAN_OC2A) {
 7a8:	82 ff       	sbrs	r24, 2
 7aa:	0e c0       	rjmp	.+28     	; 0x7c8 <_Z14pwm_initialize11PWM_CHANNEL+0x68>
        TCCR2A |= (1<<WGM20 | 1<<WGM21);
 7ac:	e0 eb       	ldi	r30, 0xB0	; 176
 7ae:	f0 e0       	ldi	r31, 0x00	; 0
 7b0:	80 81       	ld	r24, Z
 7b2:	83 60       	ori	r24, 0x03	; 3
 7b4:	80 83       	st	Z, r24
        TCCR2B |= (1<<CS21);
 7b6:	e1 eb       	ldi	r30, 0xB1	; 177
 7b8:	f0 e0       	ldi	r31, 0x00	; 0
 7ba:	80 81       	ld	r24, Z
 7bc:	82 60       	ori	r24, 0x02	; 2
 7be:	80 83       	st	Z, r24

        OCR0A = 0x00;
 7c0:	17 bc       	out	0x27, r1	; 39
        OCR0B = 0x00;
 7c2:	18 bc       	out	0x28, r1	; 40

        DDRB |= 1<<PB3; // OC2A
 7c4:	23 9a       	sbi	0x04, 3	; 4
        DDRD |= 1<<PD3; // OC2B
 7c6:	53 9a       	sbi	0x0a, 3	; 10
 7c8:	08 95       	ret

000007ca <__mulsi3>:
 7ca:	db 01       	movw	r26, r22
 7cc:	8f 93       	push	r24
 7ce:	9f 93       	push	r25
 7d0:	0e 94 1a 04 	call	0x834	; 0x834 <__muluhisi3>
 7d4:	bf 91       	pop	r27
 7d6:	af 91       	pop	r26
 7d8:	a2 9f       	mul	r26, r18
 7da:	80 0d       	add	r24, r0
 7dc:	91 1d       	adc	r25, r1
 7de:	a3 9f       	mul	r26, r19
 7e0:	90 0d       	add	r25, r0
 7e2:	b2 9f       	mul	r27, r18
 7e4:	90 0d       	add	r25, r0
 7e6:	11 24       	eor	r1, r1
 7e8:	08 95       	ret

000007ea <__divmodsi4>:
 7ea:	05 2e       	mov	r0, r21
 7ec:	97 fb       	bst	r25, 7
 7ee:	1e f4       	brtc	.+6      	; 0x7f6 <__divmodsi4+0xc>
 7f0:	00 94       	com	r0
 7f2:	0e 94 0c 04 	call	0x818	; 0x818 <__negsi2>
 7f6:	57 fd       	sbrc	r21, 7
 7f8:	07 d0       	rcall	.+14     	; 0x808 <__divmodsi4_neg2>
 7fa:	0e 94 25 04 	call	0x84a	; 0x84a <__udivmodsi4>
 7fe:	07 fc       	sbrc	r0, 7
 800:	03 d0       	rcall	.+6      	; 0x808 <__divmodsi4_neg2>
 802:	4e f4       	brtc	.+18     	; 0x816 <__divmodsi4_exit>
 804:	0c 94 0c 04 	jmp	0x818	; 0x818 <__negsi2>

00000808 <__divmodsi4_neg2>:
 808:	50 95       	com	r21
 80a:	40 95       	com	r20
 80c:	30 95       	com	r19
 80e:	21 95       	neg	r18
 810:	3f 4f       	sbci	r19, 0xFF	; 255
 812:	4f 4f       	sbci	r20, 0xFF	; 255
 814:	5f 4f       	sbci	r21, 0xFF	; 255

00000816 <__divmodsi4_exit>:
 816:	08 95       	ret

00000818 <__negsi2>:
 818:	90 95       	com	r25
 81a:	80 95       	com	r24
 81c:	70 95       	com	r23
 81e:	61 95       	neg	r22
 820:	7f 4f       	sbci	r23, 0xFF	; 255
 822:	8f 4f       	sbci	r24, 0xFF	; 255
 824:	9f 4f       	sbci	r25, 0xFF	; 255
 826:	08 95       	ret

00000828 <__tablejump2__>:
 828:	ee 0f       	add	r30, r30
 82a:	ff 1f       	adc	r31, r31
 82c:	05 90       	lpm	r0, Z+
 82e:	f4 91       	lpm	r31, Z
 830:	e0 2d       	mov	r30, r0
 832:	09 94       	ijmp

00000834 <__muluhisi3>:
 834:	0e 94 47 04 	call	0x88e	; 0x88e <__umulhisi3>
 838:	a5 9f       	mul	r26, r21
 83a:	90 0d       	add	r25, r0
 83c:	b4 9f       	mul	r27, r20
 83e:	90 0d       	add	r25, r0
 840:	a4 9f       	mul	r26, r20
 842:	80 0d       	add	r24, r0
 844:	91 1d       	adc	r25, r1
 846:	11 24       	eor	r1, r1
 848:	08 95       	ret

0000084a <__udivmodsi4>:
 84a:	a1 e2       	ldi	r26, 0x21	; 33
 84c:	1a 2e       	mov	r1, r26
 84e:	aa 1b       	sub	r26, r26
 850:	bb 1b       	sub	r27, r27
 852:	fd 01       	movw	r30, r26
 854:	0d c0       	rjmp	.+26     	; 0x870 <__udivmodsi4_ep>

00000856 <__udivmodsi4_loop>:
 856:	aa 1f       	adc	r26, r26
 858:	bb 1f       	adc	r27, r27
 85a:	ee 1f       	adc	r30, r30
 85c:	ff 1f       	adc	r31, r31
 85e:	a2 17       	cp	r26, r18
 860:	b3 07       	cpc	r27, r19
 862:	e4 07       	cpc	r30, r20
 864:	f5 07       	cpc	r31, r21
 866:	20 f0       	brcs	.+8      	; 0x870 <__udivmodsi4_ep>
 868:	a2 1b       	sub	r26, r18
 86a:	b3 0b       	sbc	r27, r19
 86c:	e4 0b       	sbc	r30, r20
 86e:	f5 0b       	sbc	r31, r21

00000870 <__udivmodsi4_ep>:
 870:	66 1f       	adc	r22, r22
 872:	77 1f       	adc	r23, r23
 874:	88 1f       	adc	r24, r24
 876:	99 1f       	adc	r25, r25
 878:	1a 94       	dec	r1
 87a:	69 f7       	brne	.-38     	; 0x856 <__udivmodsi4_loop>
 87c:	60 95       	com	r22
 87e:	70 95       	com	r23
 880:	80 95       	com	r24
 882:	90 95       	com	r25
 884:	9b 01       	movw	r18, r22
 886:	ac 01       	movw	r20, r24
 888:	bd 01       	movw	r22, r26
 88a:	cf 01       	movw	r24, r30
 88c:	08 95       	ret

0000088e <__umulhisi3>:
 88e:	a2 9f       	mul	r26, r18
 890:	b0 01       	movw	r22, r0
 892:	b3 9f       	mul	r27, r19
 894:	c0 01       	movw	r24, r0
 896:	a3 9f       	mul	r26, r19
 898:	70 0d       	add	r23, r0
 89a:	81 1d       	adc	r24, r1
 89c:	11 24       	eor	r1, r1
 89e:	91 1d       	adc	r25, r1
 8a0:	b2 9f       	mul	r27, r18
 8a2:	70 0d       	add	r23, r0
 8a4:	81 1d       	adc	r24, r1
 8a6:	11 24       	eor	r1, r1
 8a8:	91 1d       	adc	r25, r1
 8aa:	08 95       	ret

000008ac <_exit>:
 8ac:	f8 94       	cli

000008ae <__stop_program>:
 8ae:	ff cf       	rjmp	.-2      	; 0x8ae <__stop_program>
