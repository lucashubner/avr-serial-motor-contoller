
bin/Debug/source-code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000009d6  00000a6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000a6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .stab         00002bec  00000000  00000000  00000a70  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000214f  00000000  00000000  0000365c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000057ab  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000057bc  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000057fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00005df0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001d  00000000  00000000  00006392  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000063af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__ctors_end>
   4:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
   8:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
   c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  10:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  14:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  1c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  24:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  28:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  2c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  30:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  34:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  38:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  3c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  40:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  44:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  48:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  4c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  50:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  54:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  58:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  5c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  60:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  64:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  68:	f2 01       	movw	r30, r4
  6a:	2c 01       	movw	r4, r24
  6c:	35 01       	movw	r6, r10
  6e:	3e 01       	movw	r6, r28
  70:	47 01       	movw	r8, r14
  72:	50 01       	movw	r10, r0
  74:	fa 01       	movw	r30, r20
  76:	fa 01       	movw	r30, r20
  78:	aa 01       	movw	r20, r20
  7a:	b3 01       	movw	r22, r6
  7c:	59 01       	movw	r10, r18
  7e:	62 01       	movw	r12, r4
  80:	6b 01       	movw	r12, r22
  82:	74 01       	movw	r14, r8
  84:	7d 01       	movw	r14, r26
  86:	86 01       	movw	r16, r12
  88:	8f 01       	movw	r16, r30
  8a:	98 01       	movw	r18, r16
  8c:	a1 01       	movw	r20, r2
  8e:	fa 01       	movw	r30, r20
  90:	fa 01       	movw	r30, r20
  92:	fa 01       	movw	r30, r20
  94:	bc 01       	movw	r22, r24
  96:	c5 01       	movw	r24, r10
  98:	ce 01       	movw	r24, r28
  9a:	d7 01       	movw	r26, r14
  9c:	e0 01       	movw	r28, r0
  9e:	e9 01       	movw	r28, r18
  a0:	e1 02       	muls	r30, r17
  a2:	05 02       	muls	r16, r21
  a4:	0f 02       	muls	r16, r31
  a6:	19 02       	muls	r17, r25
  a8:	23 02       	muls	r18, r19
  aa:	2d 02       	muls	r18, r29
  ac:	ea 02       	muls	r30, r26
  ae:	ea 02       	muls	r30, r26
  b0:	91 02       	muls	r25, r17
  b2:	9b 02       	muls	r25, r27
  b4:	37 02       	muls	r19, r23
  b6:	41 02       	muls	r20, r17
  b8:	4b 02       	muls	r20, r27
  ba:	55 02       	muls	r21, r21
  bc:	5f 02       	muls	r21, r31
  be:	69 02       	muls	r22, r25
  c0:	73 02       	muls	r23, r19
  c2:	7d 02       	muls	r23, r29
  c4:	87 02       	muls	r24, r23
  c6:	ea 02       	muls	r30, r26
  c8:	ea 02       	muls	r30, r26
  ca:	ea 02       	muls	r30, r26
  cc:	a5 02       	muls	r26, r21
  ce:	af 02       	muls	r26, r31
  d0:	b9 02       	muls	r27, r25
  d2:	c3 02       	muls	r28, r19
  d4:	cd 02       	muls	r28, r29
  d6:	d7 02       	muls	r29, r23

000000d8 <__ctors_end>:
  d8:	11 24       	eor	r1, r1
  da:	1f be       	out	0x3f, r1	; 63
  dc:	cf ef       	ldi	r28, 0xFF	; 255
  de:	d8 e0       	ldi	r29, 0x08	; 8
  e0:	de bf       	out	0x3e, r29	; 62
  e2:	cd bf       	out	0x3d, r28	; 61
  e4:	0e 94 78 00 	call	0xf0	; 0xf0 <main>
  e8:	0c 94 e9 04 	jmp	0x9d2	; 0x9d2 <_exit>

000000ec <__bad_interrupt>:
  ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <main>:
    while(1){
        //DDRB |= 1<<6;
        //DDRD |= 1<<5;
        //DDRB |= 1<<0;
        //DDRD |= 1<<7;
        pinMode(9, OUTPUT);
  f0:	60 e0       	ldi	r22, 0x00	; 0
  f2:	70 e0       	ldi	r23, 0x00	; 0
  f4:	89 e0       	ldi	r24, 0x09	; 9
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>
        pinMode(10, OUTPUT);
  fc:	60 e0       	ldi	r22, 0x00	; 0
  fe:	70 e0       	ldi	r23, 0x00	; 0
 100:	8a e0       	ldi	r24, 0x0A	; 10
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>
        pinMode(13,OUTPUT);
 108:	60 e0       	ldi	r22, 0x00	; 0
 10a:	70 e0       	ldi	r23, 0x00	; 0
 10c:	8d e0       	ldi	r24, 0x0D	; 13
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>
        pinMode(14, OUTPUT);
 114:	60 e0       	ldi	r22, 0x00	; 0
 116:	70 e0       	ldi	r23, 0x00	; 0
 118:	8e e0       	ldi	r24, 0x0E	; 14
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>


        PORTB |= 1<<6;
 120:	2e 9a       	sbi	0x05, 6	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	89 e6       	ldi	r24, 0x69	; 105
 126:	98 e1       	ldi	r25, 0x18	; 24
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	80 40       	sbci	r24, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <main+0x38>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0x42>
 132:	00 00       	nop
        _delay_ms(1000);

        PORTB &= ~(1<<6);
 134:	2e 98       	cbi	0x05, 6	; 5
 136:	2f ef       	ldi	r18, 0xFF	; 255
 138:	89 e6       	ldi	r24, 0x69	; 105
 13a:	98 e1       	ldi	r25, 0x18	; 24
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	80 40       	sbci	r24, 0x00	; 0
 140:	90 40       	sbci	r25, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0x4c>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0x56>
 146:	00 00       	nop
        _delay_ms(1000);

        PORTB |= 1<<7;
 148:	2f 9a       	sbi	0x05, 7	; 5
 14a:	2f ef       	ldi	r18, 0xFF	; 255
 14c:	89 e6       	ldi	r24, 0x69	; 105
 14e:	98 e1       	ldi	r25, 0x18	; 24
 150:	21 50       	subi	r18, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0x60>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0x6a>
 15a:	00 00       	nop
        _delay_ms(1000);

        PORTB &= ~(1<<7);
 15c:	2f 98       	cbi	0x05, 7	; 5
 15e:	2f ef       	ldi	r18, 0xFF	; 255
 160:	89 e6       	ldi	r24, 0x69	; 105
 162:	98 e1       	ldi	r25, 0x18	; 24
 164:	21 50       	subi	r18, 0x01	; 1
 166:	80 40       	sbci	r24, 0x00	; 0
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <main+0x74>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <main+0x7e>
 16e:	00 00       	nop
        _delay_ms(1000);

        PORTB |= 1<<0;
 170:	28 9a       	sbi	0x05, 0	; 5
 172:	2f ef       	ldi	r18, 0xFF	; 255
 174:	89 e6       	ldi	r24, 0x69	; 105
 176:	98 e1       	ldi	r25, 0x18	; 24
 178:	21 50       	subi	r18, 0x01	; 1
 17a:	80 40       	sbci	r24, 0x00	; 0
 17c:	90 40       	sbci	r25, 0x00	; 0
 17e:	e1 f7       	brne	.-8      	; 0x178 <main+0x88>
 180:	00 c0       	rjmp	.+0      	; 0x182 <main+0x92>
 182:	00 00       	nop
        _delay_ms(1000);

        PORTB &= ~(1<<0);
 184:	28 98       	cbi	0x05, 0	; 5
 186:	2f ef       	ldi	r18, 0xFF	; 255
 188:	89 e6       	ldi	r24, 0x69	; 105
 18a:	98 e1       	ldi	r25, 0x18	; 24
 18c:	21 50       	subi	r18, 0x01	; 1
 18e:	80 40       	sbci	r24, 0x00	; 0
 190:	90 40       	sbci	r25, 0x00	; 0
 192:	e1 f7       	brne	.-8      	; 0x18c <main+0x9c>
 194:	00 c0       	rjmp	.+0      	; 0x196 <main+0xa6>
 196:	00 00       	nop
        _delay_ms(1000);

        PORTD |= 1<<7;
 198:	5f 9a       	sbi	0x0b, 7	; 11
 19a:	2f ef       	ldi	r18, 0xFF	; 255
 19c:	89 e6       	ldi	r24, 0x69	; 105
 19e:	98 e1       	ldi	r25, 0x18	; 24
 1a0:	21 50       	subi	r18, 0x01	; 1
 1a2:	80 40       	sbci	r24, 0x00	; 0
 1a4:	90 40       	sbci	r25, 0x00	; 0
 1a6:	e1 f7       	brne	.-8      	; 0x1a0 <main+0xb0>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <main+0xba>
 1aa:	00 00       	nop
        _delay_ms(1000);

        PORTD &= ~(1<<7);
 1ac:	5f 98       	cbi	0x0b, 7	; 11
 1ae:	2f ef       	ldi	r18, 0xFF	; 255
 1b0:	89 e6       	ldi	r24, 0x69	; 105
 1b2:	98 e1       	ldi	r25, 0x18	; 24
 1b4:	21 50       	subi	r18, 0x01	; 1
 1b6:	80 40       	sbci	r24, 0x00	; 0
 1b8:	90 40       	sbci	r25, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <main+0xc4>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <main+0xce>
 1be:	00 00       	nop
 1c0:	97 cf       	rjmp	.-210    	; 0xf0 <main>

000001c2 <_Z3maplllll>:
#include "common.h"
#include <avr/io.h>

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
 1c2:	4f 92       	push	r4
 1c4:	5f 92       	push	r5
 1c6:	6f 92       	push	r6
 1c8:	7f 92       	push	r7
 1ca:	af 92       	push	r10
 1cc:	bf 92       	push	r11
 1ce:	cf 92       	push	r12
 1d0:	df 92       	push	r13
 1d2:	ef 92       	push	r14
 1d4:	ff 92       	push	r15
 1d6:	0f 93       	push	r16
 1d8:	1f 93       	push	r17
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	cd b7       	in	r28, 0x3d	; 61
 1e0:	de b7       	in	r29, 0x3e	; 62
 1e2:	29 01       	movw	r4, r18
 1e4:	3a 01       	movw	r6, r20
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 1e6:	9b 01       	movw	r18, r22
 1e8:	ac 01       	movw	r20, r24
 1ea:	24 19       	sub	r18, r4
 1ec:	35 09       	sbc	r19, r5
 1ee:	46 09       	sbc	r20, r6
 1f0:	57 09       	sbc	r21, r7
 1f2:	89 89       	ldd	r24, Y+17	; 0x11
 1f4:	9a 89       	ldd	r25, Y+18	; 0x12
 1f6:	ab 89       	ldd	r26, Y+19	; 0x13
 1f8:	bc 89       	ldd	r27, Y+20	; 0x14
 1fa:	bc 01       	movw	r22, r24
 1fc:	cd 01       	movw	r24, r26
 1fe:	6a 19       	sub	r22, r10
 200:	7b 09       	sbc	r23, r11
 202:	8c 09       	sbc	r24, r12
 204:	9d 09       	sbc	r25, r13
 206:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__mulsi3>
 20a:	a8 01       	movw	r20, r16
 20c:	97 01       	movw	r18, r14
 20e:	24 19       	sub	r18, r4
 210:	35 09       	sbc	r19, r5
 212:	46 09       	sbc	r20, r6
 214:	57 09       	sbc	r21, r7
 216:	0e 94 88 04 	call	0x910	; 0x910 <__divmodsi4>
 21a:	ca 01       	movw	r24, r20
 21c:	b9 01       	movw	r22, r18
 21e:	6a 0d       	add	r22, r10
 220:	7b 1d       	adc	r23, r11
 222:	8c 1d       	adc	r24, r12
 224:	9d 1d       	adc	r25, r13
}
 226:	df 91       	pop	r29
 228:	cf 91       	pop	r28
 22a:	1f 91       	pop	r17
 22c:	0f 91       	pop	r16
 22e:	ff 90       	pop	r15
 230:	ef 90       	pop	r14
 232:	df 90       	pop	r13
 234:	cf 90       	pop	r12
 236:	bf 90       	pop	r11
 238:	af 90       	pop	r10
 23a:	7f 90       	pop	r7
 23c:	6f 90       	pop	r6
 23e:	5f 90       	pop	r5
 240:	4f 90       	pop	r4
 242:	08 95       	ret

00000244 <_Z7pinModeii>:

void pinMode(int pin, int mode){
    // PORTD
    switch(pin){
 244:	01 97       	sbiw	r24, 0x01	; 1
 246:	8c 31       	cpi	r24, 0x1C	; 28
 248:	91 05       	cpc	r25, r1
 24a:	08 f0       	brcs	.+2      	; 0x24e <_Z7pinModeii+0xa>
 24c:	d3 c0       	rjmp	.+422    	; 0x3f4 <_Z7pinModeii+0x1b0>
 24e:	8c 5c       	subi	r24, 0xCC	; 204
 250:	9f 4f       	sbci	r25, 0xFF	; 255
 252:	fc 01       	movw	r30, r24
 254:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__tablejump2__>
        case 2:  DDRD = mode==0?  DDRD | (1<< PD0) :   DDRD & ~(1<<PD0);    break;
 258:	67 2b       	or	r22, r23
 25a:	19 f4       	brne	.+6      	; 0x262 <_Z7pinModeii+0x1e>
 25c:	8a b1       	in	r24, 0x0a	; 10
 25e:	81 60       	ori	r24, 0x01	; 1
 260:	02 c0       	rjmp	.+4      	; 0x266 <_Z7pinModeii+0x22>
 262:	8a b1       	in	r24, 0x0a	; 10
 264:	8e 7f       	andi	r24, 0xFE	; 254
 266:	8a b9       	out	0x0a, r24	; 10
 268:	08 95       	ret
        case 3:  DDRD = mode==0?  DDRD | (1<< PD1) :   DDRD & ~(1<<PD1);    break;
 26a:	67 2b       	or	r22, r23
 26c:	19 f4       	brne	.+6      	; 0x274 <_Z7pinModeii+0x30>
 26e:	8a b1       	in	r24, 0x0a	; 10
 270:	82 60       	ori	r24, 0x02	; 2
 272:	02 c0       	rjmp	.+4      	; 0x278 <_Z7pinModeii+0x34>
 274:	8a b1       	in	r24, 0x0a	; 10
 276:	8d 7f       	andi	r24, 0xFD	; 253
 278:	8a b9       	out	0x0a, r24	; 10
 27a:	08 95       	ret
        case 4:  DDRD = mode==0?  DDRD | (1<< PD2) :   DDRD & ~(1<<PD2);    break;
 27c:	67 2b       	or	r22, r23
 27e:	19 f4       	brne	.+6      	; 0x286 <_Z7pinModeii+0x42>
 280:	8a b1       	in	r24, 0x0a	; 10
 282:	84 60       	ori	r24, 0x04	; 4
 284:	02 c0       	rjmp	.+4      	; 0x28a <_Z7pinModeii+0x46>
 286:	8a b1       	in	r24, 0x0a	; 10
 288:	8b 7f       	andi	r24, 0xFB	; 251
 28a:	8a b9       	out	0x0a, r24	; 10
 28c:	08 95       	ret
        case 5:  DDRD = mode==0?  DDRD | (1<< PD3) :   DDRD & ~(1<<PD3);    break;
 28e:	67 2b       	or	r22, r23
 290:	19 f4       	brne	.+6      	; 0x298 <_Z7pinModeii+0x54>
 292:	8a b1       	in	r24, 0x0a	; 10
 294:	88 60       	ori	r24, 0x08	; 8
 296:	02 c0       	rjmp	.+4      	; 0x29c <_Z7pinModeii+0x58>
 298:	8a b1       	in	r24, 0x0a	; 10
 29a:	87 7f       	andi	r24, 0xF7	; 247
 29c:	8a b9       	out	0x0a, r24	; 10
 29e:	08 95       	ret
        case 6:  DDRD = mode==0?  DDRD | (1<< PD4) :   DDRD & ~(1<<PD4);    break;
 2a0:	67 2b       	or	r22, r23
 2a2:	19 f4       	brne	.+6      	; 0x2aa <_Z7pinModeii+0x66>
 2a4:	8a b1       	in	r24, 0x0a	; 10
 2a6:	80 61       	ori	r24, 0x10	; 16
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <_Z7pinModeii+0x6a>
 2aa:	8a b1       	in	r24, 0x0a	; 10
 2ac:	8f 7e       	andi	r24, 0xEF	; 239
 2ae:	8a b9       	out	0x0a, r24	; 10
 2b0:	08 95       	ret
        case 11: DDRD = mode==0?  DDRD | (1<< PD5) :   DDRD & ~(1<<PD5);    break;
 2b2:	67 2b       	or	r22, r23
 2b4:	19 f4       	brne	.+6      	; 0x2bc <_Z7pinModeii+0x78>
 2b6:	8a b1       	in	r24, 0x0a	; 10
 2b8:	80 62       	ori	r24, 0x20	; 32
 2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <_Z7pinModeii+0x7c>
 2bc:	8a b1       	in	r24, 0x0a	; 10
 2be:	8f 7d       	andi	r24, 0xDF	; 223
 2c0:	8a b9       	out	0x0a, r24	; 10
 2c2:	08 95       	ret
        case 12: DDRD = mode==0?  DDRD | (1<< PD6) :   DDRD & ~(1<<PD6);    break;
 2c4:	67 2b       	or	r22, r23
 2c6:	19 f4       	brne	.+6      	; 0x2ce <_Z7pinModeii+0x8a>
 2c8:	8a b1       	in	r24, 0x0a	; 10
 2ca:	80 64       	ori	r24, 0x40	; 64
 2cc:	02 c0       	rjmp	.+4      	; 0x2d2 <_Z7pinModeii+0x8e>
 2ce:	8a b1       	in	r24, 0x0a	; 10
 2d0:	8f 7b       	andi	r24, 0xBF	; 191
 2d2:	8a b9       	out	0x0a, r24	; 10
 2d4:	08 95       	ret
        case 13: DDRD = mode==0?  DDRD | (1<< PD7) :   DDRD & ~(1<<PD7);    break;
 2d6:	67 2b       	or	r22, r23
 2d8:	19 f4       	brne	.+6      	; 0x2e0 <_Z7pinModeii+0x9c>
 2da:	8a b1       	in	r24, 0x0a	; 10
 2dc:	80 68       	ori	r24, 0x80	; 128
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <_Z7pinModeii+0xa0>
 2e0:	8a b1       	in	r24, 0x0a	; 10
 2e2:	8f 77       	andi	r24, 0x7F	; 127
 2e4:	8a b9       	out	0x0a, r24	; 10
 2e6:	08 95       	ret

        // PORTB
        case 14: DDRB = mode==0?  DDRB | (1<< PB0) :   DDRB & ~(1<<PB0);    break;
 2e8:	67 2b       	or	r22, r23
 2ea:	19 f4       	brne	.+6      	; 0x2f2 <_Z7pinModeii+0xae>
 2ec:	84 b1       	in	r24, 0x04	; 4
 2ee:	81 60       	ori	r24, 0x01	; 1
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <_Z7pinModeii+0xb2>
 2f2:	84 b1       	in	r24, 0x04	; 4
 2f4:	8e 7f       	andi	r24, 0xFE	; 254
 2f6:	84 b9       	out	0x04, r24	; 4
 2f8:	08 95       	ret
        case 15: DDRB = mode==0?  DDRB | (1<< PB1) :   DDRB & ~(1<<PB1);    break;
 2fa:	67 2b       	or	r22, r23
 2fc:	19 f4       	brne	.+6      	; 0x304 <_Z7pinModeii+0xc0>
 2fe:	84 b1       	in	r24, 0x04	; 4
 300:	82 60       	ori	r24, 0x02	; 2
 302:	02 c0       	rjmp	.+4      	; 0x308 <_Z7pinModeii+0xc4>
 304:	84 b1       	in	r24, 0x04	; 4
 306:	8d 7f       	andi	r24, 0xFD	; 253
 308:	84 b9       	out	0x04, r24	; 4
 30a:	08 95       	ret
        case 16: DDRB = mode==0?  DDRB | (1<< PB2) :   DDRB & ~(1<<PB2);    break;
 30c:	67 2b       	or	r22, r23
 30e:	19 f4       	brne	.+6      	; 0x316 <_Z7pinModeii+0xd2>
 310:	84 b1       	in	r24, 0x04	; 4
 312:	84 60       	ori	r24, 0x04	; 4
 314:	02 c0       	rjmp	.+4      	; 0x31a <_Z7pinModeii+0xd6>
 316:	84 b1       	in	r24, 0x04	; 4
 318:	8b 7f       	andi	r24, 0xFB	; 251
 31a:	84 b9       	out	0x04, r24	; 4
 31c:	08 95       	ret
        case 17: DDRB = mode==0?  DDRB | (1<< PB3) :   DDRB & ~(1<<PB3);    break;
 31e:	67 2b       	or	r22, r23
 320:	19 f4       	brne	.+6      	; 0x328 <_Z7pinModeii+0xe4>
 322:	84 b1       	in	r24, 0x04	; 4
 324:	88 60       	ori	r24, 0x08	; 8
 326:	02 c0       	rjmp	.+4      	; 0x32c <_Z7pinModeii+0xe8>
 328:	84 b1       	in	r24, 0x04	; 4
 32a:	87 7f       	andi	r24, 0xF7	; 247
 32c:	84 b9       	out	0x04, r24	; 4
 32e:	08 95       	ret
        case 18: DDRB = mode==0?  DDRB | (1<< PB4) :   DDRB & ~(1<<PB4);    break;
 330:	67 2b       	or	r22, r23
 332:	19 f4       	brne	.+6      	; 0x33a <_Z7pinModeii+0xf6>
 334:	84 b1       	in	r24, 0x04	; 4
 336:	80 61       	ori	r24, 0x10	; 16
 338:	02 c0       	rjmp	.+4      	; 0x33e <_Z7pinModeii+0xfa>
 33a:	84 b1       	in	r24, 0x04	; 4
 33c:	8f 7e       	andi	r24, 0xEF	; 239
 33e:	84 b9       	out	0x04, r24	; 4
 340:	08 95       	ret
        case 19: DDRB = mode==0?  DDRB | (1<< PB5) :   DDRB & ~(1<<PB5);    break;
 342:	67 2b       	or	r22, r23
 344:	19 f4       	brne	.+6      	; 0x34c <_Z7pinModeii+0x108>
 346:	84 b1       	in	r24, 0x04	; 4
 348:	80 62       	ori	r24, 0x20	; 32
 34a:	02 c0       	rjmp	.+4      	; 0x350 <_Z7pinModeii+0x10c>
 34c:	84 b1       	in	r24, 0x04	; 4
 34e:	8f 7d       	andi	r24, 0xDF	; 223
 350:	84 b9       	out	0x04, r24	; 4
 352:	08 95       	ret
        case 9:  DDRB = mode==0?  DDRB | (1<< PB6) :   DDRB & ~(1<<PB6);    break;
 354:	67 2b       	or	r22, r23
 356:	19 f4       	brne	.+6      	; 0x35e <_Z7pinModeii+0x11a>
 358:	84 b1       	in	r24, 0x04	; 4
 35a:	80 64       	ori	r24, 0x40	; 64
 35c:	02 c0       	rjmp	.+4      	; 0x362 <_Z7pinModeii+0x11e>
 35e:	84 b1       	in	r24, 0x04	; 4
 360:	8f 7b       	andi	r24, 0xBF	; 191
 362:	84 b9       	out	0x04, r24	; 4
 364:	08 95       	ret
        case 10: DDRB = mode==0?  DDRB | (1<< PB7) :   DDRB & ~(1<<PB7);    break;
 366:	67 2b       	or	r22, r23
 368:	19 f4       	brne	.+6      	; 0x370 <_Z7pinModeii+0x12c>
 36a:	84 b1       	in	r24, 0x04	; 4
 36c:	80 68       	ori	r24, 0x80	; 128
 36e:	02 c0       	rjmp	.+4      	; 0x374 <_Z7pinModeii+0x130>
 370:	84 b1       	in	r24, 0x04	; 4
 372:	8f 77       	andi	r24, 0x7F	; 127
 374:	84 b9       	out	0x04, r24	; 4
 376:	08 95       	ret

        // PORT C
        case 23: DDRC = mode==0?  DDRC | (1<< PC0) :   DDRC & ~(1<<PB1);    break;
 378:	67 2b       	or	r22, r23
 37a:	19 f4       	brne	.+6      	; 0x382 <_Z7pinModeii+0x13e>
 37c:	87 b1       	in	r24, 0x07	; 7
 37e:	81 60       	ori	r24, 0x01	; 1
 380:	02 c0       	rjmp	.+4      	; 0x386 <_Z7pinModeii+0x142>
 382:	87 b1       	in	r24, 0x07	; 7
 384:	8d 7f       	andi	r24, 0xFD	; 253
 386:	87 b9       	out	0x07, r24	; 7
 388:	08 95       	ret
        case 24: DDRC = mode==0?  DDRC | (1<< PC1) :   DDRC & ~(1<<PC1);    break;
 38a:	67 2b       	or	r22, r23
 38c:	19 f4       	brne	.+6      	; 0x394 <_Z7pinModeii+0x150>
 38e:	87 b1       	in	r24, 0x07	; 7
 390:	82 60       	ori	r24, 0x02	; 2
 392:	02 c0       	rjmp	.+4      	; 0x398 <_Z7pinModeii+0x154>
 394:	87 b1       	in	r24, 0x07	; 7
 396:	8d 7f       	andi	r24, 0xFD	; 253
 398:	87 b9       	out	0x07, r24	; 7
 39a:	08 95       	ret
        case 25: DDRC = mode==0?  DDRC | (1<< PC2) :   DDRC & ~(1<<PC2);    break;
 39c:	67 2b       	or	r22, r23
 39e:	19 f4       	brne	.+6      	; 0x3a6 <_Z7pinModeii+0x162>
 3a0:	87 b1       	in	r24, 0x07	; 7
 3a2:	84 60       	ori	r24, 0x04	; 4
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <_Z7pinModeii+0x166>
 3a6:	87 b1       	in	r24, 0x07	; 7
 3a8:	8b 7f       	andi	r24, 0xFB	; 251
 3aa:	87 b9       	out	0x07, r24	; 7
 3ac:	08 95       	ret
        case 26: DDRC = mode==0?  DDRC | (1<< PC3) :   DDRC & ~(1<<PC3);    break;
 3ae:	67 2b       	or	r22, r23
 3b0:	19 f4       	brne	.+6      	; 0x3b8 <_Z7pinModeii+0x174>
 3b2:	87 b1       	in	r24, 0x07	; 7
 3b4:	88 60       	ori	r24, 0x08	; 8
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <_Z7pinModeii+0x178>
 3b8:	87 b1       	in	r24, 0x07	; 7
 3ba:	87 7f       	andi	r24, 0xF7	; 247
 3bc:	87 b9       	out	0x07, r24	; 7
 3be:	08 95       	ret
        case 27: DDRC = mode==0?  DDRC | (1<< PC4) :   DDRC & ~(1<<PC4);    break;
 3c0:	67 2b       	or	r22, r23
 3c2:	19 f4       	brne	.+6      	; 0x3ca <_Z7pinModeii+0x186>
 3c4:	87 b1       	in	r24, 0x07	; 7
 3c6:	80 61       	ori	r24, 0x10	; 16
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <_Z7pinModeii+0x18a>
 3ca:	87 b1       	in	r24, 0x07	; 7
 3cc:	8f 7e       	andi	r24, 0xEF	; 239
 3ce:	87 b9       	out	0x07, r24	; 7
 3d0:	08 95       	ret
        case 28: DDRC = mode==0?  DDRC | (1<< PC5) :   DDRC & ~(1<<PC5);    break;
 3d2:	67 2b       	or	r22, r23
 3d4:	19 f4       	brne	.+6      	; 0x3dc <_Z7pinModeii+0x198>
 3d6:	87 b1       	in	r24, 0x07	; 7
 3d8:	80 62       	ori	r24, 0x20	; 32
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <_Z7pinModeii+0x19c>
 3dc:	87 b1       	in	r24, 0x07	; 7
 3de:	8f 7d       	andi	r24, 0xDF	; 223
 3e0:	87 b9       	out	0x07, r24	; 7
 3e2:	08 95       	ret
        case 1:  DDRC = mode==0?  DDRC | (1<< PC6) :   DDRC & ~(1<<PC6);    break;
 3e4:	67 2b       	or	r22, r23
 3e6:	19 f4       	brne	.+6      	; 0x3ee <_Z7pinModeii+0x1aa>
 3e8:	87 b1       	in	r24, 0x07	; 7
 3ea:	80 64       	ori	r24, 0x40	; 64
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <_Z7pinModeii+0x1ae>
 3ee:	87 b1       	in	r24, 0x07	; 7
 3f0:	8f 7b       	andi	r24, 0xBF	; 191
 3f2:	87 b9       	out	0x07, r24	; 7
 3f4:	08 95       	ret

000003f6 <_Z12digitalWriteii>:
    }
}

void digitalWrite(int pin, int mode){
        switch(pin){
 3f6:	01 97       	sbiw	r24, 0x01	; 1
 3f8:	8c 31       	cpi	r24, 0x1C	; 28
 3fa:	91 05       	cpc	r25, r1
 3fc:	08 f0       	brcs	.+2      	; 0x400 <_Z12digitalWriteii+0xa>
 3fe:	ea c0       	rjmp	.+468    	; 0x5d4 <_Z12digitalWriteii+0x1de>
 400:	80 5b       	subi	r24, 0xB0	; 176
 402:	9f 4f       	sbci	r25, 0xFF	; 255
 404:	fc 01       	movw	r30, r24
 406:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__tablejump2__>
        case 2:  PORTD = mode==1?  DDRD | (1<< PD0) :   DDRD & ~(1<<PD0);    break;
 40a:	61 30       	cpi	r22, 0x01	; 1
 40c:	71 05       	cpc	r23, r1
 40e:	19 f4       	brne	.+6      	; 0x416 <_Z12digitalWriteii+0x20>
 410:	8a b1       	in	r24, 0x0a	; 10
 412:	81 60       	ori	r24, 0x01	; 1
 414:	02 c0       	rjmp	.+4      	; 0x41a <_Z12digitalWriteii+0x24>
 416:	8a b1       	in	r24, 0x0a	; 10
 418:	8e 7f       	andi	r24, 0xFE	; 254
 41a:	8b b9       	out	0x0b, r24	; 11
 41c:	08 95       	ret
        case 3:  PORTD = mode==1?  DDRD | (1<< PD1) :   DDRD & ~(1<<PD1);    break;
 41e:	61 30       	cpi	r22, 0x01	; 1
 420:	71 05       	cpc	r23, r1
 422:	19 f4       	brne	.+6      	; 0x42a <_Z12digitalWriteii+0x34>
 424:	8a b1       	in	r24, 0x0a	; 10
 426:	82 60       	ori	r24, 0x02	; 2
 428:	02 c0       	rjmp	.+4      	; 0x42e <_Z12digitalWriteii+0x38>
 42a:	8a b1       	in	r24, 0x0a	; 10
 42c:	8d 7f       	andi	r24, 0xFD	; 253
 42e:	8b b9       	out	0x0b, r24	; 11
 430:	08 95       	ret
        case 4:  PORTD = mode==1?  DDRD | (1<< PD2) :   DDRD & ~(1<<PD2);    break;
 432:	61 30       	cpi	r22, 0x01	; 1
 434:	71 05       	cpc	r23, r1
 436:	19 f4       	brne	.+6      	; 0x43e <_Z12digitalWriteii+0x48>
 438:	8a b1       	in	r24, 0x0a	; 10
 43a:	84 60       	ori	r24, 0x04	; 4
 43c:	02 c0       	rjmp	.+4      	; 0x442 <_Z12digitalWriteii+0x4c>
 43e:	8a b1       	in	r24, 0x0a	; 10
 440:	8b 7f       	andi	r24, 0xFB	; 251
 442:	8b b9       	out	0x0b, r24	; 11
 444:	08 95       	ret
        case 5:  PORTD = mode==1?  DDRD | (1<< PD3) :   DDRD & ~(1<<PD3);    break;
 446:	61 30       	cpi	r22, 0x01	; 1
 448:	71 05       	cpc	r23, r1
 44a:	19 f4       	brne	.+6      	; 0x452 <_Z12digitalWriteii+0x5c>
 44c:	8a b1       	in	r24, 0x0a	; 10
 44e:	88 60       	ori	r24, 0x08	; 8
 450:	02 c0       	rjmp	.+4      	; 0x456 <_Z12digitalWriteii+0x60>
 452:	8a b1       	in	r24, 0x0a	; 10
 454:	87 7f       	andi	r24, 0xF7	; 247
 456:	8b b9       	out	0x0b, r24	; 11
 458:	08 95       	ret
        case 6:  PORTD = mode==1?  DDRD | (1<< PD4) :   DDRD & ~(1<<PD4);    break;
 45a:	61 30       	cpi	r22, 0x01	; 1
 45c:	71 05       	cpc	r23, r1
 45e:	19 f4       	brne	.+6      	; 0x466 <_Z12digitalWriteii+0x70>
 460:	8a b1       	in	r24, 0x0a	; 10
 462:	80 61       	ori	r24, 0x10	; 16
 464:	02 c0       	rjmp	.+4      	; 0x46a <_Z12digitalWriteii+0x74>
 466:	8a b1       	in	r24, 0x0a	; 10
 468:	8f 7e       	andi	r24, 0xEF	; 239
 46a:	8b b9       	out	0x0b, r24	; 11
 46c:	08 95       	ret
        case 11: PORTD = mode==1?  DDRD | (1<< PD5) :   DDRD & ~(1<<PD5);    break;
 46e:	61 30       	cpi	r22, 0x01	; 1
 470:	71 05       	cpc	r23, r1
 472:	19 f4       	brne	.+6      	; 0x47a <_Z12digitalWriteii+0x84>
 474:	8a b1       	in	r24, 0x0a	; 10
 476:	80 62       	ori	r24, 0x20	; 32
 478:	02 c0       	rjmp	.+4      	; 0x47e <_Z12digitalWriteii+0x88>
 47a:	8a b1       	in	r24, 0x0a	; 10
 47c:	8f 7d       	andi	r24, 0xDF	; 223
 47e:	8b b9       	out	0x0b, r24	; 11
 480:	08 95       	ret
        case 12: PORTD = mode==1?  DDRD | (1<< PD6) :   DDRD & ~(1<<PD6);    break;
 482:	61 30       	cpi	r22, 0x01	; 1
 484:	71 05       	cpc	r23, r1
 486:	19 f4       	brne	.+6      	; 0x48e <_Z12digitalWriteii+0x98>
 488:	8a b1       	in	r24, 0x0a	; 10
 48a:	80 64       	ori	r24, 0x40	; 64
 48c:	02 c0       	rjmp	.+4      	; 0x492 <_Z12digitalWriteii+0x9c>
 48e:	8a b1       	in	r24, 0x0a	; 10
 490:	8f 7b       	andi	r24, 0xBF	; 191
 492:	8b b9       	out	0x0b, r24	; 11
 494:	08 95       	ret
        case 13: PORTD = mode==1?  DDRD | (1<< PD7) :   DDRD & ~(1<<PD7);    break;
 496:	61 30       	cpi	r22, 0x01	; 1
 498:	71 05       	cpc	r23, r1
 49a:	19 f4       	brne	.+6      	; 0x4a2 <_Z12digitalWriteii+0xac>
 49c:	8a b1       	in	r24, 0x0a	; 10
 49e:	80 68       	ori	r24, 0x80	; 128
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <_Z12digitalWriteii+0xb0>
 4a2:	8a b1       	in	r24, 0x0a	; 10
 4a4:	8f 77       	andi	r24, 0x7F	; 127
 4a6:	8b b9       	out	0x0b, r24	; 11
 4a8:	08 95       	ret

        // PORTB
        case 14: PORTB = mode==1?  DDRB | (1<< PB0) :   DDRB & ~(1<<PB0);    break;
 4aa:	61 30       	cpi	r22, 0x01	; 1
 4ac:	71 05       	cpc	r23, r1
 4ae:	19 f4       	brne	.+6      	; 0x4b6 <_Z12digitalWriteii+0xc0>
 4b0:	84 b1       	in	r24, 0x04	; 4
 4b2:	81 60       	ori	r24, 0x01	; 1
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <_Z12digitalWriteii+0xc4>
 4b6:	84 b1       	in	r24, 0x04	; 4
 4b8:	8e 7f       	andi	r24, 0xFE	; 254
 4ba:	85 b9       	out	0x05, r24	; 5
 4bc:	08 95       	ret
        case 15: PORTB = mode==1?  DDRB | (1<< PB1) :   DDRB & ~(1<<PB1);    break;
 4be:	61 30       	cpi	r22, 0x01	; 1
 4c0:	71 05       	cpc	r23, r1
 4c2:	19 f4       	brne	.+6      	; 0x4ca <_Z12digitalWriteii+0xd4>
 4c4:	84 b1       	in	r24, 0x04	; 4
 4c6:	82 60       	ori	r24, 0x02	; 2
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <_Z12digitalWriteii+0xd8>
 4ca:	84 b1       	in	r24, 0x04	; 4
 4cc:	8d 7f       	andi	r24, 0xFD	; 253
 4ce:	85 b9       	out	0x05, r24	; 5
 4d0:	08 95       	ret
        case 16: PORTB = mode==1?  DDRB | (1<< PB2) :   DDRB & ~(1<<PB2);    break;
 4d2:	61 30       	cpi	r22, 0x01	; 1
 4d4:	71 05       	cpc	r23, r1
 4d6:	19 f4       	brne	.+6      	; 0x4de <_Z12digitalWriteii+0xe8>
 4d8:	84 b1       	in	r24, 0x04	; 4
 4da:	84 60       	ori	r24, 0x04	; 4
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <_Z12digitalWriteii+0xec>
 4de:	84 b1       	in	r24, 0x04	; 4
 4e0:	8b 7f       	andi	r24, 0xFB	; 251
 4e2:	85 b9       	out	0x05, r24	; 5
 4e4:	08 95       	ret
        case 17: PORTB = mode==1?  DDRB | (1<< PB3) :   DDRB & ~(1<<PB3);    break;
 4e6:	61 30       	cpi	r22, 0x01	; 1
 4e8:	71 05       	cpc	r23, r1
 4ea:	19 f4       	brne	.+6      	; 0x4f2 <_Z12digitalWriteii+0xfc>
 4ec:	84 b1       	in	r24, 0x04	; 4
 4ee:	88 60       	ori	r24, 0x08	; 8
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <_Z12digitalWriteii+0x100>
 4f2:	84 b1       	in	r24, 0x04	; 4
 4f4:	87 7f       	andi	r24, 0xF7	; 247
 4f6:	85 b9       	out	0x05, r24	; 5
 4f8:	08 95       	ret
        case 18: PORTB = mode==1?  DDRB | (1<< PB4) :   DDRB & ~(1<<PB4);    break;
 4fa:	61 30       	cpi	r22, 0x01	; 1
 4fc:	71 05       	cpc	r23, r1
 4fe:	19 f4       	brne	.+6      	; 0x506 <_Z12digitalWriteii+0x110>
 500:	84 b1       	in	r24, 0x04	; 4
 502:	80 61       	ori	r24, 0x10	; 16
 504:	02 c0       	rjmp	.+4      	; 0x50a <_Z12digitalWriteii+0x114>
 506:	84 b1       	in	r24, 0x04	; 4
 508:	8f 7e       	andi	r24, 0xEF	; 239
 50a:	85 b9       	out	0x05, r24	; 5
 50c:	08 95       	ret
        case 19: PORTB = mode==1?  DDRB | (1<< PB5) :   DDRB & ~(1<<PB5);    break;
 50e:	61 30       	cpi	r22, 0x01	; 1
 510:	71 05       	cpc	r23, r1
 512:	19 f4       	brne	.+6      	; 0x51a <_Z12digitalWriteii+0x124>
 514:	84 b1       	in	r24, 0x04	; 4
 516:	80 62       	ori	r24, 0x20	; 32
 518:	02 c0       	rjmp	.+4      	; 0x51e <_Z12digitalWriteii+0x128>
 51a:	84 b1       	in	r24, 0x04	; 4
 51c:	8f 7d       	andi	r24, 0xDF	; 223
 51e:	85 b9       	out	0x05, r24	; 5
 520:	08 95       	ret
        case 9:  PORTB = mode==1?  DDRB | (1<< PB6) :   DDRB & ~(1<<PB6);    break;
 522:	61 30       	cpi	r22, 0x01	; 1
 524:	71 05       	cpc	r23, r1
 526:	19 f4       	brne	.+6      	; 0x52e <_Z12digitalWriteii+0x138>
 528:	84 b1       	in	r24, 0x04	; 4
 52a:	80 64       	ori	r24, 0x40	; 64
 52c:	02 c0       	rjmp	.+4      	; 0x532 <_Z12digitalWriteii+0x13c>
 52e:	84 b1       	in	r24, 0x04	; 4
 530:	8f 7b       	andi	r24, 0xBF	; 191
 532:	85 b9       	out	0x05, r24	; 5
 534:	08 95       	ret
        case 10: PORTB = mode==1?  DDRB | (1<< PB7) :   DDRB & ~(1<<PB7);    break;
 536:	61 30       	cpi	r22, 0x01	; 1
 538:	71 05       	cpc	r23, r1
 53a:	19 f4       	brne	.+6      	; 0x542 <_Z12digitalWriteii+0x14c>
 53c:	84 b1       	in	r24, 0x04	; 4
 53e:	80 68       	ori	r24, 0x80	; 128
 540:	02 c0       	rjmp	.+4      	; 0x546 <_Z12digitalWriteii+0x150>
 542:	84 b1       	in	r24, 0x04	; 4
 544:	8f 77       	andi	r24, 0x7F	; 127
 546:	85 b9       	out	0x05, r24	; 5
 548:	08 95       	ret

        // PORT C
        case 23: PORTC = mode==1?  DDRC | (1<< PC0) :   DDRC & ~(1<<PB1);    break;
 54a:	61 30       	cpi	r22, 0x01	; 1
 54c:	71 05       	cpc	r23, r1
 54e:	19 f4       	brne	.+6      	; 0x556 <_Z12digitalWriteii+0x160>
 550:	87 b1       	in	r24, 0x07	; 7
 552:	81 60       	ori	r24, 0x01	; 1
 554:	02 c0       	rjmp	.+4      	; 0x55a <_Z12digitalWriteii+0x164>
 556:	87 b1       	in	r24, 0x07	; 7
 558:	8d 7f       	andi	r24, 0xFD	; 253
 55a:	88 b9       	out	0x08, r24	; 8
 55c:	08 95       	ret
        case 24: PORTC = mode==1?  DDRC | (1<< PC1) :   DDRC & ~(1<<PC1);    break;
 55e:	61 30       	cpi	r22, 0x01	; 1
 560:	71 05       	cpc	r23, r1
 562:	19 f4       	brne	.+6      	; 0x56a <_Z12digitalWriteii+0x174>
 564:	87 b1       	in	r24, 0x07	; 7
 566:	82 60       	ori	r24, 0x02	; 2
 568:	02 c0       	rjmp	.+4      	; 0x56e <_Z12digitalWriteii+0x178>
 56a:	87 b1       	in	r24, 0x07	; 7
 56c:	8d 7f       	andi	r24, 0xFD	; 253
 56e:	88 b9       	out	0x08, r24	; 8
 570:	08 95       	ret
        case 25: PORTC = mode==1?  DDRC | (1<< PC2) :   DDRC & ~(1<<PC2);    break;
 572:	61 30       	cpi	r22, 0x01	; 1
 574:	71 05       	cpc	r23, r1
 576:	19 f4       	brne	.+6      	; 0x57e <_Z12digitalWriteii+0x188>
 578:	87 b1       	in	r24, 0x07	; 7
 57a:	84 60       	ori	r24, 0x04	; 4
 57c:	02 c0       	rjmp	.+4      	; 0x582 <_Z12digitalWriteii+0x18c>
 57e:	87 b1       	in	r24, 0x07	; 7
 580:	8b 7f       	andi	r24, 0xFB	; 251
 582:	88 b9       	out	0x08, r24	; 8
 584:	08 95       	ret
        case 26: PORTC = mode==1?  DDRC | (1<< PC3) :   DDRC & ~(1<<PC3);    break;
 586:	61 30       	cpi	r22, 0x01	; 1
 588:	71 05       	cpc	r23, r1
 58a:	19 f4       	brne	.+6      	; 0x592 <_Z12digitalWriteii+0x19c>
 58c:	87 b1       	in	r24, 0x07	; 7
 58e:	88 60       	ori	r24, 0x08	; 8
 590:	02 c0       	rjmp	.+4      	; 0x596 <_Z12digitalWriteii+0x1a0>
 592:	87 b1       	in	r24, 0x07	; 7
 594:	87 7f       	andi	r24, 0xF7	; 247
 596:	88 b9       	out	0x08, r24	; 8
 598:	08 95       	ret
        case 27: PORTC = mode==1?  DDRC | (1<< PC4) :   DDRC & ~(1<<PC4);    break;
 59a:	61 30       	cpi	r22, 0x01	; 1
 59c:	71 05       	cpc	r23, r1
 59e:	19 f4       	brne	.+6      	; 0x5a6 <_Z12digitalWriteii+0x1b0>
 5a0:	87 b1       	in	r24, 0x07	; 7
 5a2:	80 61       	ori	r24, 0x10	; 16
 5a4:	02 c0       	rjmp	.+4      	; 0x5aa <_Z12digitalWriteii+0x1b4>
 5a6:	87 b1       	in	r24, 0x07	; 7
 5a8:	8f 7e       	andi	r24, 0xEF	; 239
 5aa:	88 b9       	out	0x08, r24	; 8
 5ac:	08 95       	ret
        case 28: PORTC = mode==1?  DDRC | (1<< PC5) :   DDRC & ~(1<<PC5);    break;
 5ae:	61 30       	cpi	r22, 0x01	; 1
 5b0:	71 05       	cpc	r23, r1
 5b2:	19 f4       	brne	.+6      	; 0x5ba <_Z12digitalWriteii+0x1c4>
 5b4:	87 b1       	in	r24, 0x07	; 7
 5b6:	80 62       	ori	r24, 0x20	; 32
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <_Z12digitalWriteii+0x1c8>
 5ba:	87 b1       	in	r24, 0x07	; 7
 5bc:	8f 7d       	andi	r24, 0xDF	; 223
 5be:	88 b9       	out	0x08, r24	; 8
 5c0:	08 95       	ret
        case 1:  PORTC = mode==1?  DDRC | (1<< PC6) :   DDRC & ~(1<<PC6);    break;
 5c2:	61 30       	cpi	r22, 0x01	; 1
 5c4:	71 05       	cpc	r23, r1
 5c6:	19 f4       	brne	.+6      	; 0x5ce <_Z12digitalWriteii+0x1d8>
 5c8:	87 b1       	in	r24, 0x07	; 7
 5ca:	80 64       	ori	r24, 0x40	; 64
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <_Z12digitalWriteii+0x1dc>
 5ce:	87 b1       	in	r24, 0x07	; 7
 5d0:	8f 7b       	andi	r24, 0xBF	; 191
 5d2:	88 b9       	out	0x08, r24	; 8
 5d4:	08 95       	ret

000005d6 <_ZN5MotorC1Eiiiiii>:
#include "Motor.h"

#include "common.h"


Motor::Motor(int EN1, int EN2, int I1, int I2, int I3, int I4)
 5d6:	6f 92       	push	r6
 5d8:	7f 92       	push	r7
 5da:	8f 92       	push	r8
 5dc:	9f 92       	push	r9
 5de:	af 92       	push	r10
 5e0:	bf 92       	push	r11
 5e2:	cf 92       	push	r12
 5e4:	df 92       	push	r13
 5e6:	ef 92       	push	r14
 5e8:	ff 92       	push	r15
 5ea:	0f 93       	push	r16
 5ec:	1f 93       	push	r17
 5ee:	cf 93       	push	r28
 5f0:	df 93       	push	r29
 5f2:	ec 01       	movw	r28, r24
 5f4:	4b 01       	movw	r8, r22
 5f6:	5a 01       	movw	r10, r20
 5f8:	39 01       	movw	r6, r18
{
    //ctor
    pinMode(EN1, INPUT); this->EN1 = EN1;
 5fa:	61 e0       	ldi	r22, 0x01	; 1
 5fc:	70 e0       	ldi	r23, 0x00	; 0
 5fe:	c4 01       	movw	r24, r8
 600:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>
 604:	99 82       	std	Y+1, r9	; 0x01
 606:	88 82       	st	Y, r8
    pinMode(EN2, INPUT); this->EN2 = EN2;
 608:	61 e0       	ldi	r22, 0x01	; 1
 60a:	70 e0       	ldi	r23, 0x00	; 0
 60c:	c5 01       	movw	r24, r10
 60e:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>
 612:	bb 82       	std	Y+3, r11	; 0x03
 614:	aa 82       	std	Y+2, r10	; 0x02

    pinMode(I1, OUTPUT); this->I1 = I1;
 616:	60 e0       	ldi	r22, 0x00	; 0
 618:	70 e0       	ldi	r23, 0x00	; 0
 61a:	c3 01       	movw	r24, r6
 61c:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>
 620:	7d 82       	std	Y+5, r7	; 0x05
 622:	6c 82       	std	Y+4, r6	; 0x04
    pinMode(I2, OUTPUT); this->I2 = I2;
 624:	60 e0       	ldi	r22, 0x00	; 0
 626:	70 e0       	ldi	r23, 0x00	; 0
 628:	c8 01       	movw	r24, r16
 62a:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>
 62e:	1f 83       	std	Y+7, r17	; 0x07
 630:	0e 83       	std	Y+6, r16	; 0x06
    pinMode(I3, OUTPUT); this->I3 = I3;
 632:	60 e0       	ldi	r22, 0x00	; 0
 634:	70 e0       	ldi	r23, 0x00	; 0
 636:	c7 01       	movw	r24, r14
 638:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>
 63c:	f9 86       	std	Y+9, r15	; 0x09
 63e:	e8 86       	std	Y+8, r14	; 0x08
    pinMode(I4, OUTPUT); this->I4 = I4;
 640:	60 e0       	ldi	r22, 0x00	; 0
 642:	70 e0       	ldi	r23, 0x00	; 0
 644:	c6 01       	movw	r24, r12
 646:	0e 94 22 01 	call	0x244	; 0x244 <_Z7pinModeii>
 64a:	db 86       	std	Y+11, r13	; 0x0b
 64c:	ca 86       	std	Y+10, r12	; 0x0a

    // Gambita pra teste
    digitalWrite(EN1, HIGH);
 64e:	61 e0       	ldi	r22, 0x01	; 1
 650:	70 e0       	ldi	r23, 0x00	; 0
 652:	c4 01       	movw	r24, r8
 654:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
    digitalWrite(EN2, HIGH);
 658:	61 e0       	ldi	r22, 0x01	; 1
 65a:	70 e0       	ldi	r23, 0x00	; 0
 65c:	c5 01       	movw	r24, r10
 65e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
}
 662:	df 91       	pop	r29
 664:	cf 91       	pop	r28
 666:	1f 91       	pop	r17
 668:	0f 91       	pop	r16
 66a:	ff 90       	pop	r15
 66c:	ef 90       	pop	r14
 66e:	df 90       	pop	r13
 670:	cf 90       	pop	r12
 672:	bf 90       	pop	r11
 674:	af 90       	pop	r10
 676:	9f 90       	pop	r9
 678:	8f 90       	pop	r8
 67a:	7f 90       	pop	r7
 67c:	6f 90       	pop	r6
 67e:	08 95       	ret

00000680 <_ZN5Motor4stopEv>:
void Motor::leftWheelBackward(){
    stop();
    digitalWrite(this->I2, HIGH);
}

void Motor::stop(){
 680:	cf 93       	push	r28
 682:	df 93       	push	r29
 684:	ec 01       	movw	r28, r24
    digitalWrite(this->I1, LOW);
 686:	60 e0       	ldi	r22, 0x00	; 0
 688:	70 e0       	ldi	r23, 0x00	; 0
 68a:	8c 81       	ldd	r24, Y+4	; 0x04
 68c:	9d 81       	ldd	r25, Y+5	; 0x05
 68e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
    digitalWrite(this->I2, LOW);
 692:	60 e0       	ldi	r22, 0x00	; 0
 694:	70 e0       	ldi	r23, 0x00	; 0
 696:	8e 81       	ldd	r24, Y+6	; 0x06
 698:	9f 81       	ldd	r25, Y+7	; 0x07
 69a:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
    digitalWrite(this->I3, LOW);
 69e:	60 e0       	ldi	r22, 0x00	; 0
 6a0:	70 e0       	ldi	r23, 0x00	; 0
 6a2:	88 85       	ldd	r24, Y+8	; 0x08
 6a4:	99 85       	ldd	r25, Y+9	; 0x09
 6a6:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
    digitalWrite(this->I4, LOW);
 6aa:	60 e0       	ldi	r22, 0x00	; 0
 6ac:	70 e0       	ldi	r23, 0x00	; 0
 6ae:	8a 85       	ldd	r24, Y+10	; 0x0a
 6b0:	9b 85       	ldd	r25, Y+11	; 0x0b
 6b2:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
}
 6b6:	df 91       	pop	r29
 6b8:	cf 91       	pop	r28
 6ba:	08 95       	ret

000006bc <_ZN5Motor7forwardEv>:
    // Gambita pra teste
    digitalWrite(EN1, HIGH);
    digitalWrite(EN2, HIGH);
}

void Motor::forward(){
 6bc:	cf 93       	push	r28
 6be:	df 93       	push	r29
 6c0:	ec 01       	movw	r28, r24
    stop();
 6c2:	0e 94 40 03 	call	0x680	; 0x680 <_ZN5Motor4stopEv>
    digitalWrite(this->I1, HIGH);
 6c6:	61 e0       	ldi	r22, 0x01	; 1
 6c8:	70 e0       	ldi	r23, 0x00	; 0
 6ca:	8c 81       	ldd	r24, Y+4	; 0x04
 6cc:	9d 81       	ldd	r25, Y+5	; 0x05
 6ce:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
    digitalWrite(this->I3, HIGH);
 6d2:	61 e0       	ldi	r22, 0x01	; 1
 6d4:	70 e0       	ldi	r23, 0x00	; 0
 6d6:	88 85       	ldd	r24, Y+8	; 0x08
 6d8:	99 85       	ldd	r25, Y+9	; 0x09
 6da:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
}
 6de:	df 91       	pop	r29
 6e0:	cf 91       	pop	r28
 6e2:	08 95       	ret

000006e4 <_ZN5Motor8backwardEv>:
void Motor::backward(){
 6e4:	cf 93       	push	r28
 6e6:	df 93       	push	r29
 6e8:	ec 01       	movw	r28, r24
    stop();
 6ea:	0e 94 40 03 	call	0x680	; 0x680 <_ZN5Motor4stopEv>
    digitalWrite(this->I2, HIGH);
 6ee:	61 e0       	ldi	r22, 0x01	; 1
 6f0:	70 e0       	ldi	r23, 0x00	; 0
 6f2:	8e 81       	ldd	r24, Y+6	; 0x06
 6f4:	9f 81       	ldd	r25, Y+7	; 0x07
 6f6:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
    digitalWrite(this->I4, HIGH);
 6fa:	61 e0       	ldi	r22, 0x01	; 1
 6fc:	70 e0       	ldi	r23, 0x00	; 0
 6fe:	8a 85       	ldd	r24, Y+10	; 0x0a
 700:	9b 85       	ldd	r25, Y+11	; 0x0b
 702:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
}
 706:	df 91       	pop	r29
 708:	cf 91       	pop	r28
 70a:	08 95       	ret

0000070c <_ZN5Motor16rigtWheelForwardEv>:

void Motor::rigtWheelForward(){
 70c:	cf 93       	push	r28
 70e:	df 93       	push	r29
 710:	ec 01       	movw	r28, r24
    stop();
 712:	0e 94 40 03 	call	0x680	; 0x680 <_ZN5Motor4stopEv>
    digitalWrite(this->I3, HIGH);
 716:	61 e0       	ldi	r22, 0x01	; 1
 718:	70 e0       	ldi	r23, 0x00	; 0
 71a:	88 85       	ldd	r24, Y+8	; 0x08
 71c:	99 85       	ldd	r25, Y+9	; 0x09
 71e:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
}
 722:	df 91       	pop	r29
 724:	cf 91       	pop	r28
 726:	08 95       	ret

00000728 <_ZN5Motor18rightWheelBackwardEv>:

void Motor::rightWheelBackward(){
 728:	cf 93       	push	r28
 72a:	df 93       	push	r29
 72c:	ec 01       	movw	r28, r24
    stop();
 72e:	0e 94 40 03 	call	0x680	; 0x680 <_ZN5Motor4stopEv>
    digitalWrite(this->I4, HIGH);
 732:	61 e0       	ldi	r22, 0x01	; 1
 734:	70 e0       	ldi	r23, 0x00	; 0
 736:	8a 85       	ldd	r24, Y+10	; 0x0a
 738:	9b 85       	ldd	r25, Y+11	; 0x0b
 73a:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
}
 73e:	df 91       	pop	r29
 740:	cf 91       	pop	r28
 742:	08 95       	ret

00000744 <_ZN5Motor16leftWheelForwardEv>:

void Motor::leftWheelForward(){
 744:	cf 93       	push	r28
 746:	df 93       	push	r29
 748:	ec 01       	movw	r28, r24
    stop();
 74a:	0e 94 40 03 	call	0x680	; 0x680 <_ZN5Motor4stopEv>
    digitalWrite(this->I1, HIGH);
 74e:	61 e0       	ldi	r22, 0x01	; 1
 750:	70 e0       	ldi	r23, 0x00	; 0
 752:	8c 81       	ldd	r24, Y+4	; 0x04
 754:	9d 81       	ldd	r25, Y+5	; 0x05
 756:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
}
 75a:	df 91       	pop	r29
 75c:	cf 91       	pop	r28
 75e:	08 95       	ret

00000760 <_ZN5Motor17leftWheelBackwardEv>:

void Motor::leftWheelBackward(){
 760:	cf 93       	push	r28
 762:	df 93       	push	r29
 764:	ec 01       	movw	r28, r24
    stop();
 766:	0e 94 40 03 	call	0x680	; 0x680 <_ZN5Motor4stopEv>
    digitalWrite(this->I2, HIGH);
 76a:	61 e0       	ldi	r22, 0x01	; 1
 76c:	70 e0       	ldi	r23, 0x00	; 0
 76e:	8e 81       	ldd	r24, Y+6	; 0x06
 770:	9f 81       	ldd	r25, Y+7	; 0x07
 772:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <_Z12digitalWriteii>
}
 776:	df 91       	pop	r29
 778:	cf 91       	pop	r28
 77a:	08 95       	ret

0000077c <_ZN5Motor18setRightWheelSpeedEj>:
    digitalWrite(this->I3, LOW);
    digitalWrite(this->I4, LOW);
}

void Motor::setRightWheelSpeed(uint16_t speed){
    if(speed > 255){
 77c:	6f 3f       	cpi	r22, 0xFF	; 255
 77e:	71 05       	cpc	r23, r1
 780:	39 f0       	breq	.+14     	; 0x790 <_ZN5Motor18setRightWheelSpeedEj+0x14>
 782:	30 f0       	brcs	.+12     	; 0x790 <_ZN5Motor18setRightWheelSpeedEj+0x14>
        this->rightWheelSpeed = 255;
 784:	2f ef       	ldi	r18, 0xFF	; 255
 786:	30 e0       	ldi	r19, 0x00	; 0
 788:	fc 01       	movw	r30, r24
 78a:	35 87       	std	Z+13, r19	; 0x0d
 78c:	24 87       	std	Z+12, r18	; 0x0c
 78e:	08 95       	ret
    }
    else{
        this->rightWheelSpeed = speed;
 790:	fc 01       	movw	r30, r24
 792:	75 87       	std	Z+13, r23	; 0x0d
 794:	64 87       	std	Z+12, r22	; 0x0c
 796:	08 95       	ret

00000798 <_ZN5Motor17setLeftWheelSpeedEj>:
    }
}

void Motor::setLeftWheelSpeed(uint16_t speed){
    if(speed > 255){
 798:	6f 3f       	cpi	r22, 0xFF	; 255
 79a:	71 05       	cpc	r23, r1
 79c:	39 f0       	breq	.+14     	; 0x7ac <_ZN5Motor17setLeftWheelSpeedEj+0x14>
 79e:	30 f0       	brcs	.+12     	; 0x7ac <_ZN5Motor17setLeftWheelSpeedEj+0x14>
        this->leftWheelSpeed = 255;
 7a0:	2f ef       	ldi	r18, 0xFF	; 255
 7a2:	30 e0       	ldi	r19, 0x00	; 0
 7a4:	fc 01       	movw	r30, r24
 7a6:	37 87       	std	Z+15, r19	; 0x0f
 7a8:	26 87       	std	Z+14, r18	; 0x0e
 7aa:	08 95       	ret
    }
    else{
        this->leftWheelSpeed = speed;
 7ac:	fc 01       	movw	r30, r24
 7ae:	77 87       	std	Z+15, r23	; 0x0f
 7b0:	66 87       	std	Z+14, r22	; 0x0e
 7b2:	08 95       	ret

000007b4 <_Z10pwm_enable11PWM_CHANNEL>:
#include "pwm.h"


// Enable PWM channels
void pwm_enable(enum PWM_CHANNEL channel) {
	if (channel & CHAN_OC0A) TCCR0A |= 1<<COM0A1;
 7b4:	80 ff       	sbrs	r24, 0
 7b6:	03 c0       	rjmp	.+6      	; 0x7be <_Z10pwm_enable11PWM_CHANNEL+0xa>
 7b8:	94 b5       	in	r25, 0x24	; 36
 7ba:	90 68       	ori	r25, 0x80	; 128
 7bc:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC0B) TCCR0A |= 1<<COM0B1;
 7be:	81 ff       	sbrs	r24, 1
 7c0:	03 c0       	rjmp	.+6      	; 0x7c8 <_Z10pwm_enable11PWM_CHANNEL+0x14>
 7c2:	94 b5       	in	r25, 0x24	; 36
 7c4:	90 62       	ori	r25, 0x20	; 32
 7c6:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC1A) TCCR1A |= 1<<COM1A1;
 7c8:	84 ff       	sbrs	r24, 4
 7ca:	05 c0       	rjmp	.+10     	; 0x7d6 <_Z10pwm_enable11PWM_CHANNEL+0x22>
 7cc:	e0 e8       	ldi	r30, 0x80	; 128
 7ce:	f0 e0       	ldi	r31, 0x00	; 0
 7d0:	90 81       	ld	r25, Z
 7d2:	90 68       	ori	r25, 0x80	; 128
 7d4:	90 83       	st	Z, r25
	if (channel & CHAN_OC1B) TCCR1A |= 1<<COM1B1;
 7d6:	85 ff       	sbrs	r24, 5
 7d8:	05 c0       	rjmp	.+10     	; 0x7e4 <_Z10pwm_enable11PWM_CHANNEL+0x30>
 7da:	e0 e8       	ldi	r30, 0x80	; 128
 7dc:	f0 e0       	ldi	r31, 0x00	; 0
 7de:	90 81       	ld	r25, Z
 7e0:	90 62       	ori	r25, 0x20	; 32
 7e2:	90 83       	st	Z, r25
	if (channel & CHAN_OC2A) TCCR2A |= 1<<COM2A1;
 7e4:	82 ff       	sbrs	r24, 2
 7e6:	05 c0       	rjmp	.+10     	; 0x7f2 <_Z10pwm_enable11PWM_CHANNEL+0x3e>
 7e8:	e0 eb       	ldi	r30, 0xB0	; 176
 7ea:	f0 e0       	ldi	r31, 0x00	; 0
 7ec:	90 81       	ld	r25, Z
 7ee:	90 68       	ori	r25, 0x80	; 128
 7f0:	90 83       	st	Z, r25
	if (channel & CHAN_OC2B) TCCR2A |= 1<<COM2B1;
 7f2:	83 ff       	sbrs	r24, 3
 7f4:	05 c0       	rjmp	.+10     	; 0x800 <_Z10pwm_enable11PWM_CHANNEL+0x4c>
 7f6:	e0 eb       	ldi	r30, 0xB0	; 176
 7f8:	f0 e0       	ldi	r31, 0x00	; 0
 7fa:	80 81       	ld	r24, Z
 7fc:	80 62       	ori	r24, 0x20	; 32
 7fe:	80 83       	st	Z, r24
 800:	08 95       	ret

00000802 <_Z11pwm_disable11PWM_CHANNEL>:
}
// Disable PWM channels
void pwm_disable(enum PWM_CHANNEL channel) {
	if (channel & CHAN_OC0A) TCCR0A &= ~(1<<COM0A1);
 802:	80 ff       	sbrs	r24, 0
 804:	03 c0       	rjmp	.+6      	; 0x80c <_Z11pwm_disable11PWM_CHANNEL+0xa>
 806:	94 b5       	in	r25, 0x24	; 36
 808:	9f 77       	andi	r25, 0x7F	; 127
 80a:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC0B) TCCR0A &= ~(1<<COM0B1);
 80c:	81 ff       	sbrs	r24, 1
 80e:	03 c0       	rjmp	.+6      	; 0x816 <_Z11pwm_disable11PWM_CHANNEL+0x14>
 810:	94 b5       	in	r25, 0x24	; 36
 812:	9f 7d       	andi	r25, 0xDF	; 223
 814:	94 bd       	out	0x24, r25	; 36
	if (channel & CHAN_OC1A) TCCR1A &= ~(1<<COM1A1);
 816:	84 ff       	sbrs	r24, 4
 818:	05 c0       	rjmp	.+10     	; 0x824 <_Z11pwm_disable11PWM_CHANNEL+0x22>
 81a:	e0 e8       	ldi	r30, 0x80	; 128
 81c:	f0 e0       	ldi	r31, 0x00	; 0
 81e:	90 81       	ld	r25, Z
 820:	9f 77       	andi	r25, 0x7F	; 127
 822:	90 83       	st	Z, r25
	if (channel & CHAN_OC1B) TCCR1A &= ~(1<<COM1B1);
 824:	85 ff       	sbrs	r24, 5
 826:	05 c0       	rjmp	.+10     	; 0x832 <_Z11pwm_disable11PWM_CHANNEL+0x30>
 828:	e0 e8       	ldi	r30, 0x80	; 128
 82a:	f0 e0       	ldi	r31, 0x00	; 0
 82c:	90 81       	ld	r25, Z
 82e:	9f 7d       	andi	r25, 0xDF	; 223
 830:	90 83       	st	Z, r25
	if (channel & CHAN_OC2A) TCCR2A &= ~(1<<COM2A1);
 832:	82 ff       	sbrs	r24, 2
 834:	05 c0       	rjmp	.+10     	; 0x840 <_Z11pwm_disable11PWM_CHANNEL+0x3e>
 836:	e0 eb       	ldi	r30, 0xB0	; 176
 838:	f0 e0       	ldi	r31, 0x00	; 0
 83a:	90 81       	ld	r25, Z
 83c:	9f 77       	andi	r25, 0x7F	; 127
 83e:	90 83       	st	Z, r25
	if (channel & CHAN_OC2B) TCCR2A &= ~(1<<COM2B1);
 840:	83 ff       	sbrs	r24, 3
 842:	05 c0       	rjmp	.+10     	; 0x84e <_Z11pwm_disable11PWM_CHANNEL+0x4c>
 844:	e0 eb       	ldi	r30, 0xB0	; 176
 846:	f0 e0       	ldi	r31, 0x00	; 0
 848:	80 81       	ld	r24, Z
 84a:	8f 7d       	andi	r24, 0xDF	; 223
 84c:	80 83       	st	Z, r24
 84e:	08 95       	ret

00000850 <_Z13pwm_dutycycle11PWM_CHANNELh>:
}

// Sets the channel brightness
void pwm_dutycycle(enum PWM_CHANNEL channel, uint8_t dutycycle) {
	if (channel & CHAN_OC0A) OCR0A = dutycycle;
 850:	80 fd       	sbrc	r24, 0
 852:	67 bd       	out	0x27, r22	; 39
	if (channel & CHAN_OC0B) OCR0B = dutycycle;
 854:	81 fd       	sbrc	r24, 1
 856:	68 bd       	out	0x28, r22	; 40
	if (channel & CHAN_OC1A) OCR1A = dutycycle;
 858:	84 ff       	sbrs	r24, 4
 85a:	06 c0       	rjmp	.+12     	; 0x868 <_Z13pwm_dutycycle11PWM_CHANNELh+0x18>
 85c:	26 2f       	mov	r18, r22
 85e:	30 e0       	ldi	r19, 0x00	; 0
 860:	30 93 89 00 	sts	0x0089, r19
 864:	20 93 88 00 	sts	0x0088, r18
	if (channel & CHAN_OC1B) OCR1B = dutycycle;
 868:	85 ff       	sbrs	r24, 5
 86a:	06 c0       	rjmp	.+12     	; 0x878 <_Z13pwm_dutycycle11PWM_CHANNELh+0x28>
 86c:	26 2f       	mov	r18, r22
 86e:	30 e0       	ldi	r19, 0x00	; 0
 870:	30 93 8b 00 	sts	0x008B, r19
 874:	20 93 8a 00 	sts	0x008A, r18
	if (channel & CHAN_OC2A) OCR2A = dutycycle;
 878:	82 fd       	sbrc	r24, 2
 87a:	60 93 b3 00 	sts	0x00B3, r22
	if (channel & CHAN_OC2B) OCR2B = dutycycle;
 87e:	83 fd       	sbrc	r24, 3
 880:	60 93 b4 00 	sts	0x00B4, r22
 884:	08 95       	ret

00000886 <_Z14pwm_initialize11PWM_CHANNEL>:
    // Set mode of operation to FastPWM
    // Set clock source (prescaler)
    // Set to 50% duty cycle
    // 4 PWM channel outputs

	if (channel & CHAN_OC0A){
 886:	80 ff       	sbrs	r24, 0
 888:	0c c0       	rjmp	.+24     	; 0x8a2 <_Z14pwm_initialize11PWM_CHANNEL+0x1c>
        TCCR0A |= (1<<WGM00 | 1<<WGM01);
 88a:	94 b5       	in	r25, 0x24	; 36
 88c:	93 60       	ori	r25, 0x03	; 3
 88e:	94 bd       	out	0x24, r25	; 36
        TCCR0B |= (1<<CS01);
 890:	95 b5       	in	r25, 0x25	; 37
 892:	92 60       	ori	r25, 0x02	; 2
 894:	95 bd       	out	0x25, r25	; 37

        OCR2A = 0x00;
 896:	10 92 b3 00 	sts	0x00B3, r1
        OCR2B = 0x00;
 89a:	10 92 b4 00 	sts	0x00B4, r1

        DDRD |= 1<<PD5; // OC0B
 89e:	55 9a       	sbi	0x0a, 5	; 10
        DDRD |= 1<<PD6; // OC0A
 8a0:	56 9a       	sbi	0x0a, 6	; 10
	}
	if (channel & CHAN_OC0B) {
        //Not implemented yet
	}
	if (channel & CHAN_OC1A) {
 8a2:	84 ff       	sbrs	r24, 4
 8a4:	14 c0       	rjmp	.+40     	; 0x8ce <_Z14pwm_initialize11PWM_CHANNEL+0x48>
        TCCR1A |= (1<<WGM10 | 1<<WGM11);
 8a6:	e0 e8       	ldi	r30, 0x80	; 128
 8a8:	f0 e0       	ldi	r31, 0x00	; 0
 8aa:	90 81       	ld	r25, Z
 8ac:	93 60       	ori	r25, 0x03	; 3
 8ae:	90 83       	st	Z, r25
        TCCR1B |= (1<<CS01);
 8b0:	e1 e8       	ldi	r30, 0x81	; 129
 8b2:	f0 e0       	ldi	r31, 0x00	; 0
 8b4:	90 81       	ld	r25, Z
 8b6:	92 60       	ori	r25, 0x02	; 2
 8b8:	90 83       	st	Z, r25

        OCR1A = 0x00;
 8ba:	10 92 89 00 	sts	0x0089, r1
 8be:	10 92 88 00 	sts	0x0088, r1
        OCR1B = 0x00;
 8c2:	10 92 8b 00 	sts	0x008B, r1
 8c6:	10 92 8a 00 	sts	0x008A, r1

        DDRB |= 1<<PB1; // OC1A
 8ca:	21 9a       	sbi	0x04, 1	; 4
        DDRB |= 1<<PD2; // OC1B
 8cc:	22 9a       	sbi	0x04, 2	; 4

	}
	if (channel & CHAN_OC1B) {
        //Not implemented yet
	}
	if (channel & CHAN_OC2A) {
 8ce:	82 ff       	sbrs	r24, 2
 8d0:	0e c0       	rjmp	.+28     	; 0x8ee <_Z14pwm_initialize11PWM_CHANNEL+0x68>
        TCCR2A |= (1<<WGM20 | 1<<WGM21);
 8d2:	e0 eb       	ldi	r30, 0xB0	; 176
 8d4:	f0 e0       	ldi	r31, 0x00	; 0
 8d6:	80 81       	ld	r24, Z
 8d8:	83 60       	ori	r24, 0x03	; 3
 8da:	80 83       	st	Z, r24
        TCCR2B |= (1<<CS21);
 8dc:	e1 eb       	ldi	r30, 0xB1	; 177
 8de:	f0 e0       	ldi	r31, 0x00	; 0
 8e0:	80 81       	ld	r24, Z
 8e2:	82 60       	ori	r24, 0x02	; 2
 8e4:	80 83       	st	Z, r24

        OCR0A = 0x00;
 8e6:	17 bc       	out	0x27, r1	; 39
        OCR0B = 0x00;
 8e8:	18 bc       	out	0x28, r1	; 40

        DDRB |= 1<<PB3; // OC2A
 8ea:	23 9a       	sbi	0x04, 3	; 4
        DDRD |= 1<<PD3; // OC2B
 8ec:	53 9a       	sbi	0x0a, 3	; 10
 8ee:	08 95       	ret

000008f0 <__mulsi3>:
 8f0:	db 01       	movw	r26, r22
 8f2:	8f 93       	push	r24
 8f4:	9f 93       	push	r25
 8f6:	0e 94 ad 04 	call	0x95a	; 0x95a <__muluhisi3>
 8fa:	bf 91       	pop	r27
 8fc:	af 91       	pop	r26
 8fe:	a2 9f       	mul	r26, r18
 900:	80 0d       	add	r24, r0
 902:	91 1d       	adc	r25, r1
 904:	a3 9f       	mul	r26, r19
 906:	90 0d       	add	r25, r0
 908:	b2 9f       	mul	r27, r18
 90a:	90 0d       	add	r25, r0
 90c:	11 24       	eor	r1, r1
 90e:	08 95       	ret

00000910 <__divmodsi4>:
 910:	05 2e       	mov	r0, r21
 912:	97 fb       	bst	r25, 7
 914:	1e f4       	brtc	.+6      	; 0x91c <__divmodsi4+0xc>
 916:	00 94       	com	r0
 918:	0e 94 9f 04 	call	0x93e	; 0x93e <__negsi2>
 91c:	57 fd       	sbrc	r21, 7
 91e:	07 d0       	rcall	.+14     	; 0x92e <__divmodsi4_neg2>
 920:	0e 94 b8 04 	call	0x970	; 0x970 <__udivmodsi4>
 924:	07 fc       	sbrc	r0, 7
 926:	03 d0       	rcall	.+6      	; 0x92e <__divmodsi4_neg2>
 928:	4e f4       	brtc	.+18     	; 0x93c <__divmodsi4_exit>
 92a:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__negsi2>

0000092e <__divmodsi4_neg2>:
 92e:	50 95       	com	r21
 930:	40 95       	com	r20
 932:	30 95       	com	r19
 934:	21 95       	neg	r18
 936:	3f 4f       	sbci	r19, 0xFF	; 255
 938:	4f 4f       	sbci	r20, 0xFF	; 255
 93a:	5f 4f       	sbci	r21, 0xFF	; 255

0000093c <__divmodsi4_exit>:
 93c:	08 95       	ret

0000093e <__negsi2>:
 93e:	90 95       	com	r25
 940:	80 95       	com	r24
 942:	70 95       	com	r23
 944:	61 95       	neg	r22
 946:	7f 4f       	sbci	r23, 0xFF	; 255
 948:	8f 4f       	sbci	r24, 0xFF	; 255
 94a:	9f 4f       	sbci	r25, 0xFF	; 255
 94c:	08 95       	ret

0000094e <__tablejump2__>:
 94e:	ee 0f       	add	r30, r30
 950:	ff 1f       	adc	r31, r31
 952:	05 90       	lpm	r0, Z+
 954:	f4 91       	lpm	r31, Z
 956:	e0 2d       	mov	r30, r0
 958:	09 94       	ijmp

0000095a <__muluhisi3>:
 95a:	0e 94 da 04 	call	0x9b4	; 0x9b4 <__umulhisi3>
 95e:	a5 9f       	mul	r26, r21
 960:	90 0d       	add	r25, r0
 962:	b4 9f       	mul	r27, r20
 964:	90 0d       	add	r25, r0
 966:	a4 9f       	mul	r26, r20
 968:	80 0d       	add	r24, r0
 96a:	91 1d       	adc	r25, r1
 96c:	11 24       	eor	r1, r1
 96e:	08 95       	ret

00000970 <__udivmodsi4>:
 970:	a1 e2       	ldi	r26, 0x21	; 33
 972:	1a 2e       	mov	r1, r26
 974:	aa 1b       	sub	r26, r26
 976:	bb 1b       	sub	r27, r27
 978:	fd 01       	movw	r30, r26
 97a:	0d c0       	rjmp	.+26     	; 0x996 <__udivmodsi4_ep>

0000097c <__udivmodsi4_loop>:
 97c:	aa 1f       	adc	r26, r26
 97e:	bb 1f       	adc	r27, r27
 980:	ee 1f       	adc	r30, r30
 982:	ff 1f       	adc	r31, r31
 984:	a2 17       	cp	r26, r18
 986:	b3 07       	cpc	r27, r19
 988:	e4 07       	cpc	r30, r20
 98a:	f5 07       	cpc	r31, r21
 98c:	20 f0       	brcs	.+8      	; 0x996 <__udivmodsi4_ep>
 98e:	a2 1b       	sub	r26, r18
 990:	b3 0b       	sbc	r27, r19
 992:	e4 0b       	sbc	r30, r20
 994:	f5 0b       	sbc	r31, r21

00000996 <__udivmodsi4_ep>:
 996:	66 1f       	adc	r22, r22
 998:	77 1f       	adc	r23, r23
 99a:	88 1f       	adc	r24, r24
 99c:	99 1f       	adc	r25, r25
 99e:	1a 94       	dec	r1
 9a0:	69 f7       	brne	.-38     	; 0x97c <__udivmodsi4_loop>
 9a2:	60 95       	com	r22
 9a4:	70 95       	com	r23
 9a6:	80 95       	com	r24
 9a8:	90 95       	com	r25
 9aa:	9b 01       	movw	r18, r22
 9ac:	ac 01       	movw	r20, r24
 9ae:	bd 01       	movw	r22, r26
 9b0:	cf 01       	movw	r24, r30
 9b2:	08 95       	ret

000009b4 <__umulhisi3>:
 9b4:	a2 9f       	mul	r26, r18
 9b6:	b0 01       	movw	r22, r0
 9b8:	b3 9f       	mul	r27, r19
 9ba:	c0 01       	movw	r24, r0
 9bc:	a3 9f       	mul	r26, r19
 9be:	70 0d       	add	r23, r0
 9c0:	81 1d       	adc	r24, r1
 9c2:	11 24       	eor	r1, r1
 9c4:	91 1d       	adc	r25, r1
 9c6:	b2 9f       	mul	r27, r18
 9c8:	70 0d       	add	r23, r0
 9ca:	81 1d       	adc	r24, r1
 9cc:	11 24       	eor	r1, r1
 9ce:	91 1d       	adc	r25, r1
 9d0:	08 95       	ret

000009d2 <_exit>:
 9d2:	f8 94       	cli

000009d4 <__stop_program>:
 9d4:	ff cf       	rjmp	.-2      	; 0x9d4 <__stop_program>
